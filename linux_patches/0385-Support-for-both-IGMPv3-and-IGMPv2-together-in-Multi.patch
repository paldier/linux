From b40b9553426fb499806e0e58414e2eb92809e57c Mon Sep 17 00:00:00 2001
From: thampan <joby.thampan@intel.com>
Date: Thu, 13 Dec 2018 23:14:51 +0800
Subject: [PATCH] Support for both IGMPv3 and IGMPv2 together in Multicast HW
 Table

---
 drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c |  4 ++++
 drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.h |  1 +
 drivers/net/ethernet/lantiq/switch-api/gsw_swmcast.c   | 10 +++++-----
 3 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
index 96a21bc505e6..b39c66faa00d 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
@@ -22709,6 +22709,9 @@ GSW_return_t GSW_BridgePortConfigSet(void *cdev, GSW_BRIDGE_portConfig_t *param)
 			tbl_prog_brdgeport_ingress.val[0] &= ~(1 << 13);
 	}
 
+#ifdef GSW_BRIDGE_PORT_SRC_IP_LOOKUP_DISABLE
+	tbl_prog_brdgeport_ingress.val[0] &= ~(1 << 9);
+#else
 	if (param->eMask & GSW_BRIDGE_PORT_CONFIG_MASK_MC_SRC_IP_LOOKUP) {
 		/* 0- disable , 1 - enable*/
 		if (param->bMcSrcIpLookupEnable)
@@ -22716,6 +22719,7 @@ GSW_return_t GSW_BridgePortConfigSet(void *cdev, GSW_BRIDGE_portConfig_t *param)
 		else
 			tbl_prog_brdgeport_ingress.val[0] &= ~(1 << 9);
 	}
+#endif
 
 	if (param->eMask & GSW_BRIDGE_PORT_CONFIG_MASK_MC_DEST_MAC_LOOKUP) {
 		/* 1- disable , 0 - enable*/
diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.h b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.h
index 2a759dd6ccb2..6fb1bb03780b 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.h
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.h
@@ -180,6 +180,7 @@ Where as CLEAR_FILL_CTRL_REG takes care of clear then fill.
 
 #define IS_VRSN_NOT_31(ver) \
 	((ver != LTQ_GSWIP_3_1))
+#define GSW_BRIDGE_PORT_SRC_IP_LOOKUP_DISABLE 1
 
 /*PHY Reg 0x4 */
 #define PHY_AN_ADV_10HDX 0x20
diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_swmcast.c b/drivers/net/ethernet/lantiq/switch-api/gsw_swmcast.c
index 10dc3b43e1bb..f61999fc05dc 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_swmcast.c
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_swmcast.c
@@ -224,7 +224,7 @@ int gsw_get_swmcast_entry(void *cdev, GSW_multicastTableRead_t *parm, u32 loc)
 	gsw_pce_table_read(cdev, &pcetable);
 
 	if (pcetable.valid == 1) {
-		parm->bExclSrcIP = ((pcetable.key[2] >> 14) & 0x3);
+		parm->eModeMember = ((pcetable.key[2] >> 14) & 0x3);
 
 		/* Pattern */
 		parm->nFID = pcetable.key[2] & 0x3F;
@@ -316,7 +316,7 @@ static int set_pce_hash_table(void *cdev, MCAST_HASHTBL *phtable, u32 loc)
 	pcetable.key[0] = phtable->first_idx;
 	pcetable.key[1] = phtable->nxt_idx;
 	pcetable.valid = phtable->valid;
-	pcetable.key[2] = ((phtable->excl_src_ip & 0x3) << 14);
+	pcetable.key[2] = ((phtable->src_ip_mode & 0x3) << 14);
 
 	/* Pattern */
 	pcetable.key[2] |= phtable->key.fid & 0x3F;
@@ -415,7 +415,7 @@ int gsw_insert_hashtable_entry(void *cdev, GSW_multicastTable_t *parm)
 
 	pattern.fid = parm->nFID;
 
-	hashidx = cal_hash(parm->eModeMember, &pattern, parm->eIPVersion);
+	hashidx = cal_hash(GSW_IGMP_MEMBER_EXCLUDE, &pattern, parm->eIPVersion);
 
 	ret = search_hashtable_entry(hashidx, &pattern, &found_loc);
 
@@ -556,7 +556,7 @@ int gsw_search_hashtable_entry(void *cdev, GSW_multicastTable_t *parm, GSW_multi
 
 	pattern.fid = parm->nFID;
 
-	hashidx = cal_hash(parm->eModeMember, &pattern, parm->eIPVersion);
+	hashidx = cal_hash(GSW_IGMP_MEMBER_EXCLUDE, &pattern, parm->eIPVersion);
 
 	ret = search_hashtable_entry(hashidx, &pattern, &found_loc);
 
@@ -735,7 +735,7 @@ int gsw_remove_hashtable_entry(void *cdev, GSW_multicastTable_t *parm)
 
 	pattern.fid = parm->nFID;
 
-	hashidx = cal_hash(parm->eModeMember, &pattern, parm->eIPVersion);
+	hashidx = cal_hash(GSW_IGMP_MEMBER_EXCLUDE, &pattern, parm->eIPVersion);
 
 	if (MATCH_FOUND != search_hashtable_entry(hashidx, &pattern, &loc))
 		return ENTRY_CANNOT_REMOVE;
