From 509471da78e7bf21e0e5759b535b8f2110706755 Mon Sep 17 00:00:00 2001
From: zhu yixin <yixin.zhu@intel.com>
Date: Tue, 10 Jul 2018 13:47:28 +0800
Subject: [PATCH] Add CAP_SYS_ADMIN check for led Set proper permission for led
 debugfs files.

---
 drivers/leds/leds-intel-sso.c | 25 +++++++++++++++----------
 1 file changed, 15 insertions(+), 10 deletions(-)

diff --git a/drivers/leds/leds-intel-sso.c b/drivers/leds/leds-intel-sso.c
index d61e5b8be634..69e90704d09a 100644
--- a/drivers/leds/leds-intel-sso.c
+++ b/drivers/leds/leds-intel-sso.c
@@ -4,19 +4,18 @@
  *
  * Copyright (C) 2018 Intel Corporation.
  */
+#include <linux/clk.h>
+#include <linux/debugfs.h>
+#include <linux/gpio/consumer.h>
+#include <linux/init.h>
 #include <linux/kernel.h>
+#include <linux/leds.h>
+#include <linux/mfd/syscon.h>
 #include <linux/module.h>
-#include <linux/init.h>
 #include <linux/of.h>
 #include <linux/property.h>
 #include <linux/platform_device.h>
-#include <linux/mfd/syscon.h>
 #include <linux/regmap.h>
-#include <linux/leds.h>
-#include <linux/clk.h>
-#include <linux/gpio/consumer.h>
-#include <linux/debugfs.h>
-#include <linux/proc_fs.h>
 #include <linux/uaccess.h>
 
 /* reg definition */
@@ -670,6 +669,9 @@ sso_led_create_write(struct file *s, const char __user *buffer,
 	struct device *dev;
 	int i;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	priv = file_inode(s)->i_private;
 	dev = priv->dev;
 	copy_from_user(buf, buffer, sizeof(buf) - 1);
@@ -751,6 +753,9 @@ sso_led_delete_write(struct file *s, const char __user *buffer,
 	struct sso_led *led;
 	int i;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	priv = file_inode(s)->i_private;
 	copy_from_user(buf, buffer, sizeof(buf) - 1);
 
@@ -866,17 +871,17 @@ static int sso_led_proc_init(struct sso_led_priv *priv)
 	if (!priv->debugfs)
 		return -ENOMEM;
 
-	file = debugfs_create_file("create", 0644, priv->debugfs,
+	file = debugfs_create_file("create", 0200, priv->debugfs,
 				   priv, &sso_led_create_fops);
 	if (!file)
 		goto __proc_err;
 
-	file = debugfs_create_file("delete", 0644, priv->debugfs,
+	file = debugfs_create_file("delete", 0200, priv->debugfs,
 				   priv, &sso_led_delete_fops);
 	if (!file)
 		goto __proc_err;
 
-	file = debugfs_create_file("show", 0644, priv->debugfs,
+	file = debugfs_create_file("show", 0400, priv->debugfs,
 				   priv, &sso_led_show_fops);
 	if (!file)
 		goto __proc_err;
