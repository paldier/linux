From fb238211172a8440c7a4090bd9c256e118f5f3a2 Mon Sep 17 00:00:00 2001
From: thampan <joby.thampan@intel.com>
Date: Fri, 6 Jul 2018 02:01:40 +0800
Subject: [PATCH] Bug Fix for External Timestamp Fifo not clearing

---
 drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
index 41fb48284397..34b868491523 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
@@ -332,8 +332,8 @@ static void tx_hwtstamp(struct mac_prv_data *pdata,
 		shhwtstamp->hwtstamp = ktime_get_real();
 
 	skb_complete_tx_timestamp(pdata->ptp_tx_skb, shhwtstamp);
-
 	skb_put(pdata->ptp_tx_skb, pdata->ptp_tx_skb->len);
+	pdata->ptp_tx_skb = NULL;
 }
 
 /* =========================== TX TIMESTAMP =========================== */
@@ -361,6 +361,9 @@ int xgmac_tx_hwts(void *pdev, struct sk_buff *skb)
 		if (IS_2STEP(pdata)) {
 			mac_dbg("2-Step\n");
 
+			if (pdata->ptp_tx_skb)
+				return -1;
+
 			pdata->ptp_tx_skb = skb_get(skb);
 
 			/* PTP Sync if we are Master TTSE=1 OSTC=0, OSTPA=0 */
@@ -378,7 +381,7 @@ int xgmac_tx_hwts(void *pdev, struct sk_buff *skb)
 
 			/* PTP Sync if we are Master TTSE=0 OSTC=1, OSTPA=0 */
 			rec_id = fifo_entry_add(pdev, 0, 1, 0, 0, 0, 0);
-			/* SNAPTYPESEL=0 TSMSTREN=1 TSEVNTEN = 0 */
+			/* SNAPTYPESEL=0 TSMSTREN=1 TSEVNTEN = 1 */
 			xgmac_ptp_txtstamp_mode(pdev, 0, 1, 1);
 		}
 
@@ -626,6 +629,11 @@ static void xgmac_extts_isr_handler(struct mac_prv_data *pdata,
 			event.index = 0;
 			event.timestamp = xgmac_get_auxtimestamp(pdata);
 			ptp_clock_event(pdata->ptp_clock, &event);
+		} else {
+			/* Make sure timestamp fifo is cleared
+			 * if any event happens after the testptp is exited
+			 */
+			xgmac_get_auxtimestamp(pdata);
 		}
 	}
 
@@ -635,6 +643,11 @@ static void xgmac_extts_isr_handler(struct mac_prv_data *pdata,
 			event.index = 1;
 			event.timestamp = xgmac_get_auxtimestamp(pdata);
 			ptp_clock_event(pdata->ptp_clock, &event);
+		} else {
+			/* Make sure timestamp fifo is cleared
+			 * if any event happens after the testptp is exited
+			 */
+			xgmac_get_auxtimestamp(pdata);
 		}
 	}
 
