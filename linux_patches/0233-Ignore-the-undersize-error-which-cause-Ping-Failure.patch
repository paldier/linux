From 8a9adccb5fc3339752e062454006125fe9b1790d Mon Sep 17 00:00:00 2001
From: thampan <joby.thampan@intel.com>
Date: Mon, 3 Sep 2018 10:51:01 +0800
Subject: [PATCH] Ignore the undersize error, which cause Ping Failure

---
 drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c | 20 ++++++++++++++++++++
 drivers/net/ethernet/lantiq/switch-api/gsw_defconf.h |  1 +
 .../net/ethernet/lantiq/switch-api/gsw_flow_core.c   |  5 +++--
 3 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c b/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c
index 2cac03bf439d..259a8c1624a1 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c
@@ -207,6 +207,26 @@ int gsw_get_def_bypass_qmap(struct core_ops *ops)
 	return 0;
 }
 
+int gsw_misc_config(struct core_ops *ops)
+{
+	GSW_register_t reg;
+	ethsw_api_dev_t *gswdev = GSW_PDATA_GET(ops);
+	int i = 0;
+	
+	/* Ignore Undersized frames and forward to CPU for the MAC ports 
+	 * MAC logical ports start from 2
+	 */
+	for (i = 0; i < gswdev->pnum; i++) {
+		reg.nRegAddr = ((SDMA_PRIO_USIGN_OFFSET + (2*6)) + (i * 6));
+		ops->gsw_common_ops.RegisterGet(ops, &reg);
+
+		reg.nData |= (1 << SDMA_PRIO_USIGN_SHIFT);
+		ops->gsw_common_ops.RegisterSet(ops, &reg);
+	}
+
+	return 0;
+}
+
 /* Default Qos WRED Config in switch */
 int gsw_qos_def_config(struct core_ops *ops)
 {
diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.h b/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.h
index 84e91922743f..0406ae05f6e7 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.h
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.h
@@ -54,6 +54,7 @@ int gsw_get_def_pce_qmap(struct core_ops *ops);
 int gsw_set_def_bypass_qmap(struct core_ops *ops, GSW_QoS_qMapMode_t q_map_mode);
 int gsw_get_def_bypass_qmap(struct core_ops *ops);
 int gsw_qos_def_config(struct core_ops *ops);
+int gsw_misc_config(struct core_ops *ops);
 
 int gsw_pmac_init_nondpu(void);
 int gsw_pmac_init_dpu(void);
diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
index 4e36d1fd259e..fefdb3b908bd 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
@@ -3104,6 +3104,7 @@ static GSW_return_t switch_core_init(void *cdev)
 		gsw_set_def_pce_qmap(cdev);
 		gsw_pmac_init_nondpu();
 		gsw_qos_def_config(cdev);
+		gsw_misc_config(cdev);
 #else
 
 		/*Emulation/PC tool*/
@@ -17176,7 +17177,7 @@ GSW_return_t GSW_CPU_PortCfgGet(void *cdev, GSW_CPU_PortCfg_t *parm)
 					goto UNLOCK_AND_RETURN;
 				}
 
-				parm->bFcsGenerate = ops->get_fcsgen(ops);
+				parm->bFcsTxOps = ops->get_fcsgen(ops);
 #endif
 			}
 		}
@@ -17309,7 +17310,7 @@ GSW_return_t GSW_CPU_PortCfgSet(void *cdev, GSW_CPU_PortCfg_t *parm)
 					goto UNLOCK_AND_RETURN;
 				}
 
-				ops->set_fcsgen(ops, 1);
+				ops->set_fcsgen(ops, parm->bFcsTxOps);
 #endif
 			}
 		}
