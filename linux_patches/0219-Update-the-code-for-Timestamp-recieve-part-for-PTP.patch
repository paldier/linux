From d2ede8ba7f79f6c0ff28ae3bc7d963c6ab9a0a55 Mon Sep 17 00:00:00 2001
From: thampan <joby.thampan@intel.com>
Date: Thu, 9 Aug 2018 17:19:56 +0800
Subject: [PATCH] Update the code for Timestamp recieve part for PTP

---
 .../net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c | 39 +++++++++++++++++-----
 1 file changed, 30 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
index e3cb28bba002..78625d7666d8 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
@@ -452,6 +452,23 @@ int xgmac_rx_hwts(void *pdev, struct sk_buff *skb)
 	return 0;
 }
 
+u64 ntoh64(const u64 *input)
+{
+	u64 rval;
+	u8 *data = (u8 *)&rval;
+
+	data[0] = *input >> 56;
+	data[1] = *input >> 48;
+	data[2] = *input >> 40;
+	data[3] = *input >> 32;
+	data[4] = *input >> 24;
+	data[5] = *input >> 16;
+	data[6] = *input >> 8;
+	data[7] = *input >> 0;
+
+	return rval;
+}
+
 /* Update the received timestamp in skbhwtstamp
  * which will be used by PTP app
  */
@@ -459,7 +476,6 @@ static void xgmac_get_rx_tstamp(struct mac_prv_data *pdata,
 				struct sk_buff *skb)
 {
 	__le64 regval;
-	__le64 tmpregval[2];
 	u32 ts_hdr_len = 8;
 	struct skb_shared_hwtstamps *shhwtstamp = NULL;
 	u64 ns;
@@ -475,21 +491,26 @@ static void xgmac_get_rx_tstamp(struct mac_prv_data *pdata,
 		ts_hdr_len = 10;
 
 	/* copy the bits out of the skb, and then trim the skb length */
-	skb_copy_bits(skb, skb->len - 8, tmpregval, 8);
+	skb_copy_bits(skb, skb->len - 8, regval, 8);
 	__pskb_trim(skb, skb->len - ts_hdr_len);
 
-	regval = tmpregval[0];
-
 
-	/* The timestamp is recorded in little endian format, and is stored at
-	 * the end of the packet.
+	/* The timestamp is recorded in below order from HW,
+	 * and is stored at the end of the packet.
 	 *
-	 * DWORD: N              N + 1      N + 2
-	 * Field: End of Packet  SYSTIMH    SYSTIML
+	 * DWORD: Year(2 byte)  Sec(4 Byte)	Nsec(4 Byte)
+	 * Field: 00  		SYSTIMH    	SYSTIML
 	 */
-	ns = le64_to_cpu(regval);
+
+#if !defined(CONFIG_CPU_BIG_ENDIAN)
+	regval = ntoh64(regval);
+#endif
+
+	ns = ((((regval & 0xffffffff00000000) >> 32) * NSEC_TO_SEC) +
+	      (regval & 0x00000000ffffffff));
 
 	printk("ns = %llx\n", ns);
+
 	shhwtstamp = skb_hwtstamps(skb);
 	memset(shhwtstamp, 0, sizeof(struct skb_shared_hwtstamps));
 	shhwtstamp->hwtstamp = ns_to_ktime(ns);
