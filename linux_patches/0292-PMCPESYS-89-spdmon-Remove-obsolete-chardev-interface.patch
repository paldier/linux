From 3575cca7390979d7e770d23df8b3bdb81babfbc5 Mon Sep 17 00:00:00 2001
From: Waldemar Rymarkiewicz <waldemarx.rymarkiewicz@intel.com>
Date: Mon, 24 Sep 2018 16:43:13 +0200
Subject: [PATCH] PMCPESYS-89: spdmon: Remove obsolete chardev interface

Speed monitor driver exposes chardev interface to userspace, but this is not
used anymore. User space apps shoudl use more secure sysfs interface.

Signed-off-by: Waldemar Rymarkiewicz <waldemarx.rymarkiewicz@intel.com>
---
 drivers/hwmon/spdmon.c | 212 ++-----------------------------------------------
 1 file changed, 6 insertions(+), 206 deletions(-)

diff --git a/drivers/hwmon/spdmon.c b/drivers/hwmon/spdmon.c
index 3601fdf46804..ce812006bbfe 100644
--- a/drivers/hwmon/spdmon.c
+++ b/drivers/hwmon/spdmon.c
@@ -7,17 +7,10 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; version 2 of the License.
  */
-#include <linux/kernel.h>
 #include <linux/module.h>
 #include <linux/platform_device.h>
 #include <linux/device.h>
-#include <linux/of.h>
-#include <linux/of_irq.h>
-#include <linux/seq_file.h>
-#include <linux/proc_fs.h>
 #include <lantiq_soc.h>
-#include <linux/cdev.h>
-#include <linux/interrupt.h>
 #include <linux/slab.h>
 #include <linux/err.h>
 #include <linux/hwmon.h>
@@ -25,12 +18,9 @@
 #include <linux/sysfs.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/kobject.h>
-#include <linux/clk.h>
 #include <linux/pm_opp.h>
 #include <linux/cpu.h>
 #include <lantiq.h>
-//#include <../arch/mips/lantiq/grx500/clk.h>
-#include <../arch/mips/include/asm/uaccess.h>
 
 /** driver version, major number */
 #define SPD_MON_VER_MAJOR	1
@@ -45,23 +35,11 @@
 #define _MKSTR(x)	_MKSTR_1(x)
 #endif
 
-
 /** driver version as string */
 #define SPD_MON_VER_STR	_MKSTR(SPD_MON_VER_MAJOR) "." \
 			_MKSTR(SPD_MON_VER_MINOR) "." \
 			_MKSTR(SPD_MON_VER_STEP)
 
-/* ioctl definition */
-#define TYPE 0xF4
-#define LTQ_SPD_MON_IOC_VERSION			_IOR(TYPE, 0, struct ioctl_arg*)
-#define LTQ_SPD_MON_IOC_READ			_IOR(TYPE, 1, struct ioctl_arg*)
-#define LTQ_SPD_MON_IOC_GET_SPD			_IOR(TYPE, 2, struct ioctl_arg*)
-#define LTQ_SPD_MON_IOC_SET_SAMPLE_RATE_SVT	_IOW(TYPE, 3, struct ioctl_arg*)
-#define LTQ_SPD_MON_IOC_SET_SAMPLE_RATE_LVT	_IOW(TYPE, 4, struct ioctl_arg*)
-#define LTQ_SPD_MON_IOC_SEL_CHANNEL		_IOW(TYPE, 5, struct ioctl_arg*)
-#define LTQ_SPD_MON_IOC_SET_THRESHOLD	_IOW(TYPE, 6, struct ioctl_th_arg*)
-#define LTQ_SPD_MON_IOC_WRITE			_IOW(TYPE, 7, struct ioctl_arg*)
-
 /* spd_mon register offset */
 #define SPD_MON_CON			0x0
 #define SPD_MON_SVT_DATA		0x4
@@ -86,9 +64,6 @@
 #define LTQ_SPD_MON_CH_MAX		3
 
 /* spd_mon defines */
-#define SPD_MON_VERSION LTQ_SPD_MON_VERSION(SPD_MON_VER_MAJOR, \
-						SPD_MON_VER_MINOR, \
-						SPD_MON_VER_STEP)
 #define SPD_MON_NAME			"spdmon"
 #define SPD_MON_DATA_TGL		0x20000
 
@@ -176,9 +151,6 @@ struct spd_cnt {
 static unsigned int base_freq_svt;
 static unsigned int base_freq_lvt;
 static struct spd_mon_ctrl ltq_spd_mon_ctrl;
-static dev_t dev_num;			/* first device number */
-static struct cdev c_dev;		/* character device structure */
-static struct class *cl;		/* the device class */
 static struct mutex spdmon_mutex;	/* mutex protection */
 struct kobject *threshold_svt_kobj;
 struct kobject *threshold_lvt_kobj;
@@ -811,15 +783,14 @@ static enum spd_class_t spd_mon_get_speed_class(struct spd_cnt *smcl)
 		/*Compare with threshold and Decide device class*/
 		/*Device is fast if SVT class are fast; */
 		if ((svt_spd >= spd_svt_f_low) && (svt_spd <= spd_svt_f_high))
-			fast++; /* FAST DEVICE */
+			fast++;
 
 		/*Device is Medium if SVT class is medium*/
 		if ((svt_spd >= spd_svt_m_low) && (svt_spd <= spd_svt_m_high))
-			med++; /* MEDIUM DEVICE */
+			med++;
 
 		if ((svt_spd >= spd_svt_s_low) && (svt_spd <= spd_svt_s_high))
-			slow++; /* SLOW DEVICE */
-
+			slow++;
 	}
 
 	if (smcl != NULL) {
@@ -857,7 +828,6 @@ static enum spd_class_t spd_mon_get_speed_class(struct spd_cnt *smcl)
 	else
 		spc = smon_fused;
 
-
 	/*now check this device class against the fused Vddmin*/
 	spc_vddmin = spd_mon_get_fused_vddmin_spc(spc);
 	if (spc_vddmin == UNDEF)
@@ -867,147 +837,13 @@ static enum spd_class_t spd_mon_get_speed_class(struct spd_cnt *smcl)
 }
 EXPORT_SYMBOL(spd_mon_get_speed_class);
 
-
-static int spd_mon_open(struct inode *inode, struct file *file)
-{
-	return 0;
-}
-
-static long spd_mon_ioctl(struct file *file,	unsigned int cmd,
-	unsigned long arg)
-{
-	int ret = 0;
-	u32 data = 0x0;
-	u32 offset = 0x0;
-	struct spd_mon_ctrl *pctrl;
-	u32 low = 0, high = 0;
-
-	pctrl = &ltq_spd_mon_ctrl;
-
-	switch (cmd) {
-	case LTQ_SPD_MON_IOC_VERSION:
-		data = SPD_MON_VERSION;
-		pr_debug("[%s]SPD_MON_VERSION=0x%x major=%d minor=%d step=%d\n", __func__, SPD_MON_VERSION, SPD_MON_VER_MAJOR, SPD_MON_VER_MINOR, SPD_MON_VER_STEP);
-		put_user(data, (u32 __user *) (arg+0x4));
-		break;
-	case LTQ_SPD_MON_IOC_SET_SAMPLE_RATE_SVT:
-		ret = get_user(offset, (u32 __user *) (arg));
-		ret = get_user(data, (u32 __user *) (arg+0x4));
-		pr_debug("[%s]parameter1=0x%x parameter2=0x%x\n", __func__, offset, data);
-		if (ret == 0) {
-			printk("[%s]Set Sample Rate SVT=%d\n", __func__, data);
-			spd_mon_set_sample_rate_svt(data);
-		} else {
-			dev_err(pctrl->dev, "get 0x%x from user space\n",
-				(unsigned int)arg);
-			ret = -EINVAL;
-		}
-		break;
-	case LTQ_SPD_MON_IOC_SET_SAMPLE_RATE_LVT:
-		ret = get_user(offset, (u32 __user *) (arg));
-		ret = get_user(data, (u32 __user *) (arg+0x4));
-		pr_debug("[%s]parameter1=0x%x parameter2=0x%x\n", __func__, offset, data);
-		if (ret == 0) {
-			spd_mon_set_sample_rate_lvt(data);
-			pr_debug("[%s]Set Sample Rate LVT=%d\n", __func__, data);
-		} else {
-			dev_err(pctrl->dev, "get 0x%x from user space\n",
-				(unsigned int)arg);
-			ret = -EINVAL;
-		}
-		break;
-	case LTQ_SPD_MON_IOC_SEL_CHANNEL:
-		ret = get_user(offset, (u32 __user *) (arg));
-		ret = get_user(data, (u32 __user *) (arg+0x4));
-		pr_debug("[%s]parameter1=0x%x parameter2=0x%x\n", __func__, offset, data);
-		if (ret == 0) {
-			spd_mon_sel_channel(data);
-			pr_debug("[%s]Select Channel=%d\n", __func__, data);
-		} else {
-			dev_err(pctrl->dev, "get 0x%x from user space\n",
-				(unsigned int)arg);
-			ret = -EINVAL;
-		}
-		break;
-	case LTQ_SPD_MON_IOC_SET_THRESHOLD:
-		ret = get_user(offset, (u32 __user *) (arg));
-		if (ret == 0) {
-			ret = get_user(data, (u32 __user *) (arg+0x4));
-			if (ret == 0) {
-				/* set threshold */
-				get_user(low, (u32 __user *) (arg+0x8));
-				get_user(high, (u32 __user *) (arg+0xc));
-				pr_debug("[%s]parameter1=0x%x parameter2=0x%x parameter3=0x%x parameter4=0x%x\n", __func__, offset, data, low, high);
-				spd_mon_set_threshold(offset, data, low, high);
-				pr_debug("[%s]Set Threshold offset=%d data=%d low=%d high=%d\n", __func__, offset, data, low, high);
-			} else {
-				dev_err(pctrl->dev, "get 0x%x from user space\n",
-					(unsigned int)arg);
-				ret = -EINVAL;
-			}
-		} else {
-			dev_err(pctrl->dev, "get 0x%x from user space\n",
-				(unsigned int)arg);
-			ret = -EINVAL;
-		}
-		break;
-	case LTQ_SPD_MON_IOC_GET_SPD:
-		data = spd_mon_get_speed_class(NULL);
-		put_user(data, (u32 __user *) (arg+0x4));
-		break;
-	case LTQ_SPD_MON_IOC_READ:
-		ret = get_user(offset, (u32 __user *) (arg));
-		pr_debug("[%s]parameter1=0x%x\n", __func__, offset);
-		if (ret == 0) {
-			/* check offset value */
-			if (offset <= SPD_MON_LVT_DATA) {
-				data = ltq_r32(pctrl->membase + offset);
-				put_user(data, (u32 __user *) (arg+0x4));
-				pr_debug("[%s]Read data offset=0x%x data=0x%x\n", __func__, offset, data);
-			} else
-				ret = -EINVAL;
-		} else {
-			dev_err(pctrl->dev, "get 0x%x from user space\n",
-				(unsigned int)arg);
-			ret = -EINVAL;
-		}
-		break;
-	case LTQ_SPD_MON_IOC_WRITE:
-		ret = get_user(offset, (u32 __user *) (arg));
-		if (ret == 0) {
-			ret = get_user(data, (u32 __user *) (arg+0x4));
-			pr_debug("[%s]parameter1=0x%x parameter2=0x%x\n", __func__, offset, data);
-			if (ret == 0) {
-				if (offset <= SPD_MON_LVT_DATA) {
-					ltq_w32(data, pctrl->membase + offset);
-					pr_debug("[%s]Write data offset=0x%x data=0x%x\n", __func__, offset, data);
-				} else
-					ret = -EINVAL;
-			} else
-				ret = -EINVAL;
-		} else {
-			dev_err(pctrl->dev, "get 0x%x from user space\n",
-				(unsigned int)arg);
-			ret = -EINVAL;
-		}
-		break;
-	}
-
-	return ret;
-}
-
-static const struct file_operations spd_mon_fops = {
-	.owner = THIS_MODULE,
-	.open = spd_mon_open,
-	.unlocked_ioctl = spd_mon_ioctl,
-};
-
 static int spd_mon_remove(struct platform_device *pdev)
 {
 	struct spd_mon_ctrl *pctrl = platform_get_drvdata(pdev);
 	int i;
 
 	hwmon_device_unregister(pctrl->hwmon_dev);
+
 	for (i = 0; i < DEVICE_ATTR_NUM; i++)
 		device_remove_file(&pdev->dev, &spdmon_attributes[i].dev_attr);
 
@@ -1033,17 +869,16 @@ static int spd_mon_probe(struct platform_device *pdev)
 	int ret = 0;
 	struct resource *res;
 	int i;
-	struct device *spd_mon_device = NULL;
 	struct device *cpu_dev = get_cpu_device(0);
 	struct spd_mon_ctrl *pctrl = &ltq_spd_mon_ctrl;
 	unsigned int chip_id = ltq_get_cpu_id();
 	unsigned int chip_rev = ltq_get_soc_rev();
-	/*struct spd_cnt smcl;*/
 	char *prop_name;
 
 	threshold_svt_kobj = NULL;
 	threshold_lvt_kobj = NULL;
 	memset(pctrl, 0, sizeof(ltq_spd_mon_ctrl));
+
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
 	if (!res)
 		panic("Failed to get spd_mon resources\n");
@@ -1058,35 +893,8 @@ static int spd_mon_probe(struct platform_device *pdev)
 
 	pctrl->dev = &pdev->dev;
 
-	/* Link platform with driver data for retrieving */
 	platform_set_drvdata(pdev, pctrl);
 
-	/* register char dev */
-	ret = alloc_chrdev_region(&dev_num, 0, 1, SPD_MON_NAME);
-	if (ret < 0) {
-		pr_err("spd_mon alloc_chrdev_region failed\n");
-		return ret;
-	} else
-	pr_alert("device number :%d\n", MAJOR(dev_num));
-
-	cl = class_create(THIS_MODULE, SPD_MON_NAME);
-	if (IS_ERR(cl))  {
-		pr_err("spd_mon Class Create failed\n");
-		return -ENODEV;
-	}
-
-	spd_mon_device = device_create(cl, NULL /*no parent device*/, dev_num,
-		NULL, SPD_MON_NAME"%d", MINOR(dev_num));
-	if (IS_ERR(spd_mon_device)) {
-		pr_err("spd_mon Device Registration failed\n");
-		return -ENODEV;
-	}
-	cdev_init(&c_dev, &spd_mon_fops);
-
-	ret = cdev_add(&c_dev, dev_num, 1);
-	if (ret)
-		pr_err("spd_mon Device addition failed\n");
-
 	for (i = 0; i < DEVICE_ATTR_NUM; i++) {
 		ret = device_create_file(&pdev->dev,
 			&spdmon_attributes[i].dev_attr);
@@ -1135,11 +943,6 @@ static int spd_mon_probe(struct platform_device *pdev)
 
 	dev_info(pctrl->dev, "spd_mon driver : init done !!\n");
 
-	/*
-	pr_alert("speed_class=%s ", spc[spd_mon_get_speed_class(&smcl)]);
-	pr_alert("slow=%d, med=%d, fast=%d\n", smcl.slow, smcl.medi, smcl.fast);
-	*/
-
 	if (chip_rev == 1) { /*V1.1*/
 		chip_type = GRX350;
 	} else {
@@ -1157,6 +960,7 @@ static int spd_mon_probe(struct platform_device *pdev)
 		       break;
 		}
 	}
+
 	ltq_grx500_set_speed_grade(spd_mon_get_speed_class(NULL));
 
 	prop_name = spc[ltq_grx500_get_speed_grade()];
@@ -1208,10 +1012,6 @@ subsys_initcall(spd_mon_init);
 
 static void __exit spd_mon_exit(void)
 {
-	cdev_del(&c_dev);
-	device_destroy(cl, dev_num);
-	class_destroy(cl);
-	unregister_chrdev_region(dev_num, 1);
 	platform_driver_unregister(&spd_mon_driver);
 }
 
