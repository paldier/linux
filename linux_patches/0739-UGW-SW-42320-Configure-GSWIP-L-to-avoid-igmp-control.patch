From ba93a8015e73ff1b3087defb037e71e05e3781f9 Mon Sep 17 00:00:00 2001
From: gsupriya <supriya1.g@intel.com>
Date: Wed, 14 Aug 2019 16:39:43 +0530
Subject: [PATCH] UGW_SW-42320: Configure GSWIP-L to avoid igmp control packet
 flooding

---
 net/mcast_helper/mcast_helper.c | 33 ++++++++++++++++++++++++++++++++-
 1 file changed, 32 insertions(+), 1 deletion(-)

diff --git a/net/mcast_helper/mcast_helper.c b/net/mcast_helper/mcast_helper.c
index 1d75bf6bdf01..48a5124342e0 100644
--- a/net/mcast_helper/mcast_helper.c
+++ b/net/mcast_helper/mcast_helper.c
@@ -47,6 +47,12 @@
 #include <linux/spinlock.h>
 #include <linux/if_arp.h>
 #include <linux/if_pppox.h>
+
+#if IS_ENABLED(CONFIG_INTEL_DATAPATH_HAL_GSWIP30)
+#include <net/switch_api/lantiq_gsw_api.h>
+#define SWITCH_DEV "/dev/switch_api/0"
+#endif
+
 /** Defines **/
 #define GINDX_LOOP_COUNT 1
 #define GINDX_MAX_SIZE 64
@@ -2770,8 +2776,12 @@ static struct file_operations mcast_helper_fops = {
 
 static int __init mcast_helper_init_module(void)
 {
-	int ret_val;
+	int ret_val ,ret = 0;
 	int index = 0;
+#if IS_ENABLED(CONFIG_SOC_GRX500)
+	GSW_API_HANDLE gswl;
+	GSW_PCE_rule_t pcecfg;
+#endif
 	/*
 	 * Alloc the chrdev region for mcast helper
 	 */
@@ -2806,6 +2816,27 @@ static int __init mcast_helper_init_module(void)
 		g_mcast_grpindex[index] = 0 ;
 	}
 
+#if IS_ENABLED(CONFIG_INTEL_DATAPATH_HAL_GSWIP30)
+	/* Do GSW_L configuration to avoid control packet flooding */
+	gswl = gsw_api_kopen(SWITCH_DEV);
+	if (gswl == 0) {
+		pr_err (" Mcast helper init- Failed to open swtch dev\n");
+	}
+
+	memset(&pcecfg, 0, sizeof(pcecfg));
+	pcecfg.pattern.nIndex = 18;
+	pcecfg.pattern.bEnable = 1;
+	pcecfg.pattern.bParserFlagMSB_Enable = 1;
+	pcecfg.pattern.nParserFlagMSB = 0x0040;
+	pcecfg.pattern.nParserFlagMSB_Mask = 0xFFBF;
+	pcecfg.action.ePortMapAction = GSW_PCE_ACTION_PORTMAP_ALTERNATIVE;
+	pcecfg.action.nForwardPortMap[0] = 0x01; /*CPU port */
+
+	if ((ret = gsw_api_kioctl(gswl, GSW_PCE_RULE_WRITE, &pcecfg)) < GSW_statusOk) {
+		pr_err("GSW_PCE_RULE_WRITE returned failure on GSWIPL %d\n",ret);
+	}
+	gsw_api_kclose(gswl);
+#endif
 
 #ifdef CONFIG_PROC_FS
 	mcast_helper_proc_init();
