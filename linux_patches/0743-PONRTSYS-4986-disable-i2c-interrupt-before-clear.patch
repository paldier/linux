From a1c30658216fca505baf39acabd5fe9f876cfd36 Mon Sep 17 00:00:00 2001
From: Peter Harliman Liem <peter.harliman.liem@intel.com>
Date: Fri, 16 Aug 2019 14:43:56 +0800
Subject: [PATCH] PONRTSYS-4986 - disable i2c interrupt before clear

In i2cdetect() usecase, we see an issue due to subsequent
TX_END arrives during irq context. When this happens subsequent
interrupt stops arriving, causing hang/timeout in the driver.

Issue is resolved by disabling protocol/error interrupts inside
irq handler.
---
 drivers/i2c/busses/i2c-lantiq.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/drivers/i2c/busses/i2c-lantiq.c b/drivers/i2c/busses/i2c-lantiq.c
index 3c286813f954..2ff124caec1c 100644
--- a/drivers/i2c/busses/i2c-lantiq.c
+++ b/drivers/i2c/busses/i2c-lantiq.c
@@ -654,6 +654,8 @@ static irqreturn_t ltq_i2c_isr_prot(struct ltq_i2c *priv)
 	u32 i_pro = i2c_r32(p_irqss);
 	int ret = IRQ_HANDLED;
 
+	i2c_w32_mask(LTQ_I2C_IMSC_DEFAULT_MASK, 0, imsc);
+
 	if (i_pro)
 		i2c_w32(i_pro, p_irqsc);
 
@@ -703,6 +705,8 @@ static irqreturn_t ltq_i2c_isr_prot(struct ltq_i2c *priv)
 			}
 		}
 	}
+
+	i2c_w32_mask(0, LTQ_I2C_IMSC_DEFAULT_MASK, imsc);
 	return ret;
 }
 
