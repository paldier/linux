From 03d6d129bdacafe311fc7923dfc248eee873852d Mon Sep 17 00:00:00 2001
From: arathinx <ayyappanx.rathinam@intel.com>
Date: Thu, 6 Dec 2018 12:05:10 +0800
Subject: [PATCH] DRVLIB_SW-979: Enhance CGU driver to handle PLL disabled case

---
 drivers/clk/intel/clk-cgu-pll.c | 29 +++++++++++++++--------------
 drivers/clk/intel/clk-cgu.c     |  7 ++++---
 2 files changed, 19 insertions(+), 17 deletions(-)

diff --git a/drivers/clk/intel/clk-cgu-pll.c b/drivers/clk/intel/clk-cgu-pll.c
index 865b1ae82bcf..da44422eae73 100644
--- a/drivers/clk/intel/clk-cgu-pll.c
+++ b/drivers/clk/intel/clk-cgu-pll.c
@@ -426,31 +426,32 @@ void intel_clk_plls_parse_vco_config(struct intel_clk_provider *ctx,
 				     u32 nr_clk)
 {
 	struct device *dev = ctx->dev;
-	struct device_node *child, *np = dev->of_node;
+	struct device_node *np = dev->of_node;
 	const struct intel_pll_clk_data *tmp;
 	struct of_phandle_args args;
 	u32 count = 0, idx;
 	struct clk *clk;
 
-	child = of_find_node_by_name(np, "plls_clk");
-
-	if (!child) {
-		dev_err(ctx->dev, "%s: Could not find plls_clk\n", __func__);
-		return;
-	}
-
 	do {
-		if (of_parse_phandle_with_args(child, "intel,pll_clks_vco",
-					       "#pll-clk-cells", count,
-					       &args) < 0)
+		if (of_parse_phandle_with_fixed_args(np,
+						     "intel,pll_clks_vco",
+						     3, count, &args) < 0)
 			break;
 
 		for (idx = 0, tmp = list; idx < nr_clk; idx++, tmp++) {
 			if (tmp->id == args.args[0]) {
 				clk = __clk_lookup(tmp->name);
-				if (clk_prepare_enable(clk))
-					continue;
-				clk_set_rate(clk, (unsigned long)args.args[1]);
+				if (clk_prepare_enable(clk) == 0) {
+					if (!args.args[2]) {
+						clk_disable_unprepare(clk);
+					} else {
+						if (clk_set_rate(clk, args.args[1]))
+							dev_warn(ctx->dev, "%s clk: %s clk_set_rate failed\n",
+								__func__, tmp->name);
+					}
+				} else
+					dev_warn(ctx->dev, "%s clk: %s enable failed\n",
+						__func__, tmp->name);
 			}
 		}
 	} while (++count);
diff --git a/drivers/clk/intel/clk-cgu.c b/drivers/clk/intel/clk-cgu.c
index 137af8b4f0b0..e6d14dcde51c 100644
--- a/drivers/clk/intel/clk-cgu.c
+++ b/drivers/clk/intel/clk-cgu.c
@@ -33,7 +33,7 @@
 void intel_set_clk_val(struct regmap *map, u32 reg, u8 shift,
 		       u8 width, u32 set_val)
 {
-	u32 mask = GENMASK(width + shift, shift);
+	u32 mask = GENMASK(width + shift - 1, shift);
 
 	regmap_update_bits(map, reg, mask, set_val << shift);
 }
@@ -528,10 +528,11 @@ intel_clk_get_ddiv_val(u32 div, u32 *ddiv1, u32 *ddiv2)
 			pr_err("Invalid ddiv %u\n", div);
 			return -EINVAL;
 		}
+
+		*ddiv1 = temp;
+		*ddiv2 = idx;
 	}
 
-	*ddiv1 = temp;
-	*ddiv2 = idx;
 	return 0;
 }
 
