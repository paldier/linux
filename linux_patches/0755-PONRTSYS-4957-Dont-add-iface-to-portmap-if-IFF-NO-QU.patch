From 3508023bd25096530dce15f017e862f99bcb2517 Mon Sep 17 00:00:00 2001
From: thampan <joby.thampan@intel.com>
Date: Mon, 19 Aug 2019 20:39:06 +0800
Subject: [PATCH] PONRTSYS-4957: Dont add iface to portmap if IFF_NO_QUEUE is
 set

---
 drivers/net/datapath/dpm/datapath_swdev.c          | 15 ++++++++----
 .../net/datapath/dpm/gswip31/datapath_switchdev.c  | 28 +++++++++++++++++++++-
 .../net/datapath/dpm/gswip31/datapath_switchdev.h  |  2 +-
 .../net/datapath/dpm/gswip32/datapath_switchdev.c  | 27 ++++++++++++++++++++-
 .../net/datapath/dpm/gswip32/datapath_switchdev.h  |  2 +-
 include/net/datapath_inst.h                        |  2 +-
 6 files changed, 66 insertions(+), 10 deletions(-)

diff --git a/drivers/net/datapath/dpm/datapath_swdev.c b/drivers/net/datapath/dpm/datapath_swdev.c
index 6b48502917e7..8aaa33db8b55 100644
--- a/drivers/net/datapath/dpm/datapath_swdev.c
+++ b/drivers/net/datapath/dpm/datapath_swdev.c
@@ -344,7 +344,8 @@ static int dp_swdev_filter_vlan(struct net_device *dev,
 	return 0;
 }
 
-static int dp_swdev_cfg_gswip(struct bridge_id_entry_item *br_item, u8 *addr)
+static int dp_swdev_cfg_gswip(struct bridge_id_entry_item *br_item,
+			      struct net_device *dev)
 {
 	struct br_info *br_info;
 	struct pmac_port_info *p_info;
@@ -376,6 +377,7 @@ static int dp_swdev_cfg_gswip(struct bridge_id_entry_item *br_item, u8 *addr)
 				 */
 				return 0;
 			}
+
 			br_info->fid = br_item->fid;
 			br_info->inst = br_item->inst;
 			br_info->cpu_port = ENABLE;
@@ -392,9 +394,11 @@ static int dp_swdev_cfg_gswip(struct bridge_id_entry_item *br_item, u8 *addr)
 			dp_swdev_insert_bridge_id_entry(br_info);
 			dp_swdev_add_bport_to_list(br_info, br_item->portid);
 
+
 			i_info->swdev_bridge_port_cfg_set(br_info,
 							  br_item->inst,
-							  br_item->portid);
+							  br_item->portid,
+							  dev->priv_flags);
 			br_item->flags &= ~ADD_BRENTRY;
 			DP_DEBUG(DP_DBG_FLAG_SWDEV,
 				 "added bport(%d),bridge(%s)\n",
@@ -407,13 +411,15 @@ static int dp_swdev_cfg_gswip(struct bridge_id_entry_item *br_item, u8 *addr)
 		if (!br_info)
 			return 0;
 		br_info->flag = 0;
+
 		if (br_item->flags & LOGIC_DEV_REGISTER)
 			br_info->flag = LOGIC_DEV_REGISTER;
 		dp_swdev_add_bport_to_list(br_info, br_item->portid);
 		if (p_info->swdev_en == 1) {
 			i_info->swdev_bridge_port_cfg_set(br_info,
 							  br_item->inst,
-							  br_item->portid);
+							  br_item->portid,
+							  dev->priv_flags);
 		}
 		DP_DEBUG(DP_DBG_FLAG_SWDEV, "added bport(%d)\n",
 			 br_item->portid);
@@ -437,7 +443,6 @@ static int dp_swdev_add_if(struct net_device *dev,
 	dp_subif_t subif = {0};
 	u32 flag = 0;
 	int port, inst;
-	u8 *addr = (u8 *)dev->dev_addr;
 	int32_t res;
 
 	/* SWITCHDEV_TRANS_PREPARE phase */
@@ -535,7 +540,7 @@ static int dp_swdev_add_if(struct net_device *dev,
 	swdev_lock();
 	br_item = switchdev_trans_item_dequeue(trans);
 	if (br_item) {
-		dp_swdev_cfg_gswip(br_item, addr);
+		dp_swdev_cfg_gswip(br_item, dev);
 		if (br_item->flags & LOGIC_DEV_REGISTER)
 			/*do only for vlan flag*/
 			dp_swdev_cfg_vlan(br_item, dev);
diff --git a/drivers/net/datapath/dpm/gswip31/datapath_switchdev.c b/drivers/net/datapath/dpm/gswip31/datapath_switchdev.c
old mode 100644
new mode 100755
index 83443843f26c..e52c375efe9a
--- a/drivers/net/datapath/dpm/gswip31/datapath_switchdev.c
+++ b/drivers/net/datapath/dpm/gswip31/datapath_switchdev.c
@@ -33,7 +33,7 @@ int dp_swdev_alloc_bridge_id(int inst)
 }
 
 int dp_swdev_bridge_port_cfg_set(struct br_info *br_item,
-				 int inst, int bport)
+				 int inst, int bport, u32 flags)
 {
 	GSW_return_t ret;
 	struct bridge_member_port *bport_list = NULL;
@@ -56,6 +56,23 @@ int dp_swdev_bridge_port_cfg_set(struct br_info *br_item,
 	}
 	list_for_each_entry(bport_list, &br_item->bp_list, list) {
 		if (bport_list->portid != bport) {
+
+			/* ----- Downstream ------
+			 * WAN Brodcast or Mcast Gem port, if the member
+			 * going to add is a GPON or EPON subif
+			 * (It can be pmapper or gemport or llid), then don't
+			 * add the member to the portmap
+			 */
+			if ((flags & IFF_NO_QUEUE) &&
+			    (bport_list->alloc_flag &
+			     (DP_F_GPON | DP_F_EPON))) {
+
+				DP_DEBUG(DP_DBG_FLAG_SWDEV,
+					 "IFF_NO_QUEUE Don't add if to pmap\n");
+				UNSET_BP_MAP(brportcfg.nBridgePortMap,
+					     bport_list->portid);
+				continue;
+			}
 			SET_BP_MAP(brportcfg.nBridgePortMap,
 				   bport_list->portid);
 		}
@@ -73,6 +90,15 @@ int dp_swdev_bridge_port_cfg_set(struct br_info *br_item,
 	list_for_each_entry(bport_list, &br_item->bp_list, list) {
 		if (bport_list->portid == bport)
 			continue;
+		/* ----- Upstream ------
+		 * If netdevice have Flag IFF_NO_QUEUE,
+		 * dont add the interface to gswip bridge portmap
+		 */
+		if (flags & IFF_NO_QUEUE) {
+			DP_DEBUG(DP_DBG_FLAG_SWDEV,
+				 "IFF_NO_QUEUE Don't add if to pmap\n");
+			continue;
+		}
 		memset(&brportcfg, 0, sizeof(GSW_BRIDGE_portConfig_t));
 		brportcfg.nBridgePortId = bport_list->portid;
 		DP_DEBUG(DP_DBG_FLAG_SWDEV, "Set other BP=%d inst:%d\n",
diff --git a/drivers/net/datapath/dpm/gswip31/datapath_switchdev.h b/drivers/net/datapath/dpm/gswip31/datapath_switchdev.h
index d93e823e34d3..1456cccb36be 100644
--- a/drivers/net/datapath/dpm/gswip31/datapath_switchdev.h
+++ b/drivers/net/datapath/dpm/gswip31/datapath_switchdev.h
@@ -11,7 +11,7 @@
 
 int dp_swdev_alloc_bridge_id(int inst);
 int dp_swdev_bridge_port_cfg_set(struct br_info *br_item,
-				 int inst, int bport);
+				 int inst, int bport, u32 flags);
 int dp_swdev_bridge_port_cfg_reset(struct br_info *br_item,
 				   int inst, int bport);
 int dp_swdev_bridge_cfg_set(int inst, u16 fid);
diff --git a/drivers/net/datapath/dpm/gswip32/datapath_switchdev.c b/drivers/net/datapath/dpm/gswip32/datapath_switchdev.c
old mode 100644
new mode 100755
index 4a0e8c1ee3c0..9a474ad38e1d
--- a/drivers/net/datapath/dpm/gswip32/datapath_switchdev.c
+++ b/drivers/net/datapath/dpm/gswip32/datapath_switchdev.c
@@ -33,7 +33,7 @@ int dp_swdev_alloc_bridge_id_32(int inst)
 }
 
 int dp_swdev_bridge_port_cfg_set_32(struct br_info *br_item,
-				    int inst, int bport)
+				    int inst, int bport, u32 flags)
 {
 	GSW_return_t ret;
 	struct bridge_member_port *bport_list = NULL;
@@ -56,6 +56,22 @@ int dp_swdev_bridge_port_cfg_set_32(struct br_info *br_item,
 	}
 	list_for_each_entry(bport_list, &br_item->bp_list, list) {
 		if (bport_list->portid != bport) {
+
+			/* ----- Downstream ------
+			 * WAN Brodcast or Mcast Gem port, if the member
+			 * going to add is a GPON or EPON subif
+			 * (It can be pmapper or gemport or llid), then don't
+			 * add the member to the portmap
+			 */
+			if ((flags & IFF_NO_QUEUE) &&
+			    (bport_list->alloc_flag &
+			     (DP_F_GPON | DP_F_EPON))) {
+				DP_DEBUG(DP_DBG_FLAG_SWDEV,
+					 "IFF_NO_QUEUE Don't add if to pmap\n");
+				UNSET_BP_MAP(brportcfg.nBridgePortMap,
+					     bport_list->portid);
+				continue;
+			}
 			SET_BP_MAP(brportcfg.nBridgePortMap,
 				   bport_list->portid);
 		}
@@ -73,6 +89,15 @@ int dp_swdev_bridge_port_cfg_set_32(struct br_info *br_item,
 	list_for_each_entry(bport_list, &br_item->bp_list, list) {
 		if (bport_list->portid == bport)
 			continue;
+		/* ----- Upstream ------
+		 * If netdevice have Flag IFF_NO_QUEUE,
+		 * dont add the interface to gswip bridge portmap
+		 */
+		if (flags & IFF_NO_QUEUE) {
+			DP_DEBUG(DP_DBG_FLAG_SWDEV,
+				 "IFF_NO_QUEUE Don't add if to pmap\n");
+			continue;
+		}
 		memset(&brportcfg, 0, sizeof(GSW_BRIDGE_portConfig_t));
 		brportcfg.nBridgePortId = bport_list->portid;
 		DP_DEBUG(DP_DBG_FLAG_SWDEV, "Set other BP=%d inst:%d\n",
diff --git a/drivers/net/datapath/dpm/gswip32/datapath_switchdev.h b/drivers/net/datapath/dpm/gswip32/datapath_switchdev.h
index 7512dde30c87..0717a260cecc 100644
--- a/drivers/net/datapath/dpm/gswip32/datapath_switchdev.h
+++ b/drivers/net/datapath/dpm/gswip32/datapath_switchdev.h
@@ -11,7 +11,7 @@
 
 int dp_swdev_alloc_bridge_id_32(int inst);
 int dp_swdev_bridge_port_cfg_set_32(struct br_info *br_item,
-				    int inst, int bport);
+				    int inst, int bport, u32 flags);
 int dp_swdev_bridge_port_cfg_reset_32(struct br_info *br_item,
 				      int inst, int bport);
 int dp_swdev_bridge_cfg_set_32(int inst, u16 fid);
diff --git a/include/net/datapath_inst.h b/include/net/datapath_inst.h
index 3cb79fad889e..5ee9f75887f9 100644
--- a/include/net/datapath_inst.h
+++ b/include/net/datapath_inst.h
@@ -140,7 +140,7 @@ struct inst_info {
 	int (*swdev_free_brcfg)(int inst, u16 fid);
 	int (*swdev_bridge_cfg_set)(int inst, u16 fid);
 	int (*swdev_bridge_port_cfg_set)(struct br_info *br_item, int inst,
-					 int port);
+					 int port, u32 flags);
 	int (*swdev_bridge_port_cfg_reset)(struct br_info *br_item,
 					   int inst, int bport);
 	int (*dp_mac_set)(int bport, int fid, int inst, u8 *addr);
