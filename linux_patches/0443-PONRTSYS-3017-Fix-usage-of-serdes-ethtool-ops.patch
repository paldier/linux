From fd8ef90f9a7dcc953ba1ca9ab87e5767115a0ce1 Mon Sep 17 00:00:00 2001
From: Thomas Langer <thomas.langer@intel.com>
Date: Fri, 18 Jan 2019 18:13:28 +0100
Subject: [PATCH] PONRTSYS-3017: Fix usage of serdes ethtool ops

Only use serdes_ethtool_ops if no phy is attached and
the XPCS driver is enabled.
Also make sure that the xpcs based interface has at least one port counted.
Fixes PONRTSYS-2727
---
 drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
index 37a25c964c13..390ebffdf46c 100644
--- a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
+++ b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
@@ -778,11 +778,11 @@ static int ltq_eth_init(struct net_device *dev)
 			pr_warn("connect phy of port %d failed\n",
 				priv->port[i].num);
 
-		dev->ethtool_ops = &ethtool_ops;
-	}
-
-	if (!priv->port[i].phy_node) {
-		dev->ethtool_ops = &serdes_ethtool_ops;
+		if (priv->port[i].phy_node)
+			dev->ethtool_ops = &ethtool_ops;
+		else if (IS_ENABLED(CONFIG_INTEL_XPCS))
+			/* without xpcs node the num_port would be 0 */
+			dev->ethtool_ops = &serdes_ethtool_ops;
 	}
 
 	if (priv->lct_en == 1) {
@@ -1510,6 +1510,9 @@ xrx500_of_port(struct net_device *dev, struct device_node *port)
 				pr_err("can not get phy dev for fixed link\n");
 			p->phydev = phy;
 			netif_carrier_on(dev);
+		} else if (priv->xpcs_node) {
+			pr_debug("no PHY but connected to xpcs: %s\n",
+				of_node_full_name(priv->xpcs_node));
 		} else {
 			pr_info("no interface attached to this interface!\n");
 			return;
@@ -2040,6 +2043,9 @@ static int prx300_phy_connect(struct net_device *dev, struct xrx500_port *port)
 	struct ltq_eth_priv *priv = NULL;
 	struct mac_ops *ops;
 
+	if (!port->phy_node)
+		return 0;
+
 	priv = netdev_priv(dev);
 
 	phydev = of_phy_find_device(port->phy_node);
