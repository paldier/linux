From fe29784c9a935b0d10966b4e87a04d3b97c12cb9 Mon Sep 17 00:00:00 2001
From: Dinesh Sudham <dineshx.sudham@intel.com>
Date: Thu, 4 Apr 2019 13:13:46 +0800
Subject: [PATCH] DRVLIB_SW-2080: Fix for
 gswip-pce-action-forward-to-cpu-not-working

---
 drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.h | 7 +++++++
 drivers/net/ethernet/lantiq/switch-api/gsw_flow_pce.c  | 8 ++++++--
 2 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.h b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.h
index 968ffbe60c3c..139ef41bd66c 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.h
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.h
@@ -184,6 +184,13 @@ Where as CLEAR_FILL_CTRL_REG takes care of clear then fill.
 
 #define IS_VRSN_NOT_31(ver) \
 	((ver != LTQ_GSWIP_3_1))
+
+/* Features compared with less than 3.1 GSWIP versions */
+#define IS_VRSN_BELOW_31(ver) \
+    ((ver == LTQ_GSWIP_3_0) || (ver == LTQ_GSWIP_2_2_ETC) \
+    || (ver == LTQ_GSWIP_2_2) || (ver == LTQ_GSWIP_2_1) \
+    || (ver == LTQ_GSWIP_2_0))
+
 #define GSW_BRIDGE_PORT_SRC_IP_LOOKUP_DISABLE 1
 
 /*PHY Reg 0x4 */
diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_pce.c b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_pce.c
index f11f1bf2619b..c71e956d4475 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_pce.c
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_pce.c
@@ -12,6 +12,7 @@
 
 
 #include <gsw_init.h>
+#include <gsw_swmcast.h>
 
 #define PCE_MC_M3(val, msk, ns, out, len, type, flags, ipv4_len) \
 	{ val, msk, (ns << 8 | out << 0),\
@@ -4176,9 +4177,12 @@ int pce_rule_write(void *cdev, ltq_pce_table_t *pthandle, GSW_PCE_rule_t *parm)
 				}
 
 				//If CPU type set to 'MC router' portmap MUX control.
-				if (paction->ePortMapAction == GSW_PCE_ACTION_PORTMAP_CPU) {
+				if ((paction->ePortMapAction == GSW_PCE_ACTION_PORTMAP_CPU) &&
+					((IS_VRSN_BELOW_31(gswdev->gipver)) ||
+					(gswdev->mcsthw_snoop == MCAST_HWSNOOP_EN))) {
+					/*Applicable for 3.0 and when multicast hardware enabled */
 					ptbl.val[4] &= ~(0x3 << 2);
-					ptbl.val[4] |= (0x1 << 2); //Govind - why CPU type to MC router?
+					ptbl.val[4] |= (0x1 << 2); /* set to 'MC router' portmap MUX control */
 				}
 
 				break;
