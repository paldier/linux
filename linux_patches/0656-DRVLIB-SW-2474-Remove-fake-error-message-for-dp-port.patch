From c2f21fe05c040c628703bdad51437cbdf80d37f3 Mon Sep 17 00:00:00 2001
From: kavitha3 <k.subramanian@intel.com>
Date: Wed, 26 Jun 2019 11:37:30 +0800
Subject: [PATCH] DRVLIB_SW-2474: Remove fake error message for
 dp_port_alloc_complete and clear other compiler warnings

---
 drivers/net/ethernet/lantiq/cqm/prx300/cqm.c | 12 +++++-------
 1 file changed, 5 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/cqm/prx300/cqm.c b/drivers/net/ethernet/lantiq/cqm/prx300/cqm.c
index 2d6821b7de73..514de8d23e59 100644
--- a/drivers/net/ethernet/lantiq/cqm/prx300/cqm.c
+++ b/drivers/net/ethernet/lantiq/cqm/prx300/cqm.c
@@ -920,7 +920,7 @@ static void cqm_qidt_set_mode2(const struct cqm_qidt_elm *qid_set,
 	int state, nxt_st_subif, pr_st_ep;
 	struct qidt_flag_done flag_done = {0};
 	u8 sel_field = 0;
-	u32 temp = 0, temp_idx;
+	u32 temp = 0, temp_idx = 0;
 
 	dev_dbg(cqm_ctrl->dev, "%u\n", qid_val);
 	dev_dbg(cqm_ctrl->dev, "%u %u %u %u\n", qid_set->clsid,
@@ -1611,7 +1611,7 @@ static int cqm_buffer_free(u32 pid, void *v_buf_free, u32 flag)
 	u32 buf, buf_addr;
 	unsigned long sys_flag;
 	u32 size_to_wb, pool, policy;
-	int t_pool, t_policy;
+	int t_pool = 0, t_policy = 0;
 	u32 pointer_to_wb;
 	int idx = 0, res, i;
 	u32 v_buf = (u32)v_buf_free;
@@ -1745,7 +1745,7 @@ static s32 cqm_cpu_pkt_tx(struct sk_buff *skb, struct cbm_tx_data *data,
 	struct dma_tx_desc_2 *desc_2 = (struct dma_tx_desc_2 *)&skb->DW2;
 	u32 new_buf = 0;
 	s32 clone_f, shared_f, no_hdr_room_f = 0;
-	int pool, policy, tot_len, buf_size, cpu_buf;
+	int pool = 0, policy = 0, tot_len, buf_size, cpu_buf;
 
 	dev_dbg(cqm_ctrl->dev, "%s\n", __func__);
 	tot_len = skb->len;
@@ -2377,8 +2377,6 @@ static s32 dp_port_alloc_complete(struct module *owner, struct net_device *dev,
 			 EPON_EPON_MODE_REG_ENDQ_POS)
 		       | data->qid_base);
 		cbm_w32(cqm_ctrl->enq + EPON_EPON_MODE_REG, reg);
-	} else {
-		dev_err(cqm_ctrl->dev, "Invalid deq_port: %u", data->deq_port);
 	}
 
 	dev_dbg(cqm_ctrl->dev, "%s: exit\n", __func__);
@@ -2583,7 +2581,7 @@ static struct sk_buff *build_skb_cqm(void *data, unsigned int frag_size,
 				     gfp_t priority)
 {
 	u32 buf_size;
-	int pool, policy;
+	int pool = 0, policy;
 
 	if (get_metadata((u8 *)data, &pool, &policy)) {
 		dev_err(cqm_ctrl->dev, "cpu buff for %s\n", __func__);
@@ -3357,7 +3355,7 @@ static int setup_enq_dma_desc(int pid, u32 desc_num, s32 type,
 	u32 reg2;
 	int i;
 	u32 cpu = smp_processor_id();
-	struct cqm_bm_pool_config tmp_bm;
+	struct cqm_bm_pool_config tmp_bm = {0};
 	void *dmadesc = cqm_ctrl->dmadesc;
 
 	cbm_assert(pid >= 4, "cbm dma eqm port id is less than 4,pid:%d ", pid);
