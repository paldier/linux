From e8a470ca12584ff83d90f0285757a149a673bf0f Mon Sep 17 00:00:00 2001
From: Dinesh Sudham <dineshx.sudham@intel.com>
Date: Tue, 16 Apr 2019 14:02:55 +0800
Subject: [PATCH] DRVLIB_SW-2184: link mode support for xpcs ethtool

---
 drivers/net/ethernet/lantiq/xpcs/xpcs.c | 15 +++++++++++----
 drivers/net/ethernet/lantiq/xpcs/xpcs.h |  2 +-
 2 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/xpcs/xpcs.c b/drivers/net/ethernet/lantiq/xpcs/xpcs.c
index 7f4865441cd7..832516c26b2f 100644
--- a/drivers/net/ethernet/lantiq/xpcs/xpcs.c
+++ b/drivers/net/ethernet/lantiq/xpcs/xpcs.c
@@ -988,22 +988,29 @@ static int xpcs_reset(struct device *dev)
 	return 0;
 }
 
-void xpcs_ethtool_ksettings_get(struct device *dev,
-				struct ethtool_link_ksettings *cmd)
+int xpcs_ethtool_ksettings_get(struct device *dev,
+			       struct ethtool_link_ksettings *cmd)
 {
 	struct xpcs_prv_data *pdata = dev_get_drvdata(dev);
 
 	if (!pdata) {
 		dev_err(dev, "XPCS is not initialized\n");
-		return;
+		return -ENODEV;
 	}
 
+	ethtool_link_ksettings_zero_link_mode(cmd, supported);
+	ethtool_link_ksettings_zero_link_mode(cmd, advertising);
+	ethtool_link_ksettings_zero_link_mode(cmd, lp_advertising);
+
+	ethtool_link_ksettings_add_link_mode(cmd, supported, 1000baseX_Full);
+	ethtool_link_ksettings_add_link_mode(cmd, supported, 10000baseKR_Full);
+
 	if (pdata->mode == TENG_KR_MODE)
 		cmd->base.speed = SPEED_10000;
 	else if (pdata->mode == ONEG_XAUI_MODE)
 		cmd->base.speed = SPEED_1000;
 
-	return;
+	return 0;
 }
 EXPORT_SYMBOL(xpcs_ethtool_ksettings_get);
 
diff --git a/drivers/net/ethernet/lantiq/xpcs/xpcs.h b/drivers/net/ethernet/lantiq/xpcs/xpcs.h
index 56e9bd0166f1..ab55a6137fa6 100644
--- a/drivers/net/ethernet/lantiq/xpcs/xpcs.h
+++ b/drivers/net/ethernet/lantiq/xpcs/xpcs.h
@@ -768,7 +768,7 @@ static inline void XPCS_RGWR(struct xpcs_prv_data *pdata, u32 reg, u32 val)
 	} while (0)
 
 int xpcs_sysfs_init(struct xpcs_prv_data *priv);
-void xpcs_ethtool_ksettings_get(struct device *dev,
+int xpcs_ethtool_ksettings_get(struct device *dev,
 				struct ethtool_link_ksettings *cmd);
 int xpcs_ethtool_ksettings_set(struct device *dev,
 			       const struct ethtool_link_ksettings *cmd);
