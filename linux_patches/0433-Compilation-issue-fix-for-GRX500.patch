From 22106c162336ae1033140545199ce59093672eb8 Mon Sep 17 00:00:00 2001
From: thampan <joby.thampan@intel.com>
Date: Fri, 11 Jan 2019 16:42:34 +0800
Subject: [PATCH] Compilation issue fix for GRX500

---
 drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c | 46 ++++++++++++------------
 1 file changed, 22 insertions(+), 24 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
index 6485f991eb0a..e89c7fe05927 100644
--- a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
+++ b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
@@ -266,19 +266,17 @@ int serdes_ethtool_get_link_ksettings(struct net_device *dev,
 	if (!priv->xpcs_node)
 		return -1;
 
-        /* g_eth_switch_mode will be 0 for Fmx and Lgm */
-        if (g_eth_switch_mode == 0) {
-            pdev = of_find_device_by_node(priv->xpcs_node);
-            if (pdev) {
-                /* Speed Get in Ethtool */
-                xpcs_ethtool_ksettings_get(&pdev->dev, cmd);
-            } else {
-                pr_err("Cannot get Xpcs pdev for %s\n",dev->name);
-                ret = -1;
-            }
+        pdev = of_find_device_by_node(priv->xpcs_node);
+        if (pdev) {
+#ifdef CONFIG_INTEL_XPCS
+            /* Speed Get in Ethtool */
+            xpcs_ethtool_ksettings_get(&pdev->dev, cmd);
+#endif
+        } else {
+            pr_err("Cannot get Xpcs pdev for %s\n",dev->name);
+            ret = -1;
         }
-
-	return ret;
+        return ret;
 }
 
 int serdes_ethtool_set_link_ksettings(struct net_device *dev,
@@ -291,19 +289,19 @@ int serdes_ethtool_set_link_ksettings(struct net_device *dev,
 	if (!priv->xpcs_node)
 		return -1;
 
-        /* g_eth_switch_mode will be 0 for Fmx and Lgm */
-        if (g_eth_switch_mode == 0) {
-            /* Speed Set in Ethtool */
-            pdev = of_find_device_by_node(priv->xpcs_node);
-            if (pdev) {
-                /* Speed Get in Ethtool */
-                ret = xpcs_ethtool_ksettings_set(&pdev->dev, cmd);
-            } else {
-                pr_err("Cannot get Xpcs pdev for %s\n",dev->name);
-                ret = -1;
-            }
+        /* Speed Set in Ethtool */
+        pdev = of_find_device_by_node(priv->xpcs_node);
+        if (pdev) {
+#ifdef CONFIG_INTEL_XPCS
+            /* Speed Get in Ethtool */
+            ret = xpcs_ethtool_ksettings_set(&pdev->dev, cmd);
+#endif
+        } else {
+            pr_err("Cannot get Xpcs pdev for %s\n",dev->name);
+            ret = -1;
         }
-	return ret;
+
+        return ret;
 }
 
 /* Structure of the ether tool operation in Phy case  */
