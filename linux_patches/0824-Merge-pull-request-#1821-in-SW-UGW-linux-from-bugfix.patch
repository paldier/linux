From b9a41430b7d11633a2a6f68854b58d3f7b37bf3f Mon Sep 17 00:00:00 2001
From: CI Assistant <chdauto@intel.com>
Date: Tue, 25 Feb 2020 23:18:51 +0200
Subject: [PATCH] Merge pull request #1821 in SW_UGW/linux from
 bugfix/UGW_SW-47995-secure-storage-bug-fixes-8.4.1 to 8.4.1

* commit '4b00f673ce608581181d942f7bb01138a78cfe6c':
  UGW_SW-47995 enable cache ops even for 4kec as its no longer uncached access for secure storage
---
 drivers/char/ltq_icc/drv_icc.c | 7 -------
 1 file changed, 7 deletions(-)

diff --git a/drivers/char/ltq_icc/drv_icc.c b/drivers/char/ltq_icc/drv_icc.c
index d3af42a06c78..b193e4fc4ba3 100644
--- a/drivers/char/ltq_icc/drv_icc.c
+++ b/drivers/char/ltq_icc/drv_icc.c
@@ -404,11 +404,6 @@ long icc_ioctl (struct file *file_p,uint32_t nCmd, unsigned long arg){
 				break;
 			case ICC_IOC_MEM_INVALIDATE:
 			case ICC_IOC_MEM_COMMIT:
-#ifdef SYSTEM_4KEC
-					/*As the 4kec is uncached access no need of cache flushing, but for safety do a sync*/
-					__asm__ __volatile__(" sync \n");
-					return 0;
-#endif
 				num=(int)file_p->private_data;
         /* Initialize destination and copy mps_message from usermode */
         memset (&icc_address, 0, sizeof (icc_commit_t));
@@ -428,12 +423,10 @@ long icc_ioctl (struct file *file_p,uint32_t nCmd, unsigned long arg){
 					}
 
 					icc_address.address[i] = mmap_addr+icc_address.offset[i];
-#ifndef SYSTEM_4KEC
 					if(nCmd == ICC_IOC_MEM_COMMIT)
 						cache_wb_inv(icc_address.address[i],icc_address.length[i]);
 					else
 						cache_inv(icc_address.address[i],icc_address.length[i]);
-#endif 
 				}
 				
 				break;
