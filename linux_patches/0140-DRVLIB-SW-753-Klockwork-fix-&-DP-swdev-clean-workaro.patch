From 8b7a17ff6429e7ecebc9f6faff75a253362077f8 Mon Sep 17 00:00:00 2001
From: Rekha Eswaran <rekha.eswaran@intel.com>
Date: Wed, 4 Jul 2018 14:21:35 +0800
Subject: [PATCH] DRVLIB_SW-753: Klockwork fix & DP swdev clean workaround code

---
 .../net/ethernet/lantiq/datapath/datapath_api.c    | 51 ----------------------
 .../net/ethernet/lantiq/datapath/datapath_swdev.c  | 25 +----------
 2 files changed, 2 insertions(+), 74 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/datapath/datapath_api.c b/drivers/net/ethernet/lantiq/datapath/datapath_api.c
index b08f7a0893b7..f1190dd26f4e 100644
--- a/drivers/net/ethernet/lantiq/datapath/datapath_api.c
+++ b/drivers/net/ethernet/lantiq/datapath/datapath_api.c
@@ -475,16 +475,7 @@ int32_t dp_register_subif_private(int inst, struct module *owner,
 	int i, port_id, start, end;
 	struct pmac_port_info *port_info;
 	struct cbm_dp_en_data cbm_data = {0};
-
 	struct subif_platform_data platfrm_data = {0};
-#if IS_ENABLED(CONFIG_LTQ_DATAPATH_SWITCHDEV)
-	struct net_device *br_dev;
-	int fid, vap;
-	struct dp_dev *dp_dev;
-	struct br_info *br_info;
-	u32 idx;
-	bool f_unlock = false;
-#endif
 
 	port_id = subif_id->port_id;
 	port_info = &dp_port_info[inst][port_id];
@@ -616,48 +607,6 @@ int32_t dp_register_subif_private(int inst, struct module *owner,
 				subif_id->inst, subif_id->port_id,
 				port_info->subif_info[i].bp,
 				subif_id->subif, flags);
-	#if IS_ENABLED(CONFIG_LTQ_DATAPATH_SWITCHDEV)
-	/*Added as workaround to alloc FID & config MAC,when bridge
-	 * port registration happens after br addif
-	 */
-		if (dev) {
-			idx = dp_dev_hash(dev, NULL);
-			dp_dev = dp_dev_lookup(&dp_dev_list[idx], dev, NULL, 0);
-			if (!dp_dev) {
-				PR_ERR("DP dev not exists!!,No mac config\n");
-				return 0;
-			}
-			vap = GET_VAP(subif_id->subif, port_info->vap_offset,
-				      port_info->vap_mask);
-			if (!rtnl_is_locked()) {
-				rtnl_lock();
-				f_unlock = true;
-			}
-			br_dev = netdev_master_upper_dev_get(dev);
-			if (f_unlock)
-				rtnl_unlock();
-			if (br_dev) {
-				br_info = dp_swdev_bridge_entry_lookup(br_dev->
-								       name, 0);
-				if (br_info) {
-					dp_dev->fid = br_info->fid;
-					port_info->subif_info[vap].fid =
-								dp_dev->fid;
-				} else {
-					fid = dp_notif_br_alloc(br_dev);
-					if (fid > 0) {
-						dp_dev->fid = fid;
-						port_info->subif_info[vap].fid =
-								dp_dev->fid;
-					} else {
-						PR_ERR("FID alloc fail %s\r\n",
-						       __func__);
-						return 0;
-					}
-				}
-			}
-		}
-	#endif
 	} else {
 		DP_DEBUG(DP_DBG_FLAG_REG,
 			 "register subif failed for no matched vap\n");
diff --git a/drivers/net/ethernet/lantiq/datapath/datapath_swdev.c b/drivers/net/ethernet/lantiq/datapath/datapath_swdev.c
index 33bb7d81a400..1c8391597e99 100644
--- a/drivers/net/ethernet/lantiq/datapath/datapath_swdev.c
+++ b/drivers/net/ethernet/lantiq/datapath/datapath_swdev.c
@@ -1005,6 +1005,7 @@ int dp_notif_br_alloc(struct net_device *br_dev)
 	}
 	return br_id;
 }
+
 /*Register netdev_ops for switchdev*/
 static int dp_set_netdev_ops(struct dp_dev *dp_dev)
 {
@@ -1018,6 +1019,7 @@ static int dp_set_netdev_ops(struct dp_dev *dp_dev)
 	dp_dev->new_dev_ops.ndo_fdb_dump = switchdev_port_fdb_dump;
 	return 0;
 }
+
 /* This function registers the created port in datapath to switchdev */
 int dp_port_register_switchdev(struct dp_dev  *dp_dev,
 			       struct net_device *dp_port)
@@ -1086,29 +1088,6 @@ int dp_port_register_switchdev(struct dp_dev  *dp_dev,
 void dp_port_deregister_switchdev(struct dp_dev *dp_dev,
 				  struct net_device *dev)
 {
-	struct net_device *br_dev;
-	bool f_unlock = false;
-
-	/* Workaround for ethernet ifconfig down case
-	 * to remove port from switchdev as dev is de-registered
-	 * from DP lib
-	 */
-	if (netif_is_bridge_port(dev)) {
-		if (!rtnl_is_locked()) {
-			rtnl_lock();
-			f_unlock = true;
-		}
-		br_dev = netdev_master_upper_dev_get(dev);
-		if (f_unlock)
-			rtnl_unlock();
-		DP_DEBUG(DP_DBG_FLAG_SWDEV, "Upper br.device name:%s\n",
-			 br_dev->name);
-		if (dp_del_br_if(dev, br_dev, dp_dev->inst, dp_dev->bp)) {
-			DP_DEBUG(DP_DBG_FLAG_SWDEV,
-				 "del br intf port in DP fail:%s\n",
-				 dev->name);
-		}
-	}
 	if (dp_dev->old_swdev_ops)
 		dev->switchdev_ops = dp_dev->old_swdev_ops;
 	if (dp_dev->old_dev_ops) {
