From 260ed4a24109cf53742e3aaaaa423533bcb256be Mon Sep 17 00:00:00 2001
From: Peter Harliman Liem <peter.harliman.liem@intel.com>
Date: Mon, 17 Dec 2018 23:31:14 +0800
Subject: [PATCH] DRVLIB_SW-864 - Add advertise-mode config in aquantia PHY
 driver

This is to allow advertising modes manipulation in aquantia PHY
driver.
---
 drivers/net/phy/aquantia.c | 98 +++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 96 insertions(+), 2 deletions(-)

diff --git a/drivers/net/phy/aquantia.c b/drivers/net/phy/aquantia.c
index a040244ebd2c..701b97f2f210 100644
--- a/drivers/net/phy/aquantia.c
+++ b/drivers/net/phy/aquantia.c
@@ -24,17 +24,111 @@
 #define PHY_ID_AQR107	0x03a1b4e0
 #define PHY_ID_AQR405	0x03a1b4b0
 
+#define AQ_MDIO_AN_VENDOR_1 0xC400
+#define AQ_MDIO_AN_VENDOR_1_ADV1G 0x8000
+
 #define PHY_AQUANTIA_FEATURES	(SUPPORTED_10000baseT_Full | \
 				 SUPPORTED_1000baseT_Full | \
 				 SUPPORTED_100baseT_Full | \
 				 PHY_DEFAULT_FEATURES)
 
+static int aquantia_c45_restart_aneg(struct phy_device *phydev)
+{
+	int val;
+
+	val = phy_read_mmd(phydev, MDIO_MMD_AN, MDIO_CTRL1);
+	if (val < 0)
+		return val;
+
+	val |= MDIO_AN_CTRL1_ENABLE | MDIO_AN_CTRL1_RESTART;
+
+	return phy_write_mmd(phydev, MDIO_MMD_AN, MDIO_CTRL1, val);
+}
+
+static int aquantia_config_advert(struct phy_device *phydev)
+{
+	int oldadv, adv;
+	int err, changed = 0;
+
+	/* Setup standard advertisement */
+	adv = phy_read_mmd(phydev, MDIO_MMD_AN, MDIO_AN_ADVERTISE);
+	if (adv < 0)
+		return adv;
+
+	oldadv = adv;
+	adv &= ~(ADVERTISE_ALL | ADVERTISE_100BASE4 | ADVERTISE_PAUSE_CAP |
+		 ADVERTISE_PAUSE_ASYM);
+	adv |= ethtool_adv_to_mii_adv_t(phydev->advertising);
+
+	if (adv != oldadv) {
+		err = phy_write_mmd(phydev, MDIO_MMD_AN, MDIO_AN_ADVERTISE,
+				    adv);
+		if (err < 0)
+			return err;
+
+		changed = 1;
+	}
+
+	/* Configure gigabit if it's supported */
+	adv = phy_read_mmd(phydev, MDIO_MMD_AN, AQ_MDIO_AN_VENDOR_1);
+	if (adv < 0)
+		return adv;
+
+	oldadv = adv;
+	if (phydev->advertising & SUPPORTED_1000baseT_Full)
+		adv |= AQ_MDIO_AN_VENDOR_1_ADV1G;
+	else
+		adv &= ~AQ_MDIO_AN_VENDOR_1_ADV1G;
+
+	if (adv != oldadv) {
+		changed = 1;
+		err = phy_write_mmd(phydev, MDIO_MMD_AN, AQ_MDIO_AN_VENDOR_1,
+				    adv);
+		if (err < 0)
+			return err;
+	}
+
+	/* Configure 10Gigabit */
+	adv = phy_read_mmd(phydev, MDIO_MMD_AN, MDIO_AN_10GBT_CTRL);
+	if (adv < 0)
+		return adv;
+
+	oldadv = adv;
+	if (phydev->advertising & SUPPORTED_10000baseT_Full)
+		adv |= MDIO_AN_10GBT_CTRL_ADV10G;
+	else
+		adv &= ~MDIO_AN_10GBT_CTRL_ADV10G;
+
+	if (adv != oldadv) {
+		changed = 1;
+		err = phy_write_mmd(phydev, MDIO_MMD_AN, MDIO_AN_10GBT_CTRL,
+				    adv);
+		if (err < 0)
+			return err;
+	}
+
+	return changed;
+}
+
 static int aquantia_config_aneg(struct phy_device *phydev)
 {
+	int err;
+
 	phydev->supported = PHY_AQUANTIA_FEATURES;
-	phydev->advertising = phydev->supported;
 
-	return 0;
+	if (phydev->autoneg != AUTONEG_ENABLE) {
+		pr_err("%s - Autoneg-off is not supported\n", __func__);
+
+		/* revert advertising mode to default */
+		phydev->advertising = phydev->supported;
+		return -EINVAL;
+	}
+
+	err = aquantia_config_advert(phydev);
+	if (err > 0)
+		err = aquantia_c45_restart_aneg(phydev);
+
+	return err;
 }
 
 static int aquantia_aneg_done(struct phy_device *phydev)
