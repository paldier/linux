From b13141a022e05943ab916759874fce3873b3bff3 Mon Sep 17 00:00:00 2001
From: thampan <joby.thampan@intel.com>
Date: Wed, 4 Jul 2018 10:41:24 +0800
Subject: [PATCH] DRVLIB_SW-778: Changing few prints to debug level

---
 .../net/ethernet/lantiq/switch-api/mac/gswss_api.c | 96 +++++++++++-----------
 .../net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c | 10 ++-
 2 files changed, 54 insertions(+), 52 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/gswss_api.c b/drivers/net/ethernet/lantiq/switch-api/mac/gswss_api.c
index 4262efb30362..26f86c19242d 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/gswss_api.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/gswss_api.c
@@ -22,66 +22,66 @@ int gswss_cfg0_1588(void *pdev, u32 ref_time, u32 dig_time, u32 bin_time,
 	cfg0 = GSWSS_RGRD(pdata, CFG0_1588);
 
 	if (ref_time == 0)
-		mac_printf("\tREF_TIME: PON_PCS is the master\n");
+		mac_dbg("\tREF_TIME: PON_PCS is the master\n");
 	else if (ref_time == 1)
-		mac_printf("\tREF_TIME: PCIE0 is the master\n");
+		mac_dbg("\tREF_TIME: PCIE0 is the master\n");
 	else if (ref_time == 2)
-		mac_printf("\tREF_TIME: PCIE1 is the master\n");
+		mac_dbg("\tREF_TIME: PCIE1 is the master\n");
 	else if (ref_time == 3)
-		mac_printf("\tREF_TIME: XGMAC2 is the master\n");
+		mac_dbg("\tREF_TIME: XGMAC2 is the master\n");
 	else if (ref_time == 4)
-		mac_printf("\tREF_TIME: XGMAC3 is the master\n");
+		mac_dbg("\tREF_TIME: XGMAC3 is the master\n");
 	else if (ref_time == 5)
-		mac_printf("\tREF_TIME: XGMAC4 is the master\n");
+		mac_dbg("\tREF_TIME: XGMAC4 is the master\n");
 	else
 		goto end;
 
 	if (dig_time == 0)
-		mac_printf("\tDIG_TIME: PON_PCS is the master\n");
+		mac_dbg("\tDIG_TIME: PON_PCS is the master\n");
 	else if (dig_time == 1)
-		mac_printf("\tDIG_TIME: PCIE0 is the master\n");
+		mac_dbg("\tDIG_TIME: PCIE0 is the master\n");
 	else if (dig_time == 2)
-		mac_printf("\tDIG_TIME: PCIE1 is the master\n");
+		mac_dbg("\tDIG_TIME: PCIE1 is the master\n");
 	else if (dig_time == 3)
-		mac_printf("\tDIG_TIME: XGMAC2 is the master\n");
+		mac_dbg("\tDIG_TIME: XGMAC2 is the master\n");
 	else if (dig_time == 4)
-		mac_printf("\tDIG_TIME: XGMAC3 is the master\n");
+		mac_dbg("\tDIG_TIME: XGMAC3 is the master\n");
 	else if (dig_time == 5)
-		mac_printf("\tDIG_TIME: XGMAC4 is the master\n");
+		mac_dbg("\tDIG_TIME: XGMAC4 is the master\n");
 	else
 		goto end;
 
 	if (bin_time == 0)
-		mac_printf("\tBIN_TIME: PON_PCS is the master\n");
+		mac_dbg("\tBIN_TIME: PON_PCS is the master\n");
 	else if (bin_time == 1)
-		mac_printf("\tBIN_TIME: PCIE0 is the master\n");
+		mac_dbg("\tBIN_TIME: PCIE0 is the master\n");
 	else if (bin_time == 2)
-		mac_printf("\tBIN_TIME: PCIE1 is the master\n");
+		mac_dbg("\tBIN_TIME: PCIE1 is the master\n");
 	else if (bin_time == 3)
-		mac_printf("\tBIN_TIME: XGMAC2 is the master\n");
+		mac_dbg("\tBIN_TIME: XGMAC2 is the master\n");
 	else if (bin_time == 4)
-		mac_printf("\tBIN_TIME: XGMAC3 is the master\n");
+		mac_dbg("\tBIN_TIME: XGMAC3 is the master\n");
 	else if (bin_time == 5)
-		mac_printf("\tBIN_TIME: XGMAC4 is the master\n");
+		mac_dbg("\tBIN_TIME: XGMAC4 is the master\n");
 	else
 		goto end;
 
 	if (pps_sel == 0)
-		mac_printf("\tPPS_SEL: PON_PCS is the master\n");
+		mac_dbg("\tPPS_SEL: PON_PCS is the master\n");
 	else if (pps_sel == 1)
-		mac_printf("\tPPS_SEL: PCIE0 is the master\n");
+		mac_dbg("\tPPS_SEL: PCIE0 is the master\n");
 	else if (pps_sel == 2)
-		mac_printf("\tPPS_SEL: PCIE1 is the master\n");
+		mac_dbg("\tPPS_SEL: PCIE1 is the master\n");
 	else if (pps_sel == 3)
-		mac_printf("\tPPS_SEL: XGMAC2 is the master\n");
+		mac_dbg("\tPPS_SEL: XGMAC2 is the master\n");
 	else if (pps_sel == 4)
-		mac_printf("\tPPS_SEL: XGMAC3 is the master\n");
+		mac_dbg("\tPPS_SEL: XGMAC3 is the master\n");
 	else if (pps_sel == 5)
-		mac_printf("\tPPS_SEL: XGMAC4 is the master\n");
+		mac_dbg("\tPPS_SEL: XGMAC4 is the master\n");
 	else if (pps_sel == 6)
-		mac_printf("\tPPS_SEL: PON PPS100US is the master\n");
+		mac_dbg("\tPPS_SEL: PON PPS100US is the master\n");
 	else if (pps_sel == 7)
-		mac_printf("\tPPS_SEL: Software trigger\n");
+		mac_dbg("\tPPS_SEL: Software trigger\n");
 	else
 		goto end;
 
@@ -112,55 +112,55 @@ int gswss_cfg1_1588(void *pdev, u32 trig0_sel, u32 trig1_sel, u32 sw_trig)
 	cfg0 = GSWSS_RGRD(pdata, CFG1_1588);
 
 	if (trig0_sel == 0)
-		mac_printf("\tTRIG0: PON is the master\n");
+		mac_dbg("\tTRIG0: PON is the master\n");
 	else if (trig0_sel == 1)
-		mac_printf("\tTRIG0: PCIE0 is the master\n");
+		mac_dbg("\tTRIG0: PCIE0 is the master\n");
 	else if (trig0_sel == 2)
-		mac_printf("\tTRIG0: PCIE1 is the master\n");
+		mac_dbg("\tTRIG0: PCIE1 is the master\n");
 	else if (trig0_sel == 3)
-		mac_printf("\tTRIG0: XGMAC2 is the master\n");
+		mac_dbg("\tTRIG0: XGMAC2 is the master\n");
 	else if (trig0_sel == 4)
-		mac_printf("\tTRIG0: XGMAC3 is the master\n");
+		mac_dbg("\tTRIG0: XGMAC3 is the master\n");
 	else if (trig0_sel == 5)
-		mac_printf("\tTRIG0: XGMAC4 is the master\n");
+		mac_dbg("\tTRIG0: XGMAC4 is the master\n");
 	else if (trig0_sel == 6)
-		mac_printf("\tTRIG0: PON100US is the master\n");
+		mac_dbg("\tTRIG0: PON100US is the master\n");
 	else if (trig0_sel == 8)
-		mac_printf("\tTRIG0: EXTPPS0 is the master\n");
+		mac_dbg("\tTRIG0: EXTPPS0 is the master\n");
 	else if (trig0_sel == 9)
-		mac_printf("\tTRIG0: EXTPPS1 is the master\n");
+		mac_dbg("\tTRIG0: EXTPPS1 is the master\n");
 	else if (trig0_sel == 10)
-		mac_printf("\tTRIG0: Software Trigger\n");
+		mac_dbg("\tTRIG0: Software Trigger\n");
 	else
 		goto end;
 
 	if (trig1_sel == 0)
-		mac_printf("\tTRIG1: PON is the master\n");
+		mac_dbg("\tTRIG1: PON is the master\n");
 	else if (trig1_sel == 1)
-		mac_printf("\tTRIG1: PCIE0 is the master\n");
+		mac_dbg("\tTRIG1: PCIE0 is the master\n");
 	else if (trig1_sel == 2)
-		mac_printf("\tTRIG1: PCIE1 is the master\n");
+		mac_dbg("\tTRIG1: PCIE1 is the master\n");
 	else if (trig1_sel == 3)
-		mac_printf("\tTRIG1: XGMAC2 is the master\n");
+		mac_dbg("\tTRIG1: XGMAC2 is the master\n");
 	else if (trig1_sel == 4)
-		mac_printf("\tTRIG1: XGMAC3 is the master\n");
+		mac_dbg("\tTRIG1: XGMAC3 is the master\n");
 	else if (trig1_sel == 5)
-		mac_printf("\tTRIG1: XGMAC4 is the master\n");
+		mac_dbg("\tTRIG1: XGMAC4 is the master\n");
 	else if (trig1_sel == 6)
-		mac_printf("\tTRIG1: PON100US is the master\n");
+		mac_dbg("\tTRIG1: PON100US is the master\n");
 	else if (trig1_sel == 8)
-		mac_printf("\tTRIG1: EXTPPS0 is the master\n");
+		mac_dbg("\tTRIG1: EXTPPS0 is the master\n");
 	else if (trig1_sel == 9)
-		mac_printf("\tTRIG1: EXTPPS1 is the master\n");
+		mac_dbg("\tTRIG1: EXTPPS1 is the master\n");
 	else if (trig1_sel == 10)
-		mac_printf("\tTRIG1: Software Trigger\n");
+		mac_dbg("\tTRIG1: Software Trigger\n");
 	else
 		goto end;
 
 	if (sw_trig == 0)
-		mac_printf("\tSW_TRIG: 0\n");
+		mac_dbg("\tSW_TRIG: 0\n");
 	else if (sw_trig == 1)
-		mac_printf("\tSW_TRIG: 1\n");
+		mac_dbg("\tSW_TRIG: 1\n");
 
 	MAC_SET_VAL(cfg0, CFG1_1588, TRIG1SEL, trig1_sel);
 	MAC_SET_VAL(cfg0, CFG1_1588, TRIG0SEL, trig0_sel);
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
index a941e9157d6e..a0999e524095 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
@@ -59,7 +59,8 @@ static void *parse_ptp_packet(struct sk_buff *skb,
 static void xgmac_get_rx_tstamp(struct mac_prv_data *pdata,
 				struct sk_buff *skb);
 static int xgmac_ptp_register(void *pdev);
-static void xgmac_extts_isr_handler(struct mac_prv_data *pdata);
+static void xgmac_extts_isr_handler(struct mac_prv_data *pdata,
+				    u32 tstamp_sts);
 
 void xgmac_config_timer_reg(void *pdev)
 {
@@ -555,7 +556,7 @@ int xgmac_ptp_isr_hdlr(void *pdev)
 	/* Auxilairy Timestamp stored interrupt */
 	if (tstamp_sts & 0x4) {
 		if (XGMAC_RGRD(pdata, MAC_AUX_CTRL) & 0x30)
-			xgmac_extts_isr_handler(pdata);
+			xgmac_extts_isr_handler(pdata, tstamp_sts);
 	}
 
 	return ret;
@@ -607,9 +608,10 @@ static u64 xgmac_get_auxtimestamp(struct mac_prv_data *pdata)
 	return nsec;
 }
 
-static void xgmac_extts_isr_handler(struct mac_prv_data *pdata)
+static void xgmac_extts_isr_handler(struct mac_prv_data *pdata,
+				    u32 tstamp_sts)
 {
-	u8 val = XGMAC_RGRD_BITS(pdata, MAC_TSTAMP_STSR, ATSSTN);
+	u8 val = MAC_GET_VAL(tstamp_sts, MAC_TSTAMP_STSR, ATSSTN);
 	struct ptp_clock_event event;
 
 	if (val & AUX_TRIG_0) {
