From f38a549c8d5ee59517c50887008b2088f6414b85 Mon Sep 17 00:00:00 2001
From: Wu Zhixian <zhixianx.wu@intel.com>
Date: Thu, 2 May 2019 11:09:15 +0800
Subject: [PATCH] fix register write issue

---
 drivers/phy/intel/phy-intel-combo.c | 26 +++++++-------------------
 1 file changed, 7 insertions(+), 19 deletions(-)

diff --git a/drivers/phy/intel/phy-intel-combo.c b/drivers/phy/intel/phy-intel-combo.c
index 3ec36a430f47..d784bce10354 100644
--- a/drivers/phy/intel/phy-intel-combo.c
+++ b/drivers/phy/intel/phy-intel-combo.c
@@ -398,15 +398,10 @@ static int phy_rxeq_autoadapt(struct phy *phy)
 	 * 2:0		RX_LOS_THRSHLD_OVRD_VAL = 0
 	 */
 	/* ADAPT_REQ Bit 11 and ADAPT_REQ_OVRD_EN Bit 12 */
-	combo_phy_reg_bit_clr(iphy->cr_base, 11,
-		(RAWLANEN_RX_OV_IN_3 << 2));
-	combo_phy_reg_bit_clr(iphy->cr_base, 12,
-		(RAWLANEN_RX_OV_IN_3 << 2));
+	val = readl(iphy->cr_base + (RAWLANEN_RX_OV_IN_3 << 2));
+	writel(val & ~(BIT(11) | BIT(12)), iphy->cr_base + (RAWLANEN_RX_OV_IN_3 << 2));
 	/* ADAPT_REQ and ADAPT_REQ_OVRD_EN set to '11' */
-	combo_phy_reg_bit_set(iphy->cr_base, 11,
-		(RAWLANEN_RX_OV_IN_3 << 2));
-	combo_phy_reg_bit_set(iphy->cr_base, 12,
-		(RAWLANEN_RX_OV_IN_3 << 2));
+	writel(val | (BIT(11) | BIT(12)), iphy->cr_base + (RAWLANEN_RX_OV_IN_3 << 2));
 
 	/* Check for RX Adaptation is done
 	 * RAWLANEN_DIG_AON_RX_ADAPT_DONE.RX_ADAPT_DONE[0]
@@ -417,15 +412,10 @@ static int phy_rxeq_autoadapt(struct phy *phy)
 	/* if auto adapt fail, run auto adapt one more time */
 	if (IS_ERR(err)) {
 		/* ADAPT_REQ Bit 11 and ADAPT_REQ_OVRD_EN Bit 12 */
-		combo_phy_reg_bit_clr(iphy->cr_base, 11,
-			(RAWLANEN_RX_OV_IN_3 << 2));
-		combo_phy_reg_bit_clr(iphy->cr_base, 12,
-			(RAWLANEN_RX_OV_IN_3 << 2));
+		val = readl(iphy->cr_base + (RAWLANEN_RX_OV_IN_3 << 2));
+		writel(val & ~(BIT(11) | BIT(12)), iphy->cr_base + (RAWLANEN_RX_OV_IN_3 << 2));
 		/* ADAPT_REQ and ADAPT_REQ_OVRD_EN set to '11' */
-		combo_phy_reg_bit_set(iphy->cr_base, 11,
-			(RAWLANEN_RX_OV_IN_3 << 2));
-		combo_phy_reg_bit_set(iphy->cr_base, 12,
-			(RAWLANEN_RX_OV_IN_3 << 2));
+		writel(val | (BIT(11) | BIT(12)), iphy->cr_base + (RAWLANEN_RX_OV_IN_3 << 2));
 
 		/* Check for RX Adaptation is done
 		 * RAWLANEN_DIG_AON_RX_ADAPT_DONE.RX_ADAPT_DONE[0]
@@ -434,8 +424,6 @@ static int phy_rxeq_autoadapt(struct phy *phy)
 			(RAWLANEN_RX_OV_IN_3 << 2), val, (!!(val & BIT(0))),
 			5, 5 * PHY_RXADAPT_POLL_CNT);
 	}
-	combo_phy_reg_bit_clr(iphy->cr_base, 11, (RAWLANEN_RX_OV_IN_3 << 2));
-	combo_phy_reg_bit_set(iphy->cr_base, 12, (RAWLANEN_RX_OV_IN_3 << 2));
 	/* Stop RX Adaptation */
 	combo_phy_w32(iphy->cr_base, 0x0, (RAWLANEN_RX_OV_IN_3 << 2));
 	dev_dbg(dev, "RX Adaptation Turn off after done:\n");
@@ -444,7 +432,7 @@ static int phy_rxeq_autoadapt(struct phy *phy)
 		combo_phy_r32(iphy->cr_base, (RAWLANEN_RX_OV_IN_3 << 2)));
 
 	/* Display RX Adapt Value in PMA */
-	dev_dbg(dev, "\nRead back on RX Adapted Value\n");
+	dev_dbg(dev, "Read back on RX Adapted Value\n");
 	/* LANEN_RX_ADPT_ATT_STAT ATT Adaptation code */
 	dev_dbg(dev, "LANEN_RX_ADPT_ATT_STAT [ (0x%08x) = 0x%08x\n",
 		(iphy->cr_base + (LANEN_RX_ADPT_ATT_STAT << 2)),
