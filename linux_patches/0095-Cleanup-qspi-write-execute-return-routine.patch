From 48c8346e5b180457d61bed65add8e59bca1c59a0 Mon Sep 17 00:00:00 2001
From: Peter Harliman Liem <peter.harliman.liem@intel.com>
Date: Wed, 20 Jun 2018 11:58:15 +0800
Subject: [PATCH] Cleanup qspi write_execute return routine

QSPI write_execute return routine needs some cleanup:
- combine multiple exit path into one
- there should be no distinguished path for NOR flash.
  It should return standard zero.
---
 drivers/spi/spi-cadence-qspi-apb.c | 21 ++++++++-------------
 1 file changed, 8 insertions(+), 13 deletions(-)

diff --git a/drivers/spi/spi-cadence-qspi-apb.c b/drivers/spi/spi-cadence-qspi-apb.c
index a49c9fb1e0e1..9bf0801cf02c 100644
--- a/drivers/spi/spi-cadence-qspi-apb.c
+++ b/drivers/spi/spi-cadence-qspi-apb.c
@@ -801,7 +801,10 @@ static int cadence_qspi_apb_indirect_write_execute(
 			pr_err("QSPI: Indirect write timeout\n");
 			ret = -ETIMEDOUT;
 			goto failwr;
+		} else {
+			ret = 0;
 		}
+
 		if (*irq_status & CQSPI_IRQ_STATUS_ERR) {
 			/* Error occurred */
 			pr_err("QSPI: Indirect write error IRQ status 0x%08x\n",
@@ -841,27 +844,19 @@ static int cadence_qspi_apb_indirect_write_execute(
 	if (fill_level) {
 		pr_debug("%s fill level is %u\n", __func__, fill_level);
 		ret = -EAGAIN;
-		goto failwr;
 	}
 
+failwr:
 	/* Disable interrupt. */
 	CQSPI_WRITEL(0, reg_base + CQSPI_REG_IRQMASK);
 	/* Clear indirect completion status */
 	CQSPI_WRITEL(CQSPI_REG_INDIRECTWR_DONE_MASK,
 		reg_base + CQSPI_REG_INDIRECTWR);
-	if (flash_type == QSPI_FLASH_TYPE_NOR)
-		return txlen;
-	else
-		return 0;
-failwr:
-	/* Disable interrupt. */
-	CQSPI_WRITEL(0, reg_base + CQSPI_REG_IRQMASK);
+
 	/* Cancel the indirect write */
-	CQSPI_WRITEL(CQSPI_REG_INDIRECTWR_CANCEL_MASK,
-		reg_base + CQSPI_REG_INDIRECTWR);
-	/* Clear indirect completion status */
-	CQSPI_WRITEL(CQSPI_REG_INDIRECTWR_DONE_MASK,
-		     reg_base + CQSPI_REG_INDIRECTWR);
+	if (ret)
+		CQSPI_WRITEL(CQSPI_REG_INDIRECTWR_CANCEL_MASK,
+			     reg_base + CQSPI_REG_INDIRECTWR);
 
 	return ret;
 }
