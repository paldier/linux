From 9011c728d1b9655b151bb89874a31c5b3be7b2a1 Mon Sep 17 00:00:00 2001
From: Oren Bakshe <oren.bakshe@intel.com>
Date: Wed, 12 Dec 2018 14:27:57 +0200
Subject: [PATCH] remove qos driver prints on boot

---
 drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_fw.c   |  6 ++++--
 drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_main.c | 12 ++++++------
 2 files changed, 10 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_fw.c b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_fw.c
index 4ce72e71d846..119aa418e0d8 100644
--- a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_fw.c
+++ b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_fw.c
@@ -148,7 +148,7 @@ int do_load_firmware(
 	hdr->major = le32_to_cpu(hdr->major);
 	hdr->minor = le32_to_cpu(hdr->minor);
 	hdr->build = le32_to_cpu(hdr->build);
-	QOS_LOG_INFO("Firmware size(%zu) major(%u) minor(%u) build(%u)\n",
+	QOS_LOG_DEBUG("Firmware size(%zu) major(%u) minor(%u) build(%u)\n",
 			size,
 			hdr->major,
 			hdr->minor,
@@ -195,7 +195,9 @@ int do_load_firmware(
 				FW_OK_SIGN, val);
 		return  -ENODEV;
 	}
-	QOS_LOG_INFO("FW is running :)\n");
+
+	QOS_LOG_INFO("QoS FW ver %d.%d.%d was loaded\n", qdev->fwver.major,
+		     qdev->fwver.minor, qdev->fwver.build);
 	*((uint32_t *)(qdev->fwcom.cmdbuf)) = 0;
 	return 0;
 }
diff --git a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_main.c b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_main.c
index e1bd371ab655..f52903ce9f6b 100644
--- a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_main.c
+++ b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_main.c
@@ -2053,11 +2053,11 @@ int pp_qos_dev_init(struct pp_qos_dev *qdev, struct pp_qos_init_param *conf)
 		goto out;
 	}
 
-	QOS_LOG_INFO("wred total resources\t%u\n",
+	QOS_LOG_DEBUG("wred total resources\t%u\n",
 			qdev->hwconf.wred_total_avail_resources);
-	QOS_LOG_INFO("qm_ddr_start\t\t0x%08X\n", qdev->hwconf.qm_ddr_start);
-	QOS_LOG_INFO("qm_num_of_pages\t\t%u\n", qdev->hwconf.qm_num_pages);
-	QOS_LOG_INFO("clock\t\t\t%u\n", qdev->hwconf.qos_clock);
+	QOS_LOG_DEBUG("qm_ddr_start\t\t0x%08X\n", qdev->hwconf.qm_ddr_start);
+	QOS_LOG_DEBUG("qm_num_of_pages\t\t%u\n", qdev->hwconf.qm_num_pages);
+	QOS_LOG_DEBUG("clock\t\t\t%u\n", qdev->hwconf.qos_clock);
 
 	if (conf->wred_p_const > 1023) {
 		QOS_LOG_ERR("wred_p_const should be not greater than 1023\n");
@@ -2068,8 +2068,8 @@ int pp_qos_dev_init(struct pp_qos_dev *qdev, struct pp_qos_init_param *conf)
 	qdev->hwconf.wred_const_p = conf->wred_p_const;
 	qdev->hwconf.wred_max_q_size = conf->wred_max_q_size;
 
-	QOS_LOG_INFO("wred p const\t\t%u\n", qdev->hwconf.wred_const_p);
-	QOS_LOG_INFO("wred max q size\t\t%u\n", qdev->hwconf.wred_max_q_size);
+	QOS_LOG_DEBUG("wred p const\t\t%u\n", qdev->hwconf.wred_const_p);
+	QOS_LOG_DEBUG("wred max q size\t\t%u\n", qdev->hwconf.wred_max_q_size);
 
 	rc = load_firmware(qdev, FIRMWARE_FILE);
 	if (rc)
