From 9f1b5d420a0e26787be7080e64bc728f0d513094 Mon Sep 17 00:00:00 2001
From: CI Assistant <chdauto@intel.com>
Date: Fri, 13 Mar 2020 15:58:38 +0200
Subject: [PATCH] Merge pull request #1905 in SW_UGW/linux from
 bugfix/UGW_SW-47745-multicast-functionality-broken-in-bridged-mode-8.4.1 to
 8.4.1

* commit '17adfc52f0c125490c1668c772fad5f0b31dc523':
  UGW_SW-47745:Selective flooding of igmp control packets to bridged WAN
---
 net/bridge/br_ioctl.c              |  8 ++++++--
 net/bridge/ltq_br_mcast_snooping.c | 11 ++++++++---
 2 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/net/bridge/br_ioctl.c b/net/bridge/br_ioctl.c
index 7c79217ee14c..975c70184ee3 100644
--- a/net/bridge/br_ioctl.c
+++ b/net/bridge/br_ioctl.c
@@ -132,10 +132,14 @@ static int mcast_snoop_set_router_port(struct net_bridge *br, struct ifreq *rq)
 
 	if (rp.type == IPV4) {
 		port->igmp_router_port = 1;
-		mod_timer(&port->igmp_router_timer, jiffies + rp.expires * HZ);
+		if (rp.expires) {
+			mod_timer(&port->igmp_router_timer, jiffies + rp.expires * HZ);
+		}
 	} else if (rp.type == IPV6) {
 		port->mld_router_port = 1;
-		mod_timer(&port->mld_router_timer, jiffies + rp.expires * HZ);
+		if (rp.expires) {
+			mod_timer(&port->mld_router_timer, jiffies + rp.expires * HZ);
+		}
 	} else {
 		dev_put(dev);
 		return -EINVAL;
diff --git a/net/bridge/ltq_br_mcast_snooping.c b/net/bridge/ltq_br_mcast_snooping.c
index b7f148032794..594e96ed5560 100644
--- a/net/bridge/ltq_br_mcast_snooping.c
+++ b/net/bridge/ltq_br_mcast_snooping.c
@@ -608,6 +608,8 @@ static int br_selective_flood4(struct net_bridge_port *p, struct sk_buff *skb)
 	if (!IN_MULTICAST(ntohl(iph->daddr)))
 		return 1;
 
+	if ((ntohl(iph->daddr) & 0xff000000U) == 0xef000000U)
+		return 1;
 	init_ipaddr(&daddr, IPV4, &iph->daddr);
 	init_ipaddr(&saddr, IPV4, &iph->saddr);
 
@@ -630,9 +632,12 @@ static int br_selective_flood4(struct net_bridge_port *p, struct sk_buff *skb)
 		case IGMPV2_HOST_MEMBERSHIP_REPORT:
 		case IGMPV3_HOST_MEMBERSHIP_REPORT:
 		case IGMP_HOST_LEAVE_MESSAGE:
-			if ((ntohl(iph->daddr) & 0xffffff00U) == 0xe0000000U ||
-				(ntohl(iph->daddr) & 0xff000000U) == 0xef000000U)
-				return 0;	/* Allow control packets */
+			if ((ntohl(iph->daddr) & 0xffffff00U) == 0xe0000000U) {
+				if (p->igmp_router_port)
+					return 1;
+				else
+					return 0;	/* Allow control packets */
+			}
 		default:
 			break;
 		}
