From e6c10881cb4f8150a0e7af8c04027bb99c1d21ce Mon Sep 17 00:00:00 2001
From: Waldemar Rymarkiewicz <waldemarx.rymarkiewicz@intel.com>
Date: Fri, 17 Aug 2018 15:19:33 +0200
Subject: [PATCH] PMCPESYS-73: thermal: ltq: Pool and timeout when reading data
 reg

Use regmap_read_poll_timeout() to poll data register until the temp
data is ready or exit after specified timeout time.

Signed-off-by: Waldemar Rymarkiewicz <waldemarx.rymarkiewicz@intel.com>
---
 drivers/thermal/ltq_thermal.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/thermal/ltq_thermal.c b/drivers/thermal/ltq_thermal.c
index f662ea6c82eb..1d8a9ee0fa22 100644
--- a/drivers/thermal/ltq_thermal.c
+++ b/drivers/thermal/ltq_thermal.c
@@ -116,11 +116,11 @@ void  ltq_grx500_init(struct ltq_thermal_sensor *sensor)
 int ltq_grx500_get_temp(struct ltq_thermal_sensor *sensor)
 {
 	u32 reg;
-	bool ready = false;
 	int T, v;
 	int a0 = -40;
 	int v1 = 3800;
 	int v2 = 3421;
+	int ret;
 	struct ltq_thermal *priv = sensor->drvdata;
 
 	if (!priv)
@@ -135,18 +135,18 @@ int ltq_grx500_get_temp(struct ltq_thermal_sensor *sensor)
 			   SOC_START | TS_EN_WORKING);
 
 	/* Wait for and read out the measurement */
-	while (!ready) {
-		regmap_read(priv->chiptop, DATA_REG, &reg);
-		if ((reg & TS_DV) > 0)
-			ready = true;
-	}
-
-	v = reg & TS_CODE;
+	ret  = regmap_read_poll_timeout(priv->chiptop, DATA_REG, reg,
+					(reg & TS_DV) > 0, 50, 2000);
 
 	/* Disable the temp sensor */
 	regmap_update_bits(priv->chiptop, CTRL_REG, SOC_MASK | TS_EN_MASK,
 			   SOC_NC | TS_EN_SHUNT);
 
+	if (ret)
+		return -EIO;  /* temp read timeouted */
+
+	v = reg & TS_CODE;
+
 	/* Temperature interpolation */
 	T = (int)(a0 * 1000000 + (-435356 * (v - v1)) +
 		  (-360 * (v - v1) * (v - v2)) + 1);
