From 536bb7d575094f36ad248e7f322a23898fd19d91 Mon Sep 17 00:00:00 2001
From: thampan <joby.thampan@intel.com>
Date: Mon, 2 Jul 2018 13:47:58 +0800
Subject: [PATCH] DRVLIB_SW-778: Checkpatch 80% warnings removed

---
 drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c   |  6 ++
 .../net/ethernet/lantiq/switch-api/mac/gswss_api.c | 52 ++++++---------
 .../ethernet/lantiq/switch-api/mac/gswss_mac_api.c | 71 +++++++++------------
 .../net/ethernet/lantiq/switch-api/mac/mac_cfg.c   | 15 ++---
 .../net/ethernet/lantiq/switch-api/mac/mac_drv.c   | 14 +---
 .../net/ethernet/lantiq/switch-api/mac/xgmac_cli.c |  4 +-
 .../ethernet/lantiq/switch-api/mac/xgmac_common.h  |  6 +-
 .../ethernet/lantiq/switch-api/mac/xgmac_debug.c   |  4 +-
 .../ethernet/lantiq/switch-api/mac/xgmac_mac_api.c | 11 +---
 .../ethernet/lantiq/switch-api/mac/xgmac_main.c    | 11 ++--
 .../ethernet/lantiq/switch-api/mac/xgmac_mdio.c    | 74 +++++++++++-----------
 .../ethernet/lantiq/switch-api/mac/xgmac_mtl_api.c |  4 +-
 .../net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c | 28 +++-----
 13 files changed, 124 insertions(+), 176 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
old mode 100644
new mode 100755
index d0a2082beaae..062e71d7c180
--- a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
+++ b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
@@ -201,6 +201,7 @@ static int set_settings(struct net_device *dev, struct ethtool_cmd *cmd)
 	return -ENODEV;
 }
 
+#if IS_ENABLED(CONFIG_LTQ_DATAPATH_PTP1588)
 static int get_tsinfo(struct net_device *dev, struct ethtool_ts_info *ts_info)
 {
 	struct ltq_switch_priv_t *priv;
@@ -214,6 +215,7 @@ static int get_tsinfo(struct net_device *dev, struct ethtool_ts_info *ts_info)
 
 	return 0;
 }
+#endif
 
 /* Reset the device */
 static int nway_reset(struct net_device *dev)
@@ -229,7 +231,9 @@ static const struct ethtool_ops ethtool_ops = {
 	.set_settings		= set_settings,
 	.nway_reset		= nway_reset,
 	.get_link		= ethtool_op_get_link,
+#if IS_ENABLED(CONFIG_LTQ_DATAPATH_PTP1588)	
 	.get_ts_info 		= get_tsinfo,
+#endif	
 };
 
 /* open the network device interface*/
@@ -651,7 +655,9 @@ static int ltq_eth_init(struct net_device *dev)
 		}
 	}
 
+#if IS_ENABLED(CONFIG_LTQ_DATAPATH_PTP1588)
 	dev->ethtool_ops = &ethtool_ops;
+#endif
 
 	priv->dp_subif.subif = 0;
 	priv->dp_subif.port_id = priv->dp_port_id;
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/gswss_api.c b/drivers/net/ethernet/lantiq/switch-api/mac/gswss_api.c
index afca2ff2e5f1..4262efb30362 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/gswss_api.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/gswss_api.c
@@ -33,10 +33,8 @@ int gswss_cfg0_1588(void *pdev, u32 ref_time, u32 dig_time, u32 bin_time,
 		mac_printf("\tREF_TIME: XGMAC3 is the master\n");
 	else if (ref_time == 5)
 		mac_printf("\tREF_TIME: XGMAC4 is the master\n");
-	else {
-		mac_printf("\tREF_TIME: Wrong Value");
+	else
 		goto end;
-	}
 
 	if (dig_time == 0)
 		mac_printf("\tDIG_TIME: PON_PCS is the master\n");
@@ -50,10 +48,8 @@ int gswss_cfg0_1588(void *pdev, u32 ref_time, u32 dig_time, u32 bin_time,
 		mac_printf("\tDIG_TIME: XGMAC3 is the master\n");
 	else if (dig_time == 5)
 		mac_printf("\tDIG_TIME: XGMAC4 is the master\n");
-	else {
-		mac_printf("\tDIG_TIME: Wrong Value");
+	else
 		goto end;
-	}
 
 	if (bin_time == 0)
 		mac_printf("\tBIN_TIME: PON_PCS is the master\n");
@@ -67,10 +63,8 @@ int gswss_cfg0_1588(void *pdev, u32 ref_time, u32 dig_time, u32 bin_time,
 		mac_printf("\tBIN_TIME: XGMAC3 is the master\n");
 	else if (bin_time == 5)
 		mac_printf("\tBIN_TIME: XGMAC4 is the master\n");
-	else {
-		mac_printf("\tBIN_TIME: Wrong Value");
+	else
 		goto end;
-	}
 
 	if (pps_sel == 0)
 		mac_printf("\tPPS_SEL: PON_PCS is the master\n");
@@ -88,10 +82,8 @@ int gswss_cfg0_1588(void *pdev, u32 ref_time, u32 dig_time, u32 bin_time,
 		mac_printf("\tPPS_SEL: PON PPS100US is the master\n");
 	else if (pps_sel == 7)
 		mac_printf("\tPPS_SEL: Software trigger\n");
-	else {
-		mac_printf("\tPPS_SEL: Wrong Value");
+	else
 		goto end;
-	}
 
 	MAC_SET_VAL(cfg0, CFG0_1588, REFTIME, ref_time);
 	MAC_SET_VAL(cfg0, CFG0_1588, DIGTIME, dig_time);
@@ -139,10 +131,8 @@ int gswss_cfg1_1588(void *pdev, u32 trig0_sel, u32 trig1_sel, u32 sw_trig)
 		mac_printf("\tTRIG0: EXTPPS1 is the master\n");
 	else if (trig0_sel == 10)
 		mac_printf("\tTRIG0: Software Trigger\n");
-	else {
-		mac_printf("\tREF_TIME: Wrong Value");
+	else
 		goto end;
-	}
 
 	if (trig1_sel == 0)
 		mac_printf("\tTRIG1: PON is the master\n");
@@ -164,10 +154,8 @@ int gswss_cfg1_1588(void *pdev, u32 trig0_sel, u32 trig1_sel, u32 sw_trig)
 		mac_printf("\tTRIG1: EXTPPS1 is the master\n");
 	else if (trig1_sel == 10)
 		mac_printf("\tTRIG1: Software Trigger\n");
-	else {
-		mac_printf("\tTRIG1: Wrong Value");
+	else
 		goto end;
-	}
 
 	if (sw_trig == 0)
 		mac_printf("\tSW_TRIG: 0\n");
@@ -187,7 +175,6 @@ int gswss_cfg1_1588(void *pdev, u32 trig0_sel, u32 trig1_sel, u32 sw_trig)
 	return 0;
 }
 
-
 int gswss_get_cfg0_1588(void *pdev, u32 *ref_time, u32 *dig_time,
 			u32 *bin_time, u32 *pps_sel)
 {
@@ -195,8 +182,6 @@ int gswss_get_cfg0_1588(void *pdev, u32 *ref_time, u32 *dig_time,
 	u32 cfg0;
 
 #ifdef __KERNEL__
-
-
 	spin_lock_bh(&pdata->adap_lock);
 #endif
 
@@ -347,8 +332,6 @@ int gswss_get_switch_ss_reset(void *pdev)
 	u32 core_reset, reset;
 
 #ifdef __KERNEL__
-
-
 	spin_lock_bh(&pdata->adap_lock);
 #endif
 	core_reset = GSWSS_RGRD(pdata, GSWIP_CFG);
@@ -385,10 +368,8 @@ int gswss_set_clkmode(void *pdev, u32 clk_mode)
 		mac_printf("%s\n", "Auto Mode (666/450) Mhz");
 	else if (clk_mode == 3)
 		mac_printf("%s\n", "Auto Mode (666/450) Mhz");
-	else {
-		mac_printf("%s\n", "Wrong Value");
+	else
 		goto end;
-	}
 
 	MAC_SET_VAL(clk_mode_cfg, GSWIP_CFG, CLK_MD, clk_mode);
 
@@ -443,9 +424,9 @@ int gswss_set_corese(void *pdev, u32 val)
 #endif
 	core_en = GSWSS_RGRD(pdata, GSWIP_CFG);
 
-	if (val == FREEZE)
+	if (val == FREEZE) {
 		pdata->core_en_cnt++;
-	else {
+	} else {
 		if (pdata->core_en_cnt)
 			pdata->core_en_cnt--;
 	}
@@ -531,7 +512,6 @@ int gswss_get_macsec_to_mac(void *pdev)
 	return mac_idx;
 }
 
-
 int gswss_dbg_macsec_to_mac(void *pdev)
 {
 	struct adap_prv_data *pdata = GET_ADAP_PDATA(pdev);
@@ -625,21 +605,27 @@ int gswss_get_int_en_sts(void *pdev)
 	for (i = 0; i < max_mac; i++) {
 		mac_printf("\tXGMAC %d INT EN:  %s\n",
 			   i,
-			   GET_N_BITS(reg_val, GSWIPSS_IER0_XGMAC2_POS + i, 1) ?
+			   GET_N_BITS(reg_val,
+				      GSWIPSS_IER0_XGMAC2_POS + i, 1) ?
 			   "ENABLED" :
 			   "DISABLED");
 		mac_printf("\tXGMAC %d INT STS: %s\n",
 			   i,
-			   GET_N_BITS(mac_int_isr0, GSWIPSS_ISR0_XGMAC2_POS + i, 1) ?
+			   GET_N_BITS(mac_int_isr0,
+				      GSWIPSS_ISR0_XGMAC2_POS + i, 1) ?
 			   "ENABLED" :
 			   "DISABLED");
 
 		mac_printf("\tLINK %d INT EN:  %s\n",
-			   i, GET_N_BITS(reg_val1, GSWIPSS_IER1_LINK2_POS + i, 1) ?
+			   i,
+			   GET_N_BITS(reg_val1,
+				      GSWIPSS_IER1_LINK2_POS + i, 1) ?
 			   "ENABLED" :
 			   "DISABLED");
 		mac_printf("\tLINK %d INT STS: %s\n",
-			   i, GET_N_BITS(mac_int_isr1, GSWIPSS_ISR1_LINK2_POS + i, 1) ?
+			   i,
+			   GET_N_BITS(mac_int_isr1,
+				      GSWIPSS_ISR1_LINK2_POS + i, 1) ?
 			   "ENABLED" :
 			   "DISABLED");
 	}
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/gswss_mac_api.c b/drivers/net/ethernet/lantiq/switch-api/mac/gswss_mac_api.c
index b79de98b7ea3..7939915e55f0 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/gswss_mac_api.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/gswss_mac_api.c
@@ -133,7 +133,6 @@ void gswss_help(void)
 
 	for (i = 0; i < num_of_elem; i++) {
 		if (gswss_mac_cfg[i].help) {
-
 #if defined(CHIPTEST) && CHIPTEST
 			mac_printf("gsw gswss %15s \t %s\n",
 				   gswss_mac_cfg[i].cmdname,
@@ -143,19 +142,17 @@ void gswss_help(void)
 				   gswss_mac_cfg[i].cmdname,
 				   gswss_mac_cfg[i].help);
 #endif
-
 		}
 	}
 
 	mac_printf("\n");
 
 	for (i = 0; i < num_of_elem; i++) {
-
 		if (gswss_mac_cfg[i].cmdname) {
-
 #if defined(CHIPTEST) && CHIPTEST
 
-			if (!strcmp(gswss_mac_cfg[i].cmdname, "txtstamp_fifo")) {
+			if (!strcmp(gswss_mac_cfg[i].cmdname,
+				    "txtstamp_fifo")) {
 				mac_printf("gsw gswss get %11s \t "
 					   "<0/1/2: MacIdx> <rec_id>\n",
 					   gswss_mac_cfg[i].cmdname);
@@ -170,7 +167,8 @@ void gswss_help(void)
 				   gswss_mac_cfg[i].cmdname);
 #else
 
-			if (!strcmp(gswss_mac_cfg[i].cmdname, "txtstamp_fifo")) {
+			if (!strcmp(gswss_mac_cfg[i].cmdname,
+				    "txtstamp_fifo")) {
 				mac_printf("switch_cli gswss get %11s \t "
 					   "<0/1/2: MacIdx> <rec_id>\n",
 					   gswss_mac_cfg[i].cmdname);
@@ -185,7 +183,6 @@ void gswss_help(void)
 				   "<0/1/2: MacIdx> \n",
 				   gswss_mac_cfg[i].cmdname);
 #endif
-
 		}
 	}
 
@@ -195,7 +192,6 @@ void gswss_help(void)
 
 	for (i = 0; i < num_of_elem; i++) {
 		if (gswss_adap_cfg[i].help) {
-
 #if defined(CHIPTEST) && CHIPTEST
 			mac_printf("gsw gswss %15s \t %s\n",
 				   gswss_adap_cfg[i].cmdname,
@@ -212,7 +208,6 @@ void gswss_help(void)
 
 	for (i = 0; i < num_of_elem; i++) {
 		if (gswss_adap_cfg[i].cmdname) {
-
 #if defined(CHIPTEST) && CHIPTEST
 			mac_printf("gsw gswss get %11s \t \n",
 				   gswss_adap_cfg[i].cmdname);
@@ -233,7 +228,6 @@ int gswss_mac_check_args(int argc, char *argv)
 
 	for (i = 0; i < num_of_elem; i++) {
 		if (!strcmp(argv, gswss_mac_cfg[i].cmdname)) {
-
 			if (argc != (gswss_mac_cfg[i].args + 3)) {
 				mac_printf("\n--WRONG Command--\n");
 				mac_printf("switch_cli gswss %s %s\n",
@@ -258,9 +252,8 @@ struct mac_ops *gswss_get_mac_ops(char *cmd, char *argv, u32 *start_arg)
 	u32 max_mac = 0;
 
 	for (i = 0; i < num_of_elem; i++) {
-		if (!strcmp(cmd, gswss_mac_cfg[i].cmdname)) {
+		if (!strcmp(cmd, gswss_mac_cfg[i].cmdname))
 			break;
-		}
 	}
 
 	max_mac = gsw_get_mac_subifcnt(0);
@@ -285,7 +278,6 @@ int gswss_adap_check_args(int argc, char *argv)
 
 	for (i = 0; i < num_of_elem; i++) {
 		if (!strcmp(argv, gswss_adap_cfg[i].cmdname)) {
-
 			if (argc != (gswss_adap_cfg[i].args + 3)) {
 				mac_printf("\n--WRONG Command--\n");
 				mac_printf("switch_cli %s\n",
@@ -294,8 +286,6 @@ int gswss_adap_check_args(int argc, char *argv)
 					   gswss_adap_cfg[i].cmdname);
 				return -1;
 			}
-
-
 		}
 	}
 
@@ -614,9 +604,11 @@ int gswss_main(u32 argc, u8 *argv[])
 			} else if (dir == TX) {
 				if (oper == 0) {
 					if (val == 0 || val == 1)
-						gswss_set_mac_txfcs_ins_op(ops, val);
+						gswss_set_mac_txfcs_ins_op(ops,
+									   val);
 					else if (val == 2 || val == 3)
-						gswss_set_mac_txfcs_rm_op(ops, val - 2);
+						gswss_set_mac_txfcs_rm_op(ops,
+									  val - 2);
 				} else if (oper == 1) {
 					gswss_set_mac_txsptag_op(ops, val);
 				}
@@ -1254,11 +1246,11 @@ void gswss_get_txtstamp_fifo(void *pdev,
 	u32 mac_txtstamp;
 
 	gswss_set_txtstamp_access(pdev, 0, record_id);
-#if 0
-	mac_printf("\nMAC%d: TxTstamp Fifo Record ID %d:\n",
-		   (pdata->mac_idx + 2),
-		   record_id);
-#endif
+
+	mac_dbg("\nMAC%d: TxTstamp Fifo Record ID %d:\n",
+		(pdata->mac_idx + 2),
+		record_id);
+
 	mac_txtstamp = GSWSS_MAC_RGRD(pdata, MAC_TXTS_CIC(pdata->mac_idx));
 
 	f_entry->ttse = GET_N_BITS(mac_txtstamp, 4, 1);
@@ -1275,35 +1267,33 @@ void gswss_get_txtstamp_fifo(void *pdev,
 
 	f_entry->rec_id = record_id;
 
-#if 0
-	mac_printf("\tTTSE: \t%s\n",
-		   f_entry->ttse ? "ENABLED" : "DISABLED");
-	mac_printf("\tOSTC: \t%s\n",
-		   f_entry->ostc ? "ENABLED" : "DISABLED");
-	mac_printf("\tOSTPA: \t%s\n",
-		   f_entry->ostpa ? "ENABLED" : "DISABLED");
+
+	mac_dbg("\tTTSE: \t%s\n",
+		f_entry->ttse ? "ENABLED" : "DISABLED");
+	mac_dbg("\tOSTC: \t%s\n",
+		f_entry->ostc ? "ENABLED" : "DISABLED");
+	mac_dbg("\tOSTPA: \t%s\n",
+		f_entry->ostpa ? "ENABLED" : "DISABLED");
 
 	if (f_entry->cic == 0)
-		mac_printf("\tCIC: \t"
-			   "DISABLED\n");
+		mac_dbg("\tCIC: \t"
+			"DISABLED\n");
 
 	if (f_entry->cic == 1)
-		mac_printf("\tCIC: \tTime stamp IP Checksum update\n");
+		mac_dbg("\tCIC: \tTime stamp IP Checksum update\n");
 
 	if (f_entry->cic == 2)
-		mac_printf("\tCIC: \tTime stamp IP and "
-			   "Payload Checksum update\n");
+		mac_dbg("\tCIC: \tTime stamp IP and "
+			"Payload Checksum update\n");
 
 	if (f_entry->cic == 3)
-		mac_printf("\tCIC: \tTime stamp IP, Payload checksum and "
-			   "Pseudo header update\n");
+		mac_dbg("\tCIC: \tTime stamp IP, Payload checksum and "
+			"Pseudo header update\n");
 
-	mac_printf("\tTTSL: \t%d\n", f_entry->ttsl);
-	mac_printf("\tTTSH: \t%d\n", f_entry->ttsh);
-#endif
+	mac_dbg("\tTTSL: \t%d\n", f_entry->ttsl);
+	mac_dbg("\tTTSH: \t%d\n", f_entry->ttsh);
 }
 
-
 int gswss_set_txtstamp_access(void *pdev, u32 op_mode, u32 addr)
 {
 	struct mac_prv_data *pdata = GET_MAC_PDATA(pdev);
@@ -1329,7 +1319,6 @@ int gswss_set_txtstamp_access(void *pdev, u32 op_mode, u32 addr)
 	return ret;
 }
 
-
 int gswss_set_duplex_mode(void *pdev, u32 val)
 {
 	struct mac_prv_data *pdata = GET_MAC_PDATA(pdev);
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/mac_cfg.c b/drivers/net/ethernet/lantiq/switch-api/mac/mac_cfg.c
index 1073460144b1..22dc9ffef7de 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/mac_cfg.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/mac_cfg.c
@@ -531,7 +531,6 @@ int mac_set_lpien(void *pdev, u32 enable, u32 lpi_waitg, u32 lpi_waitm)
 	spin_lock_bh(&pdata->mac_lock);
 #endif
 
-
 #ifdef CONFIG_SILVER_WORKAROUND
 #else
 	mac_printf("Configuring LPIEN\n");
@@ -844,7 +843,6 @@ int mac_get_int_sts(void *pdev)
 
 	/* LMAC ISR Status */
 	if (lmac_pisr) {
-
 		if (MAC_GET_VAL(lmac_pisr, MAC_PISR, PHYERR))
 			val |= (1 << LMAC_PHYERR_EVNT);
 
@@ -885,13 +883,12 @@ int mac_get_int_sts(void *pdev)
 	return val;
 }
 
-
 int mac_init(void *pdev)
 {
 	struct mac_prv_data *pdata = GET_MAC_PDATA(pdev);
-
 #if defined(PC_UTILITY) || defined(CHIPTEST)
 	int i = 0;
+
 	xgmac_init_pdata(pdata, -1);
 #endif
 	xgmac_cli_init();
@@ -900,9 +897,8 @@ int mac_init(void *pdev)
 
 	/* Get all hw capability */
 	xgmac_get_hw_capability(pdev);
-	
-	/* Initialize MAC related features */
 
+	/* Initialize MAC related features */
 	/* Program MAC Address */
 	xgmac_set_mac_address(pdev, pdata->mac_addr);
 
@@ -1045,7 +1041,6 @@ int mac_exit(void *pdev)
 	return 0;
 }
 
-
 int mac_int_enable(void *pdev)
 {
 	struct mac_prv_data *pdata = GET_MAC_PDATA(pdev);
@@ -1059,7 +1054,6 @@ int mac_int_enable(void *pdev)
 	return 0;
 }
 
-
 int mac_int_disable(void *pdev)
 {
 	struct mac_prv_data *pdata = GET_MAC_PDATA(pdev);
@@ -1174,7 +1168,8 @@ int mac_irq_clr(void *pdev, u32 event)
 		break;
 
 	/* These 2 interrupts are cleared by a read RXESIS or TXESIS
-	   Which will be done while reading Interrupt Status */
+	 * Which will be done while reading Interrupt Status
+	 */
 	case XGMAC_TXERR_STS_EVNT:
 	case XGMAC_RXERR_STS_EVNT:
 		break;
@@ -1206,6 +1201,7 @@ int mac_irq_clr(void *pdev, u32 event)
 
 	return 0;
 }
+
 void mac_init_fn_ptrs(struct mac_ops *mac_op)
 {
 	mac_op->set_flow_ctl = mac_set_flowctrl;
@@ -1275,6 +1271,5 @@ void mac_init_fn_ptrs(struct mac_ops *mac_op)
 	mac_op->IRQ_Enable = mac_irq_event_enable;
 	mac_op->IRQ_Register = mac_irq_register;
 	mac_op->IRQ_UnRegister = mac_irq_unregister;
-
 }
 
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/mac_drv.c b/drivers/net/ethernet/lantiq/switch-api/mac/mac_drv.c
index 9ddaf5ef06e7..9004b3361518 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/mac_drv.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/mac_drv.c
@@ -16,7 +16,6 @@
 #include <lmac_api.h>
 #include <linux/clk.h>
 
-
 static void __iomem *base[2];
 
 static irqreturn_t mac_isr(int irq, void *dev_id)
@@ -31,7 +30,6 @@ static irqreturn_t mac_isr(int irq, void *dev_id)
 
 	/* Handle all the MAC Interrupts */
 	for (i = 0; i < max_mac; i++) {
-
 		task_sched = 0;
 
 		mac_int_sts = gswss_get_int_stat(adap_ops, XGMAC);
@@ -53,7 +51,6 @@ static irqreturn_t mac_isr(int irq, void *dev_id)
 
 		/* Check LMAC i Interrupts */
 		if (lmac_int_sts & (1 << (LMAC_ISR_MAC2_POS + i))) {
-
 			/* Disable the LMAC 2/3/4 Interrupt First */
 			lmac_set_int(mac_ops, 0);
 
@@ -83,7 +80,6 @@ static void mac_irq_tasklet(unsigned long data)
 		/* Check all events for this MAC */
 		for (j = 0; j < MAX_IRQ_EVNT; j++) {
 			if (evnt & (1 << j)) {
-
 				/* Clear the MAC Interrupt status */
 				ops->clr_int_sts(ops, j);
 
@@ -96,20 +92,16 @@ static void mac_irq_tasklet(unsigned long data)
 			}
 		}
 
-
 		/* Enable Corresponding XGMAC and LMAC Interrupts back */
 		ops->mac_int_en(ops);
 	}
-
-
-	return;
 }
 
 static int mac_irq_init(struct mac_prv_data *pdata)
 {
 	int ret = 0;
 
-	pdata->irq_hdl = kzalloc(sizeof(struct mac_irq_hdl) * (MAX_IRQ_EVNT - 1),
+	pdata->irq_hdl = kzalloc(sizeof(*pdata->irq_hdl) * (MAX_IRQ_EVNT - 1),
 				 GFP_KERNEL);
 
 	if (!pdata->irq_hdl) {
@@ -118,7 +110,6 @@ static int mac_irq_init(struct mac_prv_data *pdata)
 	}
 
 	if (pdata->mac_idx == 0) {
-
 		ret = request_irq(pdata->irq_num, mac_isr, 0, "gsw_mac", NULL);
 
 		if (ret) {
@@ -174,8 +165,9 @@ static int mac_probe(struct platform_device *pdev)
 	if (device_property_present(dev, "board_type")) {
 		pr_info("Board Type: HAPS\n");
 		pdata->haps = 1;
-	} else
+	} else {
 		pdata->haps = 0;
+	}
 
 	pdata->ker_ptp_clk = devm_clk_get(dev, "ptp_clk");
 
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_cli.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_cli.c
index 096a6c431a32..66a0007dfb80 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_cli.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_cli.c
@@ -37,8 +37,8 @@
  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  * DAMAGE.
- * ========================================================================= */
-
+ * =========================================================================
+ */
 
 #include <xgmac.h>
 #include <gswss_mac_api.h>
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_common.h b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_common.h
index 4eaea46696f7..5e206ad9ccfd 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_common.h
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_common.h
@@ -187,11 +187,7 @@ FILE *get_fp(void);
 		fprintf(fp, __VA_ARGS__); \
 	} while (0)
 
-#define mac_dbg(...)		\
-	do { FILE *fp;			\
-		fp = (FILE *) get_fp(); \
-		fprintf(fp, __VA_ARGS__); \
-	} while (0)
+#define mac_dbg mac_printf
 #else
 #define mac_printf printf
 #define mac_dbg printf
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_debug.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_debug.c
index e4efee5c515d..593fb9cbe6ad 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_debug.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_debug.c
@@ -37,8 +37,8 @@
  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  * DAMAGE.
- * ========================================================================= */
-
+ * =========================================================================
+ */
 
 #include <xgmac.h>
 #include <gswss_mac_api.h>
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mac_api.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mac_api.c
index 348f8ba8d67f..6a83bddad35b 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mac_api.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mac_api.c
@@ -37,8 +37,8 @@
  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  * DAMAGE.
- * ========================================================================= */
-
+ * =========================================================================
+ */
 
 #include <xgmac.h>
 #include <mac_cfg.h>
@@ -182,7 +182,7 @@ int xgmac_initiate_pause_tx(void *pdev)
 	reg_val = XGMAC_RGRD(pdata, MAC_TX_FCR);
 
 	if (MAC_GET_VAL(reg_val, MAC_TX_FCR, TFE) == 0) {
-		mac_printf("XGMAC %d: Pause pkt will be txd only if TFE bit is set\n",
+		mac_printf("XGMAC %d: Pause pkt txd only if TFE bit is set\n",
 			   pdata->mac_idx);
 		return 0;
 	}
@@ -617,7 +617,6 @@ int xgmac_set_rxcrc(void *pdev, u32 val)
 
 	return 0;
 }
-
 /* RE:
  * When this bit is set, the Rx state machine of the MAC is enabled for
  * receiving packets from the GMII or XGMII interface
@@ -1262,8 +1261,6 @@ u64 xgmac_get_systime(void *pdev)
 u64 xgmac_get_tx_tstamp(void *pdev)
 {
 	struct mac_prv_data *pdata = GET_MAC_PDATA(pdev);
-
-	u32 tx_snr;
 	u64 nsec;
 
 	nsec = XGMAC_RGRD(pdata, MAC_TXTSTAMP_SECR);
@@ -1278,7 +1275,6 @@ u64 xgmac_get_tx_tstamp(void *pdev)
 int xgmac_get_txtstamp_cnt(void *pdev)
 {
 	struct mac_prv_data *pdata = GET_MAC_PDATA(pdev);
-
 	u32 tx_sts;
 	u32 ttsns;
 
@@ -1553,7 +1549,6 @@ int xgmac_set_hwtstamp_settings(void *pdev,
 		mac_printf("802.AS1, Ethernet, any kind of event packet\n");
 		ptp_flgs.ptp_rx_en |=
 			(PTP_RX_V2 | PTP_RX_OVER_ETH | PTP_RX_SNAP);
-
 		break;
 
 	/* 802.AS1, Ethernet, Sync packet */
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_main.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_main.c
index 63d760d9ee40..81e450d05440 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_main.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_main.c
@@ -37,8 +37,8 @@
  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  * DAMAGE.
- * ========================================================================= */
-
+ * =========================================================================
+ */
 
 #include <xgmac.h>
 #include <gswss_mac_api.h>
@@ -242,7 +242,7 @@ struct _xgmac_cfg xgmac_cfg_table[] = {
 		"mac_addr        ",
 		cli_set_mac_address,
 		xgmac_get_mac_addr,
-		0, (u32 *) &pdata.mac_addr, 0, 0, 0,
+		0, (u32 *)&pdata.mac_addr, 0, 0, 0,
 		"<args 1: mac_addr>"
 	},
 	{
@@ -482,7 +482,7 @@ struct _xgmac_cfg xgmac_cfg_table[] = {
 		0,
 		0, &pdata.val, 0, 0, 0,
 		"<args 1: 1/0 Rx Crc check DISABLE/ENABLE>"
-	},	
+	},
 	{
 		"fifo             ",
 		0,
@@ -509,7 +509,7 @@ struct _xgmac_cfg xgmac_cfg_table[] = {
 		cli_set_extsrc,
 		0,
 		0, &pdata.val, 0, 0, 0,
-		"<REF: 0/1 - Internel/External>"
+		"<REF: 0/1 - Internal/External>"
 	},
 	/* OTHERS */
 	{
@@ -1033,7 +1033,6 @@ void xgmac_cli_init(void)
 	}
 }
 
-
 #if defined(PC_UTILITY) || defined(CHIPTEST)
 struct mac_ops *gsw_get_mac_ops(u32 devid, u32 mac_idx)
 {
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mdio.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mdio.c
index f777a64af52b..fbe3b7ab4cb3 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mdio.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mdio.c
@@ -37,8 +37,8 @@
  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  * DAMAGE.
- * ========================================================================= */
-
+ * =========================================================================
+ */
 
 #include <xgmac_mdio.h>
 #include <xgmac.h>
@@ -141,7 +141,7 @@ void print_mdio_rd_cnt(void *pdev,
 	u32 i, phy_reg_data;
 
 	clause = mdio_get_clause(pdata, pdata->mac_idx);
-	mac_printf("OP    \tCL    \tDEVADR\tPHYID \tPHYREG\tDATA  \n");
+	mac_printf("OP    \tCL    \tDEVADR\tPHYID \tPHYREG\tDATA\n");
 	mac_printf("============================================\n");
 
 	for (i = 0; i <= (phy_reg_end - phy_reg_st); i++) {
@@ -169,7 +169,7 @@ void xgmac_print_mdio(void *pdev,
 	int clause;
 
 	clause = mdio_get_clause(pdev, phy_id);
-	mac_printf("OP    \tCL    \tDEVADR\tPHYID \tPHYREG\tDATA  \n");
+	mac_printf("OP    \tCL    \tDEVADR\tPHYID \tPHYREG\tDATA\n");
 	mac_printf("============================================\n");
 
 	mac_printf("%6s\t", "RD");
@@ -423,19 +423,20 @@ int xgmac_mdio_get_int_sts(void *pdev)
 
 	return 0;
 }
+
 #ifdef __KERNEL__
 /* API to read MII PHY register
-* \details This API is expected to write MII registers with the value being
-* passed as the last argument which is done in write_phy_regs API
-* called by this function.
-*
-* \param[in] bus - points to the mii_bus structure
-* \param[in] phyadr - the phy address to write
-* \param[in] phyreg - the phy register offset to write
-* \param[in] phydata - the register value to write with
-*
-* \return 0 on success and -ve number on failure.
-*/
+ * \details This API is expected to write MII registers with the value being
+ * passed as the last argument which is done in write_phy_regs API
+ * called by this function.
+ *
+ * \param[in] bus - points to the mii_bus structure
+ * \param[in] phyadr - the phy address to write
+ * \param[in] phyreg - the phy register offset to write
+ * \param[in] phydata - the register value to write with
+ *
+ * \return 0 on success and -ve number on failure.
+ */
 static int xgmac_mdio_read(struct mii_bus *bus, int phyadr, int phyreg)
 {
 	struct mac_ops *pdev = bus->priv;
@@ -454,18 +455,17 @@ static int xgmac_mdio_read(struct mii_bus *bus, int phyadr, int phyreg)
 }
 
 /* API to write MII PHY register
-* \details This API is expected to write MII registers with the value being
-* passed as the last argument which is done in write_phy_regs API
-* called by this function.
-*
-* \param[in] bus - points to the mii_bus structure
-* \param[in] phyadr - the phy address to write
-* \param[in] phyreg - the phy register offset to write
-* \param[in] phydata - the register value to write with
-*
-* \return 0 on success and -ve number on failure.
-*/
-
+ * \details This API is expected to write MII registers with the value being
+ * passed as the last argument which is done in write_phy_regs API
+ * called by this function.
+ *
+ * \param[in] bus - points to the mii_bus structure
+ * \param[in] phyadr - the phy address to write
+ * \param[in] phyreg - the phy register offset to write
+ * \param[in] phydata - the register value to write with
+ *
+ * \return 0 on success and -ve number on failure.
+ */
 static int xgmac_mdio_write(struct mii_bus *bus, int phyadr, int phyreg,
 			    u16 phydata)
 {
@@ -482,7 +482,6 @@ static int xgmac_mdio_write(struct mii_bus *bus, int phyadr, int phyreg,
 	return ret;
 }
 
-
 /* API to reset PHY
  */
 static int xgmac_mdio_reset(struct mii_bus *bus)
@@ -531,20 +530,19 @@ int xgmac_mdio_register(void *pdev)
 
 	/* find the phy ID or phy address which is connected to our MAC */
 	for (phyadr = 0; phyadr < 32; phyadr++) {
-
 		phy_reg_read_status =
 			xgmac_mdio_single_rd(&pdata->ops, 0, phyadr, MII_BMSR,
 					     &mii_status);
 
 		if (phy_reg_read_status == 0) {
 			if (mii_status != 0x0000 && mii_status != 0xffff) {
-				pr_err("Phy detected at"\
+				pr_err("Phy detected at"
 				       " ID/ADDR %d\n", phyadr);
 				phy_detected = 1;
 				break;
 			}
 		} else if (phy_reg_read_status < 0) {
-			pr_err("Error reading the phy register"\
+			pr_err("Error reading the phy register"
 			       " MII_BMSR for phy ID/ADDR %d\n", phyadr);
 		}
 	}
@@ -562,7 +560,7 @@ int xgmac_mdio_register(void *pdev)
 
 	new_bus = mdiobus_alloc();
 
-	if (new_bus == NULL) {
+	if (!new_bus) {
 		mac_printf("XGMAC %d: Unable to allocate mdio bus\n",
 			   pdata->mac_idx);
 		return -ENOMEM;
@@ -588,7 +586,7 @@ int xgmac_mdio_register(void *pdev)
 
 	pdata->mii = new_bus;
 
-	mac_printf("XGMAC %d: MDIO register Successfull\n", pdata->mac_idx);
+	mac_printf("XGMAC %d: MDIO register Successful\n", pdata->mac_idx);
 
 	return ret;
 }
@@ -612,7 +610,7 @@ void xgmac_mdio_unregister(void *pdev)
 	mdiobus_free(pdata->mii);
 	pdata->mii = NULL;
 
-	mac_printf("XGMAC %d: mdio_unregister Successfull\n", pdata->mac_idx);
+	mac_printf("XGMAC %d: mdio_unregister Successful\n", pdata->mac_idx);
 }
 
 static void dump_phy_registers(void *pdev)
@@ -642,18 +640,18 @@ static void dump_phy_registers(void *pdev)
 
 	xgmac_mdio_single_rd(pdev, 0, pdata->phyadr, MII_ADVERTISE,
 			     &phydata);
-	mac_printf("Auto-nego Adv (Advertisement Control Reg)"\
+	mac_printf("Auto-nego Adv (Advertisement Control Reg)"
 		   " (%#x) = %#x\n", MII_ADVERTISE, phydata);
 
 	/* read Phy Control Reg */
 	xgmac_mdio_single_rd(pdev, 0, pdata->phyadr, MII_LPA,
 			     &phydata);
-	mac_printf("Auto-nego Lap (Link Partner Ability Reg)"\
+	mac_printf("Auto-nego Lap (Link Partner Ability Reg)"
 		   " (%#x)= %#x\n", MII_LPA, phydata);
 
 	xgmac_mdio_single_rd(pdev, 0, pdata->phyadr, MII_EXPANSION,
 			     &phydata);
-	mac_printf("Auto-nego Exp (Extension Reg)"\
+	mac_printf("Auto-nego Exp (Extension Reg)"
 		   "(%#x) = %#x\n", MII_EXPANSION, phydata);
 
 	xgmac_mdio_single_rd(pdev, 0, pdata->phyadr, MII_ESTATUS,
@@ -663,7 +661,7 @@ static void dump_phy_registers(void *pdev)
 
 	xgmac_mdio_single_rd(pdev, 0, pdata->phyadr, MII_CTRL1000,
 			     &phydata);
-	mac_printf("1000 Ctl Reg (1000BASE-T Control Reg)"\
+	mac_printf("1000 Ctl Reg (1000BASE-T Control Reg)"
 		   "(%#x) = %#x\n", MII_CTRL1000, phydata);
 
 	xgmac_mdio_single_rd(pdev, 0, pdata->phyadr, MII_STAT1000, &phydata);
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mtl_api.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mtl_api.c
index 4de14cd268ee..a95423bbbd5d 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mtl_api.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mtl_api.c
@@ -37,8 +37,8 @@
  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  * DAMAGE.
- * ========================================================================= */
-
+ * =========================================================================
+ */
 
 #include <xgmac.h>
 
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
index 31ea750e0e2b..1c020f234263 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
@@ -37,8 +37,8 @@
  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  * DAMAGE.
- * ========================================================================= */
-
+ * =========================================================================
+ */
 
 #include <xgmac.h>
 #include <xgmac_ptp.h>
@@ -61,7 +61,6 @@ static void xgmac_get_rx_tstamp(struct mac_prv_data *pdata,
 static int xgmac_ptp_register(void *pdev);
 static void xgmac_extts_isr_handler(struct mac_prv_data *pdata);
 
-
 void xgmac_config_timer_reg(void *pdev)
 {
 	struct mac_prv_data *pdata = GET_MAC_PDATA(pdev);
@@ -174,7 +173,6 @@ static int xgmac_get_time(struct ptp_clock_info *ptp,
 	u64 ns;
 	u32 reminder;
 
-
 	spin_lock_bh(&pdata->ptp_lock);
 
 	ns = hw_if->get_systime(hw_if);
@@ -200,7 +198,6 @@ static int xgmac_set_time(struct ptp_clock_info *ptp,
 		container_of(ptp, struct mac_prv_data, ptp_clk_info);
 	struct mac_ops *hw_if = &pdata->ops;
 
-
 	pr_debug("set_time: ts->tv_sec  = %lld, ts->tv_nsec = %lld\n",
 		 (u64)ts->tv_sec, (u64)ts->tv_nsec);
 
@@ -304,10 +301,9 @@ static void *parse_ptp_packet(struct sk_buff *skb,
 		break;
 	}
 
-	if (!ptp_loc)
+	if (!ptp_loc) {
 		pr_info("PTP header is not found in the packet, Please check\n");
-	else {
-
+	} else {
 		*msg_type = *((u8 *)(ptp_loc + PTP_OFFS_MSG_TYPE)) & 0xf;
 
 		if ((*msg_type == PTP_MSGTYPE_SYNC) ||
@@ -316,7 +312,7 @@ static void *parse_ptp_packet(struct sk_buff *skb,
 		    (*msg_type == PTP_MSGTYPE_PDELRESP)) {
 			ptp_loc = pos;
 		} else {
-			pr_info("Error: Unkown PTP Message \n");
+			pr_info("Error: Unknown PTP Message\n");
 			ptp_loc = NULL;
 		}
 	}
@@ -334,7 +330,6 @@ static void tx_hwtstamp(struct mac_prv_data *pdata,
 	skb_tstamp_tx(pdata->ptp_tx_skb, shhwtstamp);
 }
 
-
 /* =========================== TX TIMESTAMP =========================== */
 
 /*  ptpd sends down 1-Step/2-Step sync packet on the event socket (i.e, one
@@ -354,7 +349,6 @@ int xgmac_tx_hwts(void *pdev, struct sk_buff *skb)
 	/* check for hw tstamping */
 	if (pdata->hw_feat.ts_src && pdata->ptp_flgs.ptp_tx_en &&
 	    (skb_shinfo(skb)->tx_flags & SKBTX_HW_TSTAMP)) {
-
 		/* declare that device is doing timestamping */
 		skb_shinfo(skb)->tx_flags |= SKBTX_IN_PROGRESS;
 
@@ -394,7 +388,6 @@ int xgmac_tx_hwts(void *pdev, struct sk_buff *skb)
 	return rec_id;
 }
 
-
 /*  This API will get executed by workqueue only for 2 step timestamp
  *  Get the TX'ted Timestamp and pass it to upper app
  *  and free the skb
@@ -487,7 +480,7 @@ static void xgmac_get_rx_tstamp(struct mac_prv_data *pdata,
 	/* GSWIP HW attach upper 2 bytes with 0 for timestamp */
 	regval = (0xffffffff00000000 & tmpregval[0]) |
 		 (tmpregval[0] & 0xffff) << 16
-		 | (tmpregval[1] & 0xffff000000000000) >> 48 ;
+		 | (tmpregval[1] & 0xffff000000000000) >> 48;
 
 	/* The timestamp is recorded in little endian format, and is stored at
 	 * the end of the packet.
@@ -539,7 +532,6 @@ int xgmac_get_hwts(void *pdev, struct ifreq *ifr)
 			    sizeof(pdata->tstamp_config)) ? -EFAULT : 0;
 }
 
-
 int xgmac_ptp_isr_hdlr(void *pdev)
 {
 	struct mac_prv_data *pdata = GET_MAC_PDATA(pdev);
@@ -550,7 +542,7 @@ int xgmac_ptp_isr_hdlr(void *pdev)
 
 	/* Clear/Acknowledge interrupt by reading */
 	tstamp_sts = XGMAC_RGRD(pdata, MAC_TSTAMP_STSR);
-	
+
 	/* Timestamp stored interrupt */
 	if (tstamp_sts & 0x8000) {
 		if (IS_2STEP(pdata))
@@ -563,9 +555,9 @@ int xgmac_ptp_isr_hdlr(void *pdev)
 	}
 
 	/* Auxilairy Timestamp stored interrupt */
-	if(tstamp_sts & 0x4) {
+	if (tstamp_sts & 0x4) {
 		if (XGMAC_RGRD(pdata, MAC_AUX_CTRL) & 0x30)
-			xgmac_extts_isr_handler(pdata);		
+			xgmac_extts_isr_handler(pdata);
 	}
 
 	return ret;
@@ -587,7 +579,7 @@ static int xgmac_extts_enable(struct ptp_clock_info *ptp,
 			break;
 
 		case 1:
-			mac_dbg("ATSEN1 enabled\n");			
+			mac_dbg("ATSEN1 enabled\n");
 			pdata->exts1_enabled = on ? 1 : 0;
 			XGMAC_RGWR_BITS(pdata, MAC_AUX_CTRL, ATSEN1, 1);
 			break;
