From 6a6858f80d2a25241e7041a6f5f0bcac8cf1e856 Mon Sep 17 00:00:00 2001
From: Thomas Bartholomae <t.bartholomae@intel.com>
Date: Mon, 12 Aug 2019 09:59:49 +0200
Subject: [PATCH] PMCPESYS-143: add shutdown callback to reset regulator during
 shutdown

The external PMIC/DCDC device needs to be reseted to the start-up values
during shutdown if the SoC support DVFS. Otherwise CPU core voltage and CPU
frequency (which will be set to start-up value) doesn't match. This can lead to
boot-up problems.
---
 drivers/regulator/tps65273-regulator.c | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/drivers/regulator/tps65273-regulator.c b/drivers/regulator/tps65273-regulator.c
index 3efa380c3bf3..ae989b525caa 100755
--- a/drivers/regulator/tps65273-regulator.c
+++ b/drivers/regulator/tps65273-regulator.c
@@ -314,6 +314,26 @@ static int tps65273_remove(struct i2c_client *client)
 	return 0;
 }
 
+static void tps65273_shutdown(struct i2c_client *client)
+{
+	struct tps65273 *tps = i2c_get_clientdata(client);
+	int i, ret = 0;
+
+	dev_dbg(&client->dev, "function %s is called\n", __func__);
+
+	for (i = 0; i < TPS65273_NUM_REGULATOR; i++) {
+		struct regulator_dev *rdev = tps->rdev[i];
+		ret = regmap_update_bits(tps->regmap,
+					TPS65273_REG_VOUT1_SEL + i,
+					TPS65273_VOUT_SEL_GO_BIT, 0);
+		if (ret < 0) {
+			dev_err(&client->dev,
+				"shutdown regulator failed: (%d)\n", ret);
+			return ret;
+		}
+	}
+}
+
 static struct of_device_id tps65273_of_match[] = {
 	{ .compatible	 = "ti,tps65273" },
 	{},
@@ -335,6 +355,7 @@ static struct i2c_driver tps65273_i2c_driver = {
 		.of_match_table	= of_match_ptr(tps65273_of_match),
 	},
 	.probe		= tps65273_probe,
+	.shutdown	= tps65273_shutdown,
 	.remove		= tps65273_remove,
 	.id_table	= tps65273_id,
 };
