From a4cc3ce95b11f761e1ef2d2f7eb344f2fec59222 Mon Sep 17 00:00:00 2001
From: Peter Harliman Liem <peter.harliman.liem@intel.com>
Date: Mon, 9 Sep 2019 14:03:14 +0800
Subject: [PATCH] DRVLIB_SW-2844 - Remove NOTIMEOUT from spi driver

This may cause infinite loop and hang the system
(as also stated by klocwork warnings), so we remove it.
Timeout is increased to 1000ms to allow some tolerance.
---
 drivers/spi/spi-grx500.c | 10 +---------
 1 file changed, 1 insertion(+), 9 deletions(-)

diff --git a/drivers/spi/spi-grx500.c b/drivers/spi/spi-grx500.c
index f7a060c5e1a4..cd65e3809957 100644
--- a/drivers/spi/spi-grx500.c
+++ b/drivers/spi/spi-grx500.c
@@ -26,8 +26,6 @@
 #include <linux/spi/spi_bitbang.h>
 #include <linux/of_irq.h>
 
-#define NO_TIMEOUT
-
 #define LTQ_SPI_CLC		0x00	/* Clock control */
 #define LTQ_SPI_PISEL		0x04	/* Port input select */
 #define LTQ_SPI_ID		0x08	/* Identification */
@@ -274,9 +272,7 @@ static void ltq_spi_reset_fifos(struct ltq_spi *hw)
 static inline int ltq_spi_wait_ready(struct ltq_spi *hw)
 {
 	u32 stat;
-	#ifndef NO_TIMEOUT
-	unsigned long timeout = jiffies + msecs_to_jiffies(200);
-	#endif /* NO_TIMEOUT */
+	unsigned long timeout = jiffies + msecs_to_jiffies(1000);
 
 	do {
 		stat = ltq_spi_reg_read(hw, LTQ_SPI_STAT);
@@ -284,11 +280,7 @@ static inline int ltq_spi_wait_ready(struct ltq_spi *hw)
 			return 0;
 
 		cond_resched();
-	#ifdef NO_TIMEOUT
-	} while (1);
-	#else /* NO_TIMEOUT */
 	} while (!time_after_eq(jiffies, timeout));
-	#endif /* NO_TIMEOUT */
 
 	dev_err(hw->dev, "SPI wait ready timed out stat: %x\n", stat);
 
