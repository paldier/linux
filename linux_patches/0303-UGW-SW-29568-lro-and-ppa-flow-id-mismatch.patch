From 2364ba6ec54c4aff2c406cf3bcbad557621ae31e Mon Sep 17 00:00:00 2001
From: "Vishnu Swaroop Kumar Sarma, Duddu" <duddu.swaroop@intel.com>
Date: Wed, 22 Aug 2018 18:40:15 +0530
Subject: [PATCH] UGW_SW-29568 lro and ppa flow id mismatch

---
 drivers/net/ethernet/lantiq/ltq_toe_drv.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/ltq_toe_drv.c b/drivers/net/ethernet/lantiq/ltq_toe_drv.c
index bf6111d8c07b..19fd0d5c6842 100644
--- a/drivers/net/ethernet/lantiq/ltq_toe_drv.c
+++ b/drivers/net/ethernet/lantiq/ltq_toe_drv.c
@@ -123,7 +123,7 @@ static struct tasklet_struct lro_ovflow_tasklet;
 
 static void configure_lro(void);
 int lro_stop_flow (int session_id, int timeout, int flags);
-int lro_start_flow (int session_id, int timeout, int flags, struct cpumask cpumask);
+int lro_start_flow (int *session_id, int timeout, int flags, struct cpumask cpumask);
 static void lro_process_output_context(int port, int oc_flag_no);
 
 spinlock_t tso_tx_lock;	/*!< spin lock */
@@ -796,7 +796,7 @@ static struct ltq_lro_port *ltq_allocate_lro_port (void)
 	return NULL;
 }
 
-int lro_start_flow (int session_id, int timeout, int flags, struct cpumask cpumask)
+int lro_start_flow (int *session_id, int timeout, int flags, struct cpumask cpumask)
 {
 	struct ltq_lro_port *pport;
 	u32 port;
@@ -813,15 +813,18 @@ int lro_start_flow (int session_id, int timeout, int flags, struct cpumask cpuma
 
 	port = pport->port_num;
 
+	/*Mark the session id as port number for uniqueness*/
+	*session_id = port;
+
 	if((ltq_toe_r32(LRO_FID(port)) & LRO_FID_0_OWNER_MASK) == 0) {
 		pr_debug("FID ownership still with the HW !\n");
 		pport->in_use = 0;
 		return -EBUSY;
 	}
 
-	pport->session_id = session_id & LRO_FID_0_LRO_FID_MASK;
+	pport->session_id = *session_id & LRO_FID_0_LRO_FID_MASK;
 
-	/*pr_info("%s called with session_id = %x and port is: %d \n", __func__, session_id & LRO_FID_0_LRO_FID_MASK, port);*/
+	/*pr_info("%s called with session_id = %x and port is: %d \n", __func__,*session_id & LRO_FID_0_LRO_FID_MASK, port);*/
 
 	spin_lock_irqsave(&tso_register_lock, tso_rl_flags);
 	ltq_toe_w32(timeout, LRO_TO_REG(port));
@@ -837,7 +840,7 @@ int lro_start_flow (int session_id, int timeout, int flags, struct cpumask cpuma
 	//ltq_toe_w32(0xe666, LRO_TO_REG(port)); /* 200 us */
 
 	/* Set the Flow ID */
-	ltq_toe_w32((session_id & LRO_FID_0_LRO_FID_MASK) << LRO_FID_0_LRO_FID_POS, LRO_FID(port));
+	ltq_toe_w32((*session_id & LRO_FID_0_LRO_FID_MASK) << LRO_FID_0_LRO_FID_POS, LRO_FID(port));
 	spin_unlock_irqrestore(&tso_register_lock, tso_rl_flags);
 
 	wmb ();
