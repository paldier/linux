From 51815198773376a0fef5f19196f0ab4e5bf99992 Mon Sep 17 00:00:00 2001
From: Hua Ma <hua.ma@linux.intel.com>
Date: Thu, 21 Jun 2018 17:38:20 +0800
Subject: [PATCH] Add support for cpu frequency common changes

---
 .../devicetree/bindings/cpufreq/cpufreq-xrx500.txt |  72 +++++++++++++
 drivers/cpufreq/Kconfig                            |   9 ++
 drivers/cpufreq/Makefile                           |   1 +
 drivers/cpufreq/xrx500-cpufreq.c                   | 116 +++++++++++++++++++++
 4 files changed, 198 insertions(+)

diff --git a/Documentation/devicetree/bindings/cpufreq/cpufreq-xrx500.txt b/Documentation/devicetree/bindings/cpufreq/cpufreq-xrx500.txt
new file mode 100644
index 000000000000..5dbf837fd3cc
--- /dev/null
+++ b/Documentation/devicetree/bindings/cpufreq/cpufreq-xrx500.txt
@@ -0,0 +1,72 @@
+Binding for Intel's XRX500 SoC CPUFreq driver
+==============================================
+
+XRX500 SoC CPUFreq driver reads CHIPID and supplies the OPP framework with
+'supported hardware' property. This is the only addition to standard OPP
+description.
+
+For more information about the expected DT format [See: ../opp/opp.txt].
+
+- opp-supported-hw:	use single version hierarchy. Supported versions:
+
+			SOC_HW_ID_GRX5838	0x1
+			SOC_HW_ID_GRX5828	0x2
+			SOC_HW_ID_GRX5628	0x4
+			SOC_HW_ID_GRX5821	0x8
+			SOC_HW_ID_GRX5831	0x10
+			SOC_HW_ID_GRX58312	0x20
+			SOC_HW_ID_GRX3506	0x40
+			SOC_HW_ID_GRX3508	0x80
+			SOC_HW_ID_IRX200	0x100
+
+Example
+-------
+
+cpus {
+	cpu@0 {
+		operating-points-v2	= <&cpu_opp_table>;
+	};
+};
+
+cpu_opp_table: opp_table {
+	compatible = "operating-points-v2";
+	opp-shared;
+
+	opp@1000000000 {
+		opp-hz = /bits/ 64 <1000000000>;
+		opp-supported-hw = <0x00000010>;
+		opp-microvolt-slow_default = <1100000>;
+		opp-microvolt-not_defined = <1100000>;
+		opp-microvolt-slow0 = <1100000>;
+		opp-microvolt-slow1 = <1100000>;
+		opp-microvolt-slow2 = <1100000>;
+		opp-microvolt-slow3 = <1150000>;
+		opp-microvolt-typ0  = <1050000>;
+		opp-microvolt-typ1  = <1100000>;
+		opp-microvolt-typ2  = <1050000>;
+		opp-microvolt-typ3  = <1050000>;
+		opp-microvolt-fast0 = <1000000>;
+		opp-microvolt-fast1 = <1050000>;
+		opp-microvolt-fast2 = <1150000>;
+		opp-microvolt-fast3 = <1150000>;
+		};
+
+	opp@800000000 {
+		opp-hz = /bits/ 64 <800000000>;
+		opp-supported-hw = <0xffffffff>;
+		opp-microvolt-slow_default = <1100000>;
+		opp-microvolt-not_defined = <1100000>;
+		opp-microvolt-slow0 = <1100000>;
+		opp-microvolt-slow1 = <1100000>;
+		opp-microvolt-slow2 = <1100000>;
+		opp-microvolt-slow3 = <1150000>;
+		opp-microvolt-typ0  = <1050000>;
+		opp-microvolt-typ1  = <1100000>;
+		opp-microvolt-typ2  = <1050000>;
+		opp-microvolt-typ3  = <1050000>;
+		opp-microvolt-fast0 = <1000000>;
+		opp-microvolt-fast1 = <1050000>;
+		opp-microvolt-fast2 = <1150000>;
+		opp-microvolt-fast3 = <1150000>;
+	};
+};
diff --git a/drivers/cpufreq/Kconfig b/drivers/cpufreq/Kconfig
index cac26fb22891..a8481c8dc16e 100644
--- a/drivers/cpufreq/Kconfig
+++ b/drivers/cpufreq/Kconfig
@@ -294,6 +294,15 @@ config LOONGSON1_CPUFREQ
 	  For details, take a look at <file:Documentation/cpu-freq/>.
 
 	  If in doubt, say N.
+
+config XRX500_CPUFREQ
+	tristate "XRX500 CPUFreq Driver"
+	depends on LANTIQ && CPUFREQ_DT && REGULATOR
+	help
+	  This adds the CPUFreq driver for XRX500 Family SoC
+
+	  If in doubt, say N.
+
 endif
 
 if SPARC64
diff --git a/drivers/cpufreq/Makefile b/drivers/cpufreq/Makefile
index 0a9b6a093646..f21271191729 100644
--- a/drivers/cpufreq/Makefile
+++ b/drivers/cpufreq/Makefile
@@ -103,6 +103,7 @@ obj-$(CONFIG_ETRAXFS)			+= cris-etraxfs-cpufreq.o
 obj-$(CONFIG_IA64_ACPI_CPUFREQ)		+= ia64-acpi-cpufreq.o
 obj-$(CONFIG_LOONGSON2_CPUFREQ)		+= loongson2_cpufreq.o
 obj-$(CONFIG_LOONGSON1_CPUFREQ)		+= loongson1-cpufreq.o
+obj-$(CONFIG_XRX500_CPUFREQ)		+= xrx500-cpufreq.o
 obj-$(CONFIG_SH_CPU_FREQ)		+= sh-cpufreq.o
 obj-$(CONFIG_SPARC_US2E_CPUFREQ)	+= sparc-us2e-cpufreq.o
 obj-$(CONFIG_SPARC_US3_CPUFREQ)		+= sparc-us3-cpufreq.o
diff --git a/drivers/cpufreq/xrx500-cpufreq.c b/drivers/cpufreq/xrx500-cpufreq.c
new file mode 100644
index 000000000000..35d0f80f330b
--- /dev/null
+++ b/drivers/cpufreq/xrx500-cpufreq.c
@@ -0,0 +1,116 @@
+/*
+ * Copyright (c) 2018, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ */
+
+#define pr_fmt(fmt)	KBUILD_MODNAME ": " fmt
+
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/cpu.h>
+#include <linux/err.h>
+#include <linux/platform_device.h>
+#include <linux/pm_opp.h>
+#include <lantiq_soc.h>
+
+#define VERSIONS_COUNT 1
+
+/* Supported XRX500 family SoC HW versions */
+#define SOC_HW_ID_GRX5838	0x1
+#define SOC_HW_ID_GRX5828	0x2
+#define SOC_HW_ID_GRX5628	0x4
+#define SOC_HW_ID_GRX5821	0x8
+#define SOC_HW_ID_GRX5831	0x10
+#define SOC_HW_ID_GRX58312	0x20
+#define SOC_HW_ID_GRX3506	0x40
+#define SOC_HW_ID_GRX3508	0x80
+#define SOC_HW_ID_IRX200	0x100
+
+static unsigned int xrx500_pnum2version(struct device *dev, unsigned int id)
+{
+	switch (id) {
+	case SOC_ID_GRX5838:
+		return SOC_HW_ID_GRX5838;
+	case SOC_ID_GRX5828:
+		return SOC_HW_ID_GRX5828;
+	case SOC_ID_GRX5628:
+		return SOC_HW_ID_GRX5628;
+	case SOC_ID_GRX5821:
+		return SOC_HW_ID_GRX5821;
+	case SOC_ID_GRX5831:
+		return SOC_HW_ID_GRX5831;
+	case SOC_ID_GRX58312:
+		return SOC_HW_ID_GRX58312;
+	case SOC_ID_GRX3506:
+		return SOC_HW_ID_GRX3506;
+	case SOC_ID_GRX3508:
+		return SOC_HW_ID_GRX3508;
+	case SOC_ID_IRX200:
+		return SOC_HW_ID_IRX200;
+	default:
+		return -EINVAL;
+	}
+}
+
+
+int xrx500_opp_set_supported_hw(struct device *cpu_dev)
+{
+	unsigned int version, id;
+	int ret;
+
+	id = ltq_get_cpu_id();
+
+	version = xrx500_pnum2version(cpu_dev, id);
+	if (version < 0) {
+		dev_err(cpu_dev, "unknown xrx500 chip id (0x%x)\n", id);
+		return ret;
+	}
+
+	ret = dev_pm_opp_set_supported_hw(cpu_dev, &version, VERSIONS_COUNT);
+	if (ret) {
+		dev_err(cpu_dev, "Failed to set supported hardware\n");
+		return ret;
+	}
+
+	return ret;
+}
+
+static int xrx500_cpufreq_driver_init(void)
+{
+	struct platform_device_info devinfo = { .name = "cpufreq-dt", };
+	struct device *cpu_dev;
+	int ret;
+
+	if ((!of_machine_is_compatible("lantiq,xrx500")))
+		return -ENODEV;
+
+	cpu_dev = get_cpu_device(0);
+	if (!cpu_dev) {
+		pr_err("failed to get cpu device\n");
+		return -ENODEV;
+	}
+
+	ret = xrx500_opp_set_supported_hw(cpu_dev);
+	if (ret)
+		return ret;
+
+	/* Instantiate cpufreq-dt */
+	platform_device_register_full(&devinfo);
+
+	return ret;
+
+}
+module_init(xrx500_cpufreq_driver_init);
+
+MODULE_DESCRIPTION("XRX500 Family SoC CPUFreq driver");
+MODULE_AUTHOR("Waldemar Rymarkiewicz <waldemarx.rymarkiewicz@intel.com>");
+MODULE_LICENSE("GPL v2");
