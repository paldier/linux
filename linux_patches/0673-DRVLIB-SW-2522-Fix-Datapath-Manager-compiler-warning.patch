From fdc2d46fb6d0428e883f6b87374e1da978747086 Mon Sep 17 00:00:00 2001
From: Gu Chao <gux.chao@intel.com>
Date: Fri, 5 Jul 2019 11:40:32 +0800
Subject: [PATCH] DRVLIB_SW-2522: Fix Datapath Manager compiler warnings

---
 drivers/net/datapath/dpm/gswip31/datapath_gswip.c |  1 -
 drivers/net/datapath/dpm/gswip31/datapath_ppv4.c  | 31 -----------------------
 drivers/net/datapath/dpm/gswip31/datapath_ppv4.h  |  3 ---
 drivers/net/datapath/dpm/gswip31/datapath_rx.c    | 13 +++++-----
 drivers/net/datapath/dpm/gswip32/datapath_ppv4.c  | 31 -----------------------
 drivers/net/datapath/dpm/gswip32/datapath_ppv4.h  |  3 ---
 6 files changed, 6 insertions(+), 76 deletions(-)

diff --git a/drivers/net/datapath/dpm/gswip31/datapath_gswip.c b/drivers/net/datapath/dpm/gswip31/datapath_gswip.c
index 6821c0f51fe2..0e480db318bf 100644
--- a/drivers/net/datapath/dpm/gswip31/datapath_gswip.c
+++ b/drivers/net/datapath/dpm/gswip31/datapath_gswip.c
@@ -169,7 +169,6 @@ int dp_pmac_set_31(int inst, u32 port, dp_pmac_cfg_t *pmac_cfg)
 	s32 ret;
 	u32 pmacid;
 	struct core_ops *gswr_r;
-	GSW_PMAC_Glbl_Cfg_t pmac_glb;
 
 	if (!pmac_cfg || !port) {
 		PR_ERR("dp_pmac_set:wrong parameter(pmac_cfg/port NULL)\n");
diff --git a/drivers/net/datapath/dpm/gswip31/datapath_ppv4.c b/drivers/net/datapath/dpm/gswip31/datapath_ppv4.c
index 546adbfbfbdf..8d6dd8480023 100644
--- a/drivers/net/datapath/dpm/gswip31/datapath_ppv4.c
+++ b/drivers/net/datapath/dpm/gswip31/datapath_ppv4.c
@@ -893,34 +893,3 @@ int ppv4_port_free_31(int inst, int base, int deq_port_num)
 
 	return DP_SUCCESS;
 }
-
-/**
- * ppv4_alloc_ring_31 - Allocate ring buffer for port
- * @size:	size of the descriptor.
- * @phy:	Phy addr of ring.
- * @virt:	Virt addr of the ring.
- *
- * Allocate the ring buffer of @size(*DP_TXIN_RING_SIZE_DEF) requested by
- * caller.
- **/
-int ppv4_alloc_ring_31(int size, void **phy, void **virt)
-{
-	*virt = kmalloc(DP_TXIN_RING_SIZE_DEF * size, GFP_KERNEL);
-	if (!*virt)
-		return DP_FAILURE;
-
-	*phy = virt_to_phys(*virt);
-
-	return DP_SUCCESS;
-}
-
-/**
- * ppv4_ring_free_31 - Free ring buffer.
- * @ptr:	virt addr of the ring.
- *
- * Free the ring buffer allocated by ppv4_alloc_ring_31().
- **/
-void ppv4_ring_free_31(void *ptr)
-{
-	kfree(ptr);
-}
diff --git a/drivers/net/datapath/dpm/gswip31/datapath_ppv4.h b/drivers/net/datapath/dpm/gswip31/datapath_ppv4.h
index 7a02abef6d43..618fa2d366c1 100644
--- a/drivers/net/datapath/dpm/gswip31/datapath_ppv4.h
+++ b/drivers/net/datapath/dpm/gswip31/datapath_ppv4.h
@@ -205,7 +205,4 @@ extern struct pp_queue_stat qos_queue_stat[MAX_QUEUE];
 int init_ppv4_qos(int inst, int flag);
 int ppv4_alloc_port_31(int inst, int deq_port_num);
 int ppv4_port_free_31(int inst, int base, int deq_port_num);
-int ppv4_alloc_ring_31(int size, void **phy, void **virt);
-void ppv4_ring_free_31(void *ptr);
 #endif /* DATAPATH_PPV4_H */
-
diff --git a/drivers/net/datapath/dpm/gswip31/datapath_rx.c b/drivers/net/datapath/dpm/gswip31/datapath_rx.c
index a46e0334001b..3285f7fee5d8 100644
--- a/drivers/net/datapath/dpm/gswip31/datapath_rx.c
+++ b/drivers/net/datapath/dpm/gswip31/datapath_rx.c
@@ -88,7 +88,7 @@ static int dp_handle_lct(struct pmac_port_info *dp_port,
 	struct sk_buff *lct_skb;
 	struct dp_subif_info *sif;
 	struct dev_mib *mib;
-	int vap, ret;
+	int vap;
 
 	vap = dp_port->lct_idx;
 	sif = get_dp_port_subif(dp_port, vap);
@@ -108,16 +108,15 @@ static int dp_handle_lct(struct pmac_port_info *dp_port,
 		}
 		lct_skb->dev = sif->netif;
 		UP_STATS(mib->rx_fn_rxif_pkt);
-		DP_DEBUG(DP_DBG_FLAG_PAE, "pkt sent lct(%s) ret(%d)\n",
-			 lct_skb->dev->name ? lct_skb->dev->name : "NULL",
-			 ret);
+		DP_DEBUG(DP_DBG_FLAG_PAE, "pkt sent lct(%s)\n",
+			 lct_skb->dev->name ? lct_skb->dev->name : "NULL");
 		rx_fn(lct_skb->dev, NULL, lct_skb, lct_skb->len);
 		return 1;
 	} else if (memcmp(skb->data + PMAC_SIZE, skb->dev->dev_addr, 6) == 0) {
 		/* unicast */
 		DP_DEBUG(DP_DBG_FLAG_PAE, "LCT unicast\n");
-		DP_DEBUG(DP_DBG_FLAG_PAE, "unicast pkt sent lct(%s) ret(%d)\n",
-			 skb->dev->name ? skb->dev->name : "NULL", ret);
+		DP_DEBUG(DP_DBG_FLAG_PAE, "unicast pkt sent lct(%s)\n",
+			 skb->dev->name ? skb->dev->name : "NULL");
 		if((STATS_GET(sif->rx_flag) <= 0)) {
 			UP_STATS(mib->rx_fn_dropped);
 			dev_kfree_skb_any(skb);
@@ -146,7 +145,7 @@ int32_t dp_rx_31(struct sk_buff *skb, u32 flags)
 	int vap; /*vap: 0-15 */
 	int paser_exist;
 	u32 port_id = ep; /*same with ep now, later set to sspid if ep is 0 */
-	struct net_device *dev;
+	struct net_device *dev = NULL;
 	dp_rx_fn_t rx_fn;
 	char decryp = 0;
 	u8 inst = 0;
diff --git a/drivers/net/datapath/dpm/gswip32/datapath_ppv4.c b/drivers/net/datapath/dpm/gswip32/datapath_ppv4.c
index aacda08ad2b0..456e886939fc 100644
--- a/drivers/net/datapath/dpm/gswip32/datapath_ppv4.c
+++ b/drivers/net/datapath/dpm/gswip32/datapath_ppv4.c
@@ -649,34 +649,3 @@ int ppv4_port_free_32(int inst, int base, int deq_port_num)
 
 	return DP_SUCCESS;
 }
-
-/**
- * ppv4_alloc_ring_32 - Allocate ring buffer for port
- * @size:	size of the descriptor.
- * @phy:	Phy addr of ring.
- * @virt:	Virt addr of the ring.
- *
- * Allocate the ring buffer of @size(*DP_TXIN_RING_SIZE_DEF) requested by
- * caller.
- **/
-int ppv4_alloc_ring_32(int size, void **phy, void **virt)
-{
-	*virt = kmalloc(DP_TXIN_RING_SIZE_DEF * size, GFP_KERNEL);
-	if (!*virt)
-		return DP_FAILURE;
-
-	*phy = virt_to_phys(*virt);
-
-	return DP_SUCCESS;
-}
-
-/**
- * ppv4_ring_free_32 - Free ring buffer.
- * @ptr:	virt addr of the ring.
- *
- * Free the ring buffer allocated by ppv4_alloc_ring_32().
- **/
-void ppv4_ring_free_32(void *ptr)
-{
-	kfree(ptr);
-}
diff --git a/drivers/net/datapath/dpm/gswip32/datapath_ppv4.h b/drivers/net/datapath/dpm/gswip32/datapath_ppv4.h
index ec07373ee960..153f92478d66 100644
--- a/drivers/net/datapath/dpm/gswip32/datapath_ppv4.h
+++ b/drivers/net/datapath/dpm/gswip32/datapath_ppv4.h
@@ -210,7 +210,4 @@ extern struct pp_queue_stat qos_queue_stat[MAX_QUEUE];
 int init_ppv4_qos_32(int inst, int flag);
 int ppv4_alloc_port_32(int inst, int deq_port_num);
 int ppv4_port_free_32(int inst, int base, int deq_port_num);
-int ppv4_alloc_ring_32(int size, void **phy, void **virt);
-void ppv4_ring_free_32(void *ptr);
 #endif /* DATAPATH_PPV4_H */
-
