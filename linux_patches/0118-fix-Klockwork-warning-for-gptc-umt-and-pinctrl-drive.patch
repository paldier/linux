From 24e6afa125d7fb51d6501cd32cfccd4f54559fbf Mon Sep 17 00:00:00 2001
From: zhu yixin <yixin.zhu@intel.com>
Date: Tue, 3 Jul 2018 13:12:48 +0800
Subject: [PATCH] fix Klockwork warning for gptc, umt and pinctrl driver.

---
 drivers/clocksource/intel-gptc-timer.c | 3 +--
 drivers/dma/ltq_umt_expand.c           | 2 +-
 drivers/pinctrl/pinctrl-equilibrium.c  | 9 ++++++++-
 3 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/drivers/clocksource/intel-gptc-timer.c b/drivers/clocksource/intel-gptc-timer.c
index 2a6c4e844aa0..7a67619310d5 100755
--- a/drivers/clocksource/intel-gptc-timer.c
+++ b/drivers/clocksource/intel-gptc-timer.c
@@ -611,6 +611,7 @@ static int gptc_of_parse_timer(struct gptc *gptc)
 			timer->dir = GPTC_COUNT_DOWN;
 			timer->cpuid = 0;
 			list_add_tail(&timer->ht_yield, &gptc_ht_yield_list);
+			break;
 		default:
 			break;
 		}
@@ -755,8 +756,6 @@ static int gptc_clocksource_init(void)
 			gptc_per_timer_init(timer);
 			ret = clocksource_register_hz(&gptc_clksrc.cs,
 						      timer->frequency);
-			if (ret < 0)
-				pr_warn("GPTC: Unable to register clocksource\n");
 		#ifndef CONFIG_X86
 			sched_clock_register(gptc_read_sched_clock,
 					     32, timer->frequency);
diff --git a/drivers/dma/ltq_umt_expand.c b/drivers/dma/ltq_umt_expand.c
index 030617ef9a5b..dbc72734b351 100644
--- a/drivers/dma/ltq_umt_expand.c
+++ b/drivers/dma/ltq_umt_expand.c
@@ -513,9 +513,9 @@ int ltq_umt_request(u32 ep_id, u32 cbm_pid,
 
 		spin_unlock_bh(&port->umt_port_lock);
 	} else {
-		kfree(dqport.deq_info);
 		mcpy_dbg(MCPY_ERR, "port no %d not valid !\n",
 			 dqport.deq_info->port_no);
+		kfree(dqport.deq_info);
 		goto param_err;
 	}
 
diff --git a/drivers/pinctrl/pinctrl-equilibrium.c b/drivers/pinctrl/pinctrl-equilibrium.c
index 699dff055d67..adf92f6a2909 100644
--- a/drivers/pinctrl/pinctrl-equilibrium.c
+++ b/drivers/pinctrl/pinctrl-equilibrium.c
@@ -641,6 +641,10 @@ static void eqbr_pin_dbg_show(struct pinctrl_dev *pctldev, struct seq_file *s,
 	int i, j;
 
 	bank = find_pinbank_via_pin(pctl, pin);
+	if (!bank) {
+		dev_err(pctl->dev, "Couldn't find pin bank for pin %u\n", pin);
+		return -ENODEV;
+	}
 	offset = pin - bank->pin_base;
 
 	seq_printf(s, "pin mux: %u\n", readl(bank->membase + (offset << 2)));
@@ -976,7 +980,10 @@ static void eqbr_pinconf_dbg_show(struct pinctrl_dev *pctldev,
 	pin = offset;
 	pctl = pinctrl_dev_get_drvdata(pctldev);
 	bank = find_pinbank_via_pin(pctl, pin);
-
+	if (!bank) {
+		dev_err(pctl->dev, "Couldn't find pin bank for pin %u\n", pin);
+		return -ENODEV;
+	}
 	mem = bank->membase;
 	offset = pin - bank->pin_base;
 
