From c19c307a918034a3e3ca7f37362a1cf2e5f4c086 Mon Sep 17 00:00:00 2001
From: anishkhx <anishx.khurana@intel.com>
Date: Wed, 4 Jul 2018 12:17:12 +0800
Subject: [PATCH] DRVLIB_SW-778 : dp changes as per review comments

---
 .../net/ethernet/lantiq/datapath/datapath_api.c    | 16 +++++++---------
 .../net/ethernet/lantiq/datapath/datapath_ioctl.c  | 22 +++++++++++-----------
 .../net/ethernet/lantiq/datapath/datapath_ioctl.h  |  7 +++++++
 3 files changed, 25 insertions(+), 20 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/datapath/datapath_api.c b/drivers/net/ethernet/lantiq/datapath/datapath_api.c
index 514dc48f5a95..7296b63a771c 100644
--- a/drivers/net/ethernet/lantiq/datapath/datapath_api.c
+++ b/drivers/net/ethernet/lantiq/datapath/datapath_api.c
@@ -2173,10 +2173,7 @@ static void set_chksum(struct pmac_tx_hdr *pmac, u32 tcp_type,
 	pmac->tcp_h_offset = tcp_h_offset >> 2;
 }
 
-static void set_ptp_recid(struct pmac_tx_hdr *pmac, int rec_id)
-{
-	pmac->record_id_msb = rec_id;
-}
+
 int32_t dp_xmit(struct net_device *rx_if, dp_subif_t *rx_subif,
 		struct sk_buff *skb, int32_t len, uint32_t flags)
 {
@@ -2314,18 +2311,19 @@ int32_t dp_xmit(struct net_device *rx_if, dp_subif_t *rx_subif,
 			(skb_shinfo(skb)->tx_flags & SKBTX_HW_TSTAMP))
 #endif
 		{	ops = dp_port_prop[inst].mac_ops[dp_info->port_id];
-			if(ops)
-				rec_id = ops->do_tx_hwts(ops, skb);
-
+			if(!ops) {
+				err_ret = DP_XMIT_PTP_ERR;
+				goto lbl_err_ret;
+			}
+			rec_id = ops->do_tx_hwts(ops, skb);
 			if(rec_id < 0) {
 				err_ret = DP_XMIT_PTP_ERR;
 				goto lbl_err_ret;
 			}
-
 			DP_CB(inst, get_dma_pmac_templ)(TEMPL_PTP, &pmac,
 							desc_0, desc_1,
 							dp_info2);
-			set_ptp_recid(&pmac, rec_id);
+			pmac.record_id_msb = rec_id;
 		}
 #endif
 	} else if (dp_info->alloc_flags & DP_F_FAST_DSL) { /*some with pmac*/
diff --git a/drivers/net/ethernet/lantiq/datapath/datapath_ioctl.c b/drivers/net/ethernet/lantiq/datapath/datapath_ioctl.c
index 6926b2678ccb..5e5b8f1d940b 100644
--- a/drivers/net/ethernet/lantiq/datapath/datapath_ioctl.c
+++ b/drivers/net/ethernet/lantiq/datapath/datapath_ioctl.c
@@ -7,23 +7,23 @@ static int dp_ndo_ptp_ioctl(struct net_device *dev,
 static int dp_ndo_ptp_ioctl(struct net_device *dev,
                  struct ifreq *ifr, int cmd)
 {
-	int err = DP_SUCCESS;
+	int err = 0;
 	struct mac_ops *ops;
 	int inst = 0;
 	
 	struct pmac_port_info *port = get_port_info_via_dp_name(dev);
 	if(!port)
-		return DP_FAILURE;
+		return -EFAULT;
 	
 	ops = dp_port_prop[inst].mac_ops[port->port_id];
 	if(!ops)
-		return DP_FAILURE;
+		return -EFAULT;
 	
 	switch(cmd) {
 		case SIOCSHWTSTAMP: {
 			port->f_ptp = ops->set_hwts(ops, ifr);
 			if (port->f_ptp < 0) {
-				err = DP_FAILURE;
+				err = -ERANGE;
 				break;
 			}
 			DP_DEBUG(DP_DBG_FLAG_DBG,
@@ -41,7 +41,7 @@ static int dp_ndo_ptp_ioctl(struct net_device *dev,
 }
 
 int dp_register_ptp_ioctl(struct dp_dev *dp_dev,
-			struct net_device *dp_port, int inst)
+			struct net_device *dev, int inst)
 {
 	struct dp_cap cap;
 
@@ -50,16 +50,16 @@ int dp_register_ptp_ioctl(struct dp_dev *dp_dev,
 	if (!cap.hw_ptp)
 		return DP_FAILURE;
 	if (!dp_dev->old_dev_ops)
-		dp_dev->old_dev_ops = dp_port->netdev_ops;
-	if (dp_port->netdev_ops)
-		dp_dev->new_dev_ops = *dp_port->netdev_ops;
+		dp_dev->old_dev_ops = dev->netdev_ops;
+	if (dev->netdev_ops)
+		dp_dev->new_dev_ops = *dev->netdev_ops;
 
 	dp_dev->new_dev_ops.ndo_do_ioctl = dp_ndo_ptp_ioctl,
-	dp_port->netdev_ops =
+	dev->netdev_ops =
 		(const struct net_device_ops *)&dp_dev->new_dev_ops;
 	DP_DEBUG(DP_DBG_FLAG_INST,
-		"dp_port_register_ptp_ioctl done:%s\n",
-		dp_port->name);
+		"dp_register_ptp_ioctl done:%s\n",
+		dev->name);
 	return DP_SUCCESS;
 }
 
diff --git a/drivers/net/ethernet/lantiq/datapath/datapath_ioctl.h b/drivers/net/ethernet/lantiq/datapath/datapath_ioctl.h
index 2a291057cd25..463d2c697113 100644
--- a/drivers/net/ethernet/lantiq/datapath/datapath_ioctl.h
+++ b/drivers/net/ethernet/lantiq/datapath/datapath_ioctl.h
@@ -1,3 +1,6 @@
+#ifndef DATAPATH_IOCTL_H
+#define DATAPATH_IOCTL_H
+
 #include <net/datapath_api.h>
 #include <net/datapath_api_skb.h>
 #include "datapath.h"
@@ -7,3 +10,7 @@ int dp_register_ptp_ioctl(struct dp_dev *dp_dev,
                   struct net_device *dp_port, int inst);
 int dp_deregister_ptp_ioctl(struct dp_dev *dp_dev,
                   struct net_device *dev, int inst);
+
+#endif
+/*DATAPATH_IOCTL_H*/
+
