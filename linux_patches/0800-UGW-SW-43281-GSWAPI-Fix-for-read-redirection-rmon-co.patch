From ecfc54af1116dcde2c77bc54fa5d5da946a4c94b Mon Sep 17 00:00:00 2001
From: agaraix <anath.bandux.garai@intel.com>
Date: Fri, 1 Nov 2019 15:26:04 +0530
Subject: [PATCH] UGW_SW-43281 : GSWAPI: Fix for read redirection rmon
 counters.

---
 .../net/ethernet/lantiq/switch-api/gsw_flow_core.c | 41 +++++++++++++---------
 include/net/switch_api/lantiq_gsw.h                |  7 ++++
 2 files changed, 32 insertions(+), 16 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
index 2716ea696b7b..657cdc9d3208 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
@@ -192,9 +192,6 @@ static gsw_capdesc_t capdes[] = {
 /*****************/
 /* Function Body */
 /*****************/
-#ifndef CONFIG_X86_INTEL_CE2700
-//static void 		*gswr_bm_addr = (void  *) (KSEG1 | 0x1a000114);;
-#endif
 #define GAP_MAX	50
 #define GAP_MAX1	1000
 #define MAX_READ 20
@@ -15153,7 +15150,7 @@ GSW_return_t GSW_RMON_Redirect_Get(void *cdev, GSW_RMON_Redirect_cnt_t *parm)
 		u8 index;
 		u8 i, j, m, rpt, loc, hc, crd[MAX_READ] = {0};
 		u32 rdcount[MAX_READ] = {0}, br;
-		u32 data, data0, data1;
+		u32 data, data0, data1, bm_ram_ctrl = 0;
 		u64  rxbytes_l = 0, rxbytes_h = 0;
 		u64 txbytes_l = 0, txbytes_h = 0;
 
@@ -15172,18 +15169,30 @@ GSW_return_t GSW_RMON_Redirect_Get(void *cdev, GSW_RMON_Redirect_cnt_t *parm)
 			loc = 0;
 
 			for (j = 0; j < MAX_READ; j++) {
-#ifndef CONFIG_X86_INTEL_CE2700
-				/*suresh*/
-//				ltq_w32(0x8018, gswr_bm_addr);
-//				ltq_w32(0x0018, gswr_bm_addr);
-				//			asm("SYNC");
-//				ltq_w32(0x8018, gswr_bm_addr);
-#endif
-
-				if (GSW_statusErr == CHECK_BUSY(BM_RAM_CTRL_BAS_OFFSET,
-								BM_RAM_CTRL_BAS_OFFSET, BM_RAM_CTRL_BAS_OFFSET, RETURN_ERROR_CODE))
-					continue; /*Error already printed. Try the next iteration*/
-
+				/* Set Redirection RMON table Adrees */
+				FILL_CTRL_REG(bm_ram_ctrl,
+					      BM_RAM_CTRL_ADDR_SHIFT,
+						  GSW_RMON_REDIRECTION);
+				/* Set RAM access busy */
+				FILL_CTRL_REG(bm_ram_ctrl,
+					      BM_RAM_CTRL_BAS_SHIFT, 1);
+				gsw_w32_raw(cdev, BM_RAM_CTRL_REG_OFFSET,
+					    bm_ram_ctrl);
+				/* Set initiate a RAM access */
+				FILL_CTRL_REG(bm_ram_ctrl,
+					      BM_RAM_CTRL_BAS_SHIFT, 0);
+				gsw_w32_raw(cdev, BM_RAM_CTRL_REG_OFFSET,
+					    bm_ram_ctrl);
+				/* Set RAM access busy */
+				FILL_CTRL_REG(bm_ram_ctrl,
+					      BM_RAM_CTRL_BAS_SHIFT, 1);
+				gsw_w32_raw(cdev, BM_RAM_CTRL_REG_OFFSET,
+					    bm_ram_ctrl);
+				/* Wait until RAM is ready to Read */
+				CHECK_BUSY(BM_RAM_CTRL_BAS_OFFSET,
+					   BM_RAM_CTRL_BAS_SHIFT,
+					   BM_RAM_CTRL_BAS_SIZE,
+					   RETURN_FROM_FUNCTION);
 				for (i = 0; i < 4; i++) {
 					gsw_r32(cdev, BM_RAM_VAL_0_VAL0_OFFSET,
 						BM_RAM_VAL_0_VAL0_SHIFT,
diff --git a/include/net/switch_api/lantiq_gsw.h b/include/net/switch_api/lantiq_gsw.h
index f24c0e118dad..8d0c85510613 100644
--- a/include/net/switch_api/lantiq_gsw.h
+++ b/include/net/switch_api/lantiq_gsw.h
@@ -2905,6 +2905,13 @@ typedef struct {
 	u32	nTxBytesCount;
 } GSW_RMON_Route_cnt_t;
 
+/** Defined as per RMON counter table structure
+ * Applicable only for GSWIP 3.0
+ */
+typedef enum {
+	GSW_RMON_REDIRECTION = 0X18,
+} GSW_RMON_Port_t;
+
 /*@}*/ /* GSW_IOCTL_RMON */
 
 /** \addtogroup GSW_IOCTL_PMAC */
