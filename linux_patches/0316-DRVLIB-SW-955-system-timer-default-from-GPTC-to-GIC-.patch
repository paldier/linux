From 51f2fbda22db50c962b8e2aa38f0795ba0dc98f8 Mon Sep 17 00:00:00 2001
From: wwidjaja <w.widjaja@intel.com>
Date: Tue, 2 Oct 2018 23:46:06 +0800
Subject: [PATCH] DRVLIB_SW-955 - system timer default from GPTC to GIC timer

  - CLKSCRC_MIPS_GIC to be selectable/enable from menuconfig
  - remove GPTC as default system timer
  - increase min delta for mips gic

  NOTE: with these changes, default system timer should be choosen
  from kernel config when SOC_GRX500. (GRX500 use INTEL_GPTC, PRX300 use CLKSRC_MIPS_GIC

  NOTE: reduce burden on fpi peripheral bus transaction
  avoid back to back write on fpi peripheral will hog the bus.
  due to design of fpi bridge write will consume 32 cycles delay. it get
  exponentially large delay if you queue back to back write.
---
 arch/mips/lantiq/Kconfig             | 1 -
 drivers/clocksource/Kconfig          | 2 +-
 drivers/clocksource/mips-gic-timer.c | 2 +-
 3 files changed, 2 insertions(+), 3 deletions(-)

diff --git a/arch/mips/lantiq/Kconfig b/arch/mips/lantiq/Kconfig
index aa24ce56c4fb..fb497aef146e 100755
--- a/arch/mips/lantiq/Kconfig
+++ b/arch/mips/lantiq/Kconfig
@@ -41,7 +41,6 @@ config SOC_GRX500
 	bool "GRX500"
 	select GENERIC_ISA_DMA
 	select MIPS_GIC
-	select INTEL_GPTC
 	select MIPS_CPU_SCACHE
 	select SYS_HAS_CPU_MIPS32_R3_5
 	select CPU_MIPSR2_IRQ_VI
diff --git a/drivers/clocksource/Kconfig b/drivers/clocksource/Kconfig
index 153a53efcf7d..12349afd22d7 100755
--- a/drivers/clocksource/Kconfig
+++ b/drivers/clocksource/Kconfig
@@ -486,7 +486,7 @@ config CLKSRC_VERSATILE
 	  platforms.
 
 config CLKSRC_MIPS_GIC
-	bool
+	bool "MIPS GIC clock source"
 	depends on MIPS_GIC
 	select CLKSRC_OF
 
diff --git a/drivers/clocksource/mips-gic-timer.c b/drivers/clocksource/mips-gic-timer.c
index 53249a254ad9..b1c15bfa4e1d 100755
--- a/drivers/clocksource/mips-gic-timer.c
+++ b/drivers/clocksource/mips-gic-timer.c
@@ -62,7 +62,7 @@ static void gic_clockevent_cpu_init(unsigned int cpu,
 	cd->cpumask		= cpumask_of(cpu);
 	cd->set_next_event	= gic_next_event;
 
-	clockevents_config_and_register(cd, gic_frequency, 0x300, 0x7fffffff);
+	clockevents_config_and_register(cd, gic_frequency, 0x3000, 0x7fffffff);
 
 	enable_percpu_irq(gic_timer_irq, IRQ_TYPE_NONE);
 }
