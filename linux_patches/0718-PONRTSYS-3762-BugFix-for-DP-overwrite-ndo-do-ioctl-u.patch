From 824a0b2ed1f5333012f44ce784dccf2082ae9356 Mon Sep 17 00:00:00 2001
From: thampan <joby.thampan@intel.com>
Date: Fri, 19 Jul 2019 14:47:57 +0800
Subject: [PATCH] PONRTSYS-3762: BugFix for DP overwrite ndo_do_ioctl
 unconditionally

  - DP managing only SIOCSHWTSTAMP and SIOCGHWTSTAMP in ndo_do_ioctl.
  - If any other IOCTL's for ndo_do_ioctl happens DP call the original ndo_do_ioctl pointer
---
 drivers/net/datapath/dpm/datapath_ioctl.c | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/drivers/net/datapath/dpm/datapath_ioctl.c b/drivers/net/datapath/dpm/datapath_ioctl.c
index 52b9bd71f4c5..f9f5494d09b6 100644
--- a/drivers/net/datapath/dpm/datapath_ioctl.c
+++ b/drivers/net/datapath/dpm/datapath_ioctl.c
@@ -72,6 +72,24 @@ static int dp_ndo_ptp_ioctl(struct net_device *dev,
 	struct mac_ops *ops;
 	int inst = 0;
 	struct pmac_port_info *port;
+	u32 idx = 0;
+	struct dp_dev *dp_dev = NULL;
+
+	idx = dp_dev_hash(dev, NULL);
+	dp_dev = dp_dev_lookup(&dp_dev_list[idx], dev, NULL, 0);
+	if (!dp_dev) {
+		PR_ERR("\n dp_dev NULL\n");
+		return -EFAULT;
+	}
+
+	/* DP handles only SIOCSHWTSTAMP and SIOCGHWTSTAMP */
+	if ((cmd != SIOCSHWTSTAMP) && (cmd != SIOCGHWTSTAMP)) {
+		if (dp_dev->old_dev_ops->ndo_do_ioctl)
+			err = dp_dev->old_dev_ops->ndo_do_ioctl(dev, ifr, cmd);
+		else
+			return -EFAULT;
+		return err;
+	}
 
 	port = get_port_info_via_dev(dev);
 	if (!port)
