From 786b7200db797e0fccbfc4f436742d4097ff54e0 Mon Sep 17 00:00:00 2001
From: thampan <joby.thampan@intel.com>
Date: Wed, 8 Aug 2018 23:39:00 +0800
Subject: [PATCH] Bug Fix for Rx timestamp 4 bytes getting stripped by HW

---
 drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c   | 12 +++++++-----
 drivers/net/ethernet/lantiq/switch-api/mac/mac_cfg.c   |  5 ++++-
 drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c |  9 ++++-----
 3 files changed, 15 insertions(+), 11 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c b/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c
index b3bb09e6a7ea..e9e03698af31 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c
@@ -441,6 +441,7 @@ static int pmac_eg_cfg(struct core_ops *ops, u8 pmacid, u8 dpu)
 					eg_cfg.bMpe2Flag	= ((j & 3) >> 1);
 					eg_cfg.bMpe1Flag	= (j & 1);
 					eg_cfg.nFlowIDMsb	= k;
+					eg_cfg.bFcsEna	= 1;
 
 					/* All other fields set to 0. */
 					ops->gsw_pmac_ops.Pmac_Eg_CfgSet(ops,
@@ -471,10 +472,10 @@ int pmac_get_eg_cfg(struct core_ops *ops, u8 pmacid, u8 dst_port)
 	printk("\nGSWIP PMAC EG CFG\n");
 
 	printk("\n\nDestination portId = %d\n\n", dst_port);
-	printk("%10s %10s %10s %10s %10s %10s %10s %10s %10s %10s %10s\n",
+	printk("%10s %10s %10s %10s %10s %10s %10s %10s %10s %10s %10s %10s\n",
 	       "PmacId", "RxDmaChId", "BslTrafCls", "BslSegDis",
 	       "PmacEna", "RedirEna", "DestPortId", "TrafCls", "Mpe1",
-	       "Mpe2", "FlowId");
+	       "Mpe2", "FlowId", "FcsEn");
 
 	for (k = 0; k <= 3; k++) {
 		for (i = 0; i <= 3; i++) {
@@ -494,7 +495,7 @@ int pmac_get_eg_cfg(struct core_ops *ops, u8 pmacid, u8 dst_port)
 
 				ops->gsw_pmac_ops.Pmac_Eg_CfgGet(ops,
 								 &eg_cfg);
-				printk("%10d %10d %10d %10d %10d %10d %10d %10d %10d %10d %10d",
+				printk("%10d %10d %10d %10d %10d %10d %10d %10d %10d %10d %10d %10d",
 				       eg_cfg.nPmacId,
 				       eg_cfg.nRxDmaChanId,
 				       eg_cfg.nBslTrafficClass,
@@ -505,7 +506,8 @@ int pmac_get_eg_cfg(struct core_ops *ops, u8 pmacid, u8 dst_port)
 				       eg_cfg.nTrafficClass,
 				       eg_cfg.bMpe1Flag,
 				       eg_cfg.bMpe2Flag,
-				       eg_cfg.nFlowIDMsb);
+				       eg_cfg.nFlowIDMsb,
+                                       eg_cfg.bFcsEna);
 				printk("\n");
 			}
 		}
@@ -525,7 +527,7 @@ static int pmac_glbl_cfg(struct core_ops *ops, u8 pmacid)
 	glbl_cfg.nPmacId = pmacid;
 	glbl_cfg.bJumboEna = 1;
 	glbl_cfg.nMaxJumboLen = 10000;
-	glbl_cfg.bTxFCSDis = 1;
+	glbl_cfg.bTxFCSDis = 0;
 	glbl_cfg.bRxFCSDis = 1;
 	glbl_cfg.eShortFrmChkType = GSW_PMAC_SHORT_LEN_ENA_UNTAG;
 	glbl_cfg.bLongFrmChkDis = 1;
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/mac_cfg.c b/drivers/net/ethernet/lantiq/switch-api/mac/mac_cfg.c
index 3271ac90a5cd..840a1b075b94 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/mac_cfg.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/mac_cfg.c
@@ -804,7 +804,10 @@ int mac_enable_ts(void *pdev)
 	/* Tell adaption layer to remove Special Tag in Tx Directon */
 	gswss_set_mac_txsptag_op(pdev, MODE3);
 
-	mac_int_enable(pdev);
+	/* Tell adaption layer to remove FCS in Rx Direction */
+	gswss_set_mac_rxfcs_op(pdev, MODE3);
+	
+        mac_int_enable(pdev);
 	xgmac_set_mac_int(pdev, XGMAC_TSTAMP_EVNT, 1);
 
 #ifdef __KERNEL__
diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
index 29b891a574a0..ff3ac69d0450 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
@@ -481,13 +481,11 @@ static void xgmac_get_rx_tstamp(struct mac_prv_data *pdata,
 		ts_hdr_len = 10;
 
 	/* copy the bits out of the skb, and then trim the skb length */
-	skb_copy_bits(skb, skb->len - ts_hdr_len, tmpregval, ts_hdr_len);
+	skb_copy_bits(skb, skb->len - 8, tmpregval, 8);
 	__pskb_trim(skb, skb->len - ts_hdr_len);
 
-	/* GSWIP HW attach upper 2 bytes with 0 for timestamp */
-	regval = (0xffffffff00000000 & tmpregval[0]) |
-		 (tmpregval[0] & 0xffff) << 16
-		 | (tmpregval[1] & 0xffff000000000000) >> 48;
+        regval = tmpregval[0];
+
 
 	/* The timestamp is recorded in little endian format, and is stored at
 	 * the end of the packet.
@@ -497,6 +495,7 @@ static void xgmac_get_rx_tstamp(struct mac_prv_data *pdata,
 	 */
 	ns = le64_to_cpu(regval);
 
+        printk("ns = %llx\n",ns);
 	shhwtstamp = skb_hwtstamps(skb);
 	memset(shhwtstamp, 0, sizeof(struct skb_shared_hwtstamps));
 	shhwtstamp->hwtstamp = ns_to_ktime(ns);
