From a79b3ca4f68c3ebb04120650eb36146f2f811013 Mon Sep 17 00:00:00 2001
From: Li Yin <yin1.li@intel.com>
Date: Thu, 9 May 2019 11:05:20 +0800
Subject: [PATCH] datapath: add generic TX error handling

---
 drivers/net/datapath/dpm/datapath_tx.c | 62 ++++++++++++++++++++++++++++++++++
 drivers/net/datapath/dpm/datapath_tx.h |  2 ++
 2 files changed, 64 insertions(+)

diff --git a/drivers/net/datapath/dpm/datapath_tx.c b/drivers/net/datapath/dpm/datapath_tx.c
index 50705294fb3c..101964df7a43 100644
--- a/drivers/net/datapath/dpm/datapath_tx.c
+++ b/drivers/net/datapath/dpm/datapath_tx.c
@@ -46,6 +46,68 @@ struct dp_tx_context {
 
 static struct dp_tx_context *dp_tx_ctx;
 
+int dp_tx_err(struct sk_buff *skb, struct dp_tx_common *cmn, int ret)
+{
+	switch (ret) {
+	case DP_XMIT_ERR_NOT_INIT:
+		PR_RATELIMITED("dp_xmit failed for dp no init yet\n");
+		break;
+
+	case DP_XMIT_ERR_IN_IRQ:
+		PR_RATELIMITED("dp_xmit not allowed in interrupt context\n");
+		break;
+
+	case DP_XMIT_ERR_NULL_SUBIF:
+		PR_RATELIMITED("dp_xmit failed for rx_subif null\n");
+		UP_STATS(get_dp_port_info(0, 0)->tx_err_drop);
+		break;
+
+	case DP_XMIT_ERR_PORT_TOO_BIG:
+		UP_STATS(get_dp_port_info(0, 0)->tx_err_drop);
+		PR_RATELIMITED("rx_subif->port_id >= max_ports");
+		break;
+
+	case DP_XMIT_ERR_NULL_SKB:
+		PR_RATELIMITED("skb NULL");
+		UP_STATS(get_dp_port_info(0, cmn->dpid)->tx_err_drop);
+		break;
+
+	case DP_XMIT_ERR_NULL_IF:
+		UP_STATS(cmn->mib->tx_pkt_dropped);
+		PR_RATELIMITED("rx_if NULL");
+		break;
+
+	case DP_XMIT_ERR_REALLOC_SKB:
+		PR_INFO_ONCE("dp_create_new_skb failed\n");
+		break;
+
+	case DP_XMIT_ERR_EP_ZERO:
+		PR_ERR("Why ep zero in dp_xmit for %s\n",
+		       skb->dev ? skb->dev->name : "NULL");
+		break;
+
+	case DP_XMIT_ERR_GSO_NOHEADROOM:
+		PR_ERR("No enough skb headerroom(GSO). Need tune SKB buffer\n");
+		break;
+
+	case DP_XMIT_ERR_CSM_NO_SUPPORT:
+		PR_RATELIMITED("dp_xmit not support checksum\n");
+		break;
+
+	case DP_XMIT_PTP_ERR:
+		break;
+
+	default:
+		UP_STATS(cmn->mib->tx_pkt_dropped);
+		PR_INFO_ONCE("Why come to here:%x\n",
+			     get_dp_port_info(0, cmn->dpid)->status);
+	}
+
+	if (skb)
+		dev_kfree_skb_any(skb);
+	return DP_FAILURE;
+}
+
 int dp_tx_update_list(void)
 {
 	struct dp_tx_context *ctx = dp_tx_ctx;
diff --git a/drivers/net/datapath/dpm/datapath_tx.h b/drivers/net/datapath/dpm/datapath_tx.h
index 83b93d57ef6a..eb423c869d48 100644
--- a/drivers/net/datapath/dpm/datapath_tx.h
+++ b/drivers/net/datapath/dpm/datapath_tx.h
@@ -15,4 +15,6 @@ int dp_tx_update_list(void);
 
 int dp_tx_start(struct sk_buff *skb, struct dp_tx_common *cmn);
 
+int dp_tx_err(struct sk_buff *skb, struct dp_tx_common *cmn, int ret);
+
 #endif /* end of include guard: DATAPATH_TX_H_7PAJCKO6 */
