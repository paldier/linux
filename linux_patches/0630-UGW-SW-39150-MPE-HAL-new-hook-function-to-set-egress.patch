From e28e7a54fba59e8174c9002eb500cf4c59f819b5 Mon Sep 17 00:00:00 2001
From: agaraix <anath.bandux.garai@intel.com>
Date: Wed, 22 May 2019 15:51:41 +0530
Subject: [PATCH] UGW_SW-39150 : MPE HAL new hook function to set egress port
 pmac length dynamically.

---
 drivers/net/ethernet/lantiq/ppa/ppa_drv_wrapper.c | 33 +++++++++++++++--------
 include/net/ppa/ltq_mpe_hal.h                     |  5 ++++
 2 files changed, 27 insertions(+), 11 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/ppa/ppa_drv_wrapper.c b/drivers/net/ethernet/lantiq/ppa/ppa_drv_wrapper.c
index cba1dec5bfba..579a0eebbac3 100644
--- a/drivers/net/ethernet/lantiq/ppa/ppa_drv_wrapper.c
+++ b/drivers/net/ethernet/lantiq/ppa/ppa_drv_wrapper.c
@@ -220,6 +220,10 @@ int ppa_drv_directpath_register(PPA_SUBIF *subif, PPA_NETIF *netif,
 int32_t (*tmu_hal_set_checksum_queue_map_hook_fn)(uint32_t pmac_port) = NULL;
 EXPORT_SYMBOL(tmu_hal_set_checksum_queue_map_hook_fn);
 
+int32_t (*mpe_hal_set_checksum_queue_map_hook_fn)(
+		uint32_t pmac_port, bool is_pmac_hdr_req) = NULL;
+EXPORT_SYMBOL(mpe_hal_set_checksum_queue_map_hook_fn);
+
 #if IS_ENABLED(CONFIG_PPA_TMU_MIB_SUPPORT)
 int32_t (*tmu_hal_get_csum_ol_mib_hook_fn)(
 		struct tmu_hal_qos_stats *csum_mib,
@@ -249,7 +253,6 @@ int32_t ppa_drv_get_csum_ol_mib(
 	if (!tmu_hal_get_csum_ol_mib_hook_fn)
 		return PPA_EINVAL;
 	return tmu_hal_get_csum_ol_mib_hook_fn (csum_mib, flag);
-
 }
 EXPORT_SYMBOL(ppa_drv_get_csum_ol_mib);
 
@@ -259,7 +262,6 @@ int32_t ppa_drv_clear_csum_ol_mib(
 	if (!tmu_hal_clear_csum_ol_mib_hook_fn)
 		return PPA_EINVAL;
 	return tmu_hal_clear_csum_ol_mib_hook_fn (flag);
-
 }
 EXPORT_SYMBOL(ppa_drv_clear_csum_ol_mib);
 
@@ -273,7 +275,6 @@ int32_t ppa_drv_get_tmu_qos_mib (
 	if (!tmu_hal_get_qos_mib_hook_fn)
 		return PPA_EINVAL;
 	return tmu_hal_get_qos_mib_hook_fn (netdev, subif_id, queueid, qos_mib, flag);
-
 }
 EXPORT_SYMBOL(ppa_drv_get_tmu_qos_mib);
 int32_t ppa_drv_reset_tmu_qos_mib (
@@ -291,24 +292,35 @@ EXPORT_SYMBOL(ppa_drv_reset_tmu_qos_mib);
 
 int32_t ppa_drv_tmu_set_checksum_queue_map(uint32_t pmac_port)
 {
-	if( !tmu_hal_set_checksum_queue_map_hook_fn ) return PPA_EINVAL;
+	if(!tmu_hal_set_checksum_queue_map_hook_fn)
+		return PPA_EINVAL;
 	return tmu_hal_set_checksum_queue_map_hook_fn (pmac_port);
-
 }
 EXPORT_SYMBOL(ppa_drv_tmu_set_checksum_queue_map);
+
+int32_t ppa_drv_mpe_set_checksum_queue_map(uint32_t pmac_port, bool is_pmac_hdr_req)
+{
+	if(!mpe_hal_set_checksum_queue_map_hook_fn)
+		return PPA_EINVAL;
+	return mpe_hal_set_checksum_queue_map_hook_fn(pmac_port, is_pmac_hdr_req);
+}
+EXPORT_SYMBOL(ppa_drv_mpe_set_checksum_queue_map);
 #endif
 
 int ppa_drv_get_dslwan_qid_with_vcc(struct atm_vcc *vcc)
 {
-	if (!ppa_drv_get_dslwan_qid_with_vcc_hook) return 0;
-	else return ppa_drv_get_dslwan_qid_with_vcc_hook(vcc);
+	if (!ppa_drv_get_dslwan_qid_with_vcc_hook)
+		return 0;
+	else
+		return ppa_drv_get_dslwan_qid_with_vcc_hook(vcc);
 }
 
 int ppa_drv_get_netif_qid_with_pkt(PPA_SKBUF *skb, void *arg, int is_atm_vcc)
 {
-	if (!ppa_drv_get_netif_qid_with_pkt_hook) return 0;
-	else return ppa_drv_get_netif_qid_with_pkt_hook(skb, arg, is_atm_vcc);
-
+	if (!ppa_drv_get_netif_qid_with_pkt_hook)
+		return 0;
+	else
+		return ppa_drv_get_netif_qid_with_pkt_hook(skb, arg, is_atm_vcc);
 }
 
 int ppa_drv_ppe_clk_change(unsigned int arg, unsigned int flags)
@@ -330,7 +342,6 @@ uint32_t ppa_drv_dp_sb_addr_to_fpi_addr_convert(PPA_FPI_ADDR*a, uint32_t flag)
 	if (!ppa_drv_datapath_generic_hook)
 		return PPA_FAILURE;
 	return ppa_drv_datapath_generic_hook(PPA_GENERIC_DATAPATH_ADDR_TO_FPI_ADDR, (void *)a, flag);
-
 }
 
 int32_t ppa_hook_set_lan_seperate_flag(uint32_t flag)
diff --git a/include/net/ppa/ltq_mpe_hal.h b/include/net/ppa/ltq_mpe_hal.h
index d662bb4dc35f..7221a20309a6 100644
--- a/include/net/ppa/ltq_mpe_hal.h
+++ b/include/net/ppa/ltq_mpe_hal.h
@@ -62,4 +62,9 @@ extern int (*mpe_hal_feature_start_fn)(
 		uint32_t port_id,
 		uint32_t *featureCfgBase,
 		uint32_t flags);
+
+#if defined(CONFIG_SOC_GRX500) && CONFIG_SOC_GRX500
+extern int32_t (*mpe_hal_set_checksum_queue_map_hook_fn) (uint32_t pmac_port,
+		bool is_pmac_hdr_req);
+#endif
 #endif  /*  ___MPE_HAL_H__20081119_1144__*/
