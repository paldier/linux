From ce2d7bb1035eb00fbc59ebc5401a67da76598072 Mon Sep 17 00:00:00 2001
From: thampan <joby.thampan@intel.com>
Date: Tue, 20 Aug 2019 23:58:23 +0800
Subject: [PATCH] PONRTSYS-4972: Fix for Downstream packets sent back to OLT

---
 drivers/net/datapath/dpm/datapath_swdev.c             | 11 +++++++++++
 drivers/net/datapath/dpm/datapath_swdev.h             |  3 +++
 drivers/net/datapath/dpm/gswip31/datapath_switchdev.c |  0
 drivers/net/datapath/dpm/gswip32/datapath_switchdev.c |  0
 4 files changed, 14 insertions(+)

diff --git a/drivers/net/datapath/dpm/datapath_swdev.c b/drivers/net/datapath/dpm/datapath_swdev.c
index 8aaa33db8b55..195b3f1b5339 100644
--- a/drivers/net/datapath/dpm/datapath_swdev.c
+++ b/drivers/net/datapath/dpm/datapath_swdev.c
@@ -231,6 +231,7 @@ static int dp_swdev_add_bport_to_list(struct br_info *br_item,
 		}
 		bport_list->dev_reg_flag = br_item->flag;
 		bport_list->portid = bport;
+		bport_list->alloc_flag = br_item->alloc_flag;
 		DP_DEBUG(DP_DBG_FLAG_SWDEV, "bport:%d reg_flag:%d\n",
 			 bport_list->portid, bport_list->dev_reg_flag);
 		list_add(&bport_list->list, &br_item->bp_list);
@@ -381,6 +382,8 @@ static int dp_swdev_cfg_gswip(struct bridge_id_entry_item *br_item,
 			br_info->fid = br_item->fid;
 			br_info->inst = br_item->inst;
 			br_info->cpu_port = ENABLE;
+			br_info->alloc_flag = br_item->alloc_flag;
+
 			/* Logic dev flag added to verify if SWDEV registered
 			 * the logical i.e. VLAN device.Helpful during
 			 * br/bport delete
@@ -412,6 +415,8 @@ static int dp_swdev_cfg_gswip(struct bridge_id_entry_item *br_item,
 			return 0;
 		br_info->flag = 0;
 
+		br_info->alloc_flag = br_item->alloc_flag;
+
 		if (br_item->flags & LOGIC_DEV_REGISTER)
 			br_info->flag = LOGIC_DEV_REGISTER;
 		dp_swdev_add_bport_to_list(br_info, br_item->portid);
@@ -497,6 +502,12 @@ static int dp_swdev_add_if(struct net_device *dev,
 		/* current bridge member port*/
 		br_item->portid = subif.bport;
 		br_item->dp_port = subif.port_id;
+
+		/* Alloc Flag is needed by HAL layer to see the interface is
+		 * LAN or GPON or EPON
+		 */
+		br_item->alloc_flag = subif.alloc_flag;
+
 		swdev_lock();
 		br_info = dp_swdev_bridge_entry_lookup(br_dev->name);
 		p_info = get_dp_port_info(br_item->inst, br_item->dp_port);
diff --git a/drivers/net/datapath/dpm/datapath_swdev.h b/drivers/net/datapath/dpm/datapath_swdev.h
index af322d58faae..7e9867393dbf 100644
--- a/drivers/net/datapath/dpm/datapath_swdev.h
+++ b/drivers/net/datapath/dpm/datapath_swdev.h
@@ -30,6 +30,7 @@ struct bridge_id_entry_item {
 	u32 portid; /*Bridge port*/
 	u32 dp_port; /*DP port*/
 	u32 inst;
+	int alloc_flag; /* Same as alloc flag passed from dp_alloc_port */
 	struct switchdev_trans_item tritem;
 };
 
@@ -40,6 +41,7 @@ struct br_info {
 	u16 fid;
 	u32 flag;
 	u32 inst;
+	int alloc_flag; /* Same as alloc flag passed from dp_alloc_port */
 	struct list_head bp_list;
 };
 
@@ -48,6 +50,7 @@ struct bridge_member_port {
 	u32 portid;
 	u32 dev_reg_flag;
 	u16 bport[8];
+	int alloc_flag; /* Same as alloc flag passed from dp_alloc_port */
 };
 
 struct fdb_tbl {
diff --git a/drivers/net/datapath/dpm/gswip31/datapath_switchdev.c b/drivers/net/datapath/dpm/gswip31/datapath_switchdev.c
old mode 100755
new mode 100644
diff --git a/drivers/net/datapath/dpm/gswip32/datapath_switchdev.c b/drivers/net/datapath/dpm/gswip32/datapath_switchdev.c
old mode 100755
new mode 100644
