From d2079bffa76bf06b4839cdd6649f56c6cfb96b5a Mon Sep 17 00:00:00 2001
From: Hua Ma <hua.ma@linux.intel.com>
Date: Thu, 21 Jun 2018 17:37:59 +0800
Subject: [PATCH] Add support for ubi layer changes

---
 drivers/mtd/ubi/Kconfig  | 11 +++++++++++
 drivers/mtd/ubi/gluebi.c | 38 ++++++++++++++++++++++++++++++++++++++
 2 files changed, 49 insertions(+)

diff --git a/drivers/mtd/ubi/Kconfig b/drivers/mtd/ubi/Kconfig
index f0855ce08ed9..69b1e8554e00 100644
--- a/drivers/mtd/ubi/Kconfig
+++ b/drivers/mtd/ubi/Kconfig
@@ -103,4 +103,15 @@ config MTD_UBI_BLOCK
 
 	   If in doubt, say "N".
 
+config MTD_UBI_GLUEBI_ROOTFS_DEV
+    bool "Set root filesystem based on rootfs volume name"
+    depends on MTD_UBI_GLUEBI
+    default y
+    help
+       This option helps kernel to mount a root filesystem which works on top
+       of a gluebi volume using its volume name instead of using its mtd number.
+       ie. instead of using root=/dev/mtdblockN, we can pass
+       'rootfsname=volume_name' via kernel commandline.
+
+
 endif # MTD_UBI
diff --git a/drivers/mtd/ubi/gluebi.c b/drivers/mtd/ubi/gluebi.c
index 1cb287ec32ad..32688453dc26 100644
--- a/drivers/mtd/ubi/gluebi.c
+++ b/drivers/mtd/ubi/gluebi.c
@@ -38,6 +38,9 @@
 #include <linux/mutex.h>
 #include <linux/mtd/ubi.h>
 #include <linux/mtd/mtd.h>
+#ifdef CONFIG_MTD_UBI_GLUEBI_ROOTFS_DEV
+  #include <linux/root_dev.h>
+#endif
 #include "ubi-media.h"
 
 #define err_msg(fmt, ...)                                   \
@@ -66,6 +69,28 @@ struct gluebi_device {
 static LIST_HEAD(gluebi_devices);
 static DEFINE_MUTEX(devices_mutex);
 
+#ifdef CONFIG_MTD_UBI_GLUEBI_ROOTFS_DEV
+  /* Buffers to read kernel command line */
+  extern char *saved_command_line;
+  char *rootfsmtd_ptr;
+  char command_line_buf[64];
+  #define ROOTFS_CMDLINE "rootfsname="
+
+/*
+ * gluebi_read_cmdline - read kernel command line and get value of 'rootfsname'
+ * return: 0
+ */
+static void __init gluebi_read_cmdline (void)
+{
+    rootfsmtd_ptr = strstr(saved_command_line, ROOTFS_CMDLINE);
+    if (rootfsmtd_ptr) {
+        sscanf(rootfsmtd_ptr, ROOTFS_CMDLINE"%s", command_line_buf);
+        printk("Gluebi: Found kernel commandline option 'rootfsname=%s'\n", command_line_buf);
+    }
+}
+#endif
+
+
 /**
  * find_gluebi_nolock - find a gluebi device.
  * @ubi_num: UBI device number
@@ -347,6 +372,16 @@ static int gluebi_create(struct ubi_device_info *di,
 		return -ENFILE;
 	}
 
+#ifdef CONFIG_MTD_UBI_GLUEBI_ROOTFS_DEV
+	if (rootfsmtd_ptr) {
+		if (!strcmp(mtd->name, command_line_buf)) {
+			ROOT_DEV = MKDEV(MTD_BLOCK_MAJOR, mtd->index);
+			printk("Gluebi: mtd '%s' set to be root filesystem\n", mtd->name);
+			printk("rootdev: 0x%08x, mtd block: %08x, mtd index: %08x\n", ROOT_DEV, MTD_BLOCK_MAJOR, mtd->index);
+		}
+	}
+#endif
+
 	mutex_lock(&devices_mutex);
 	list_add_tail(&gluebi->list, &gluebi_devices);
 	mutex_unlock(&devices_mutex);
@@ -487,6 +522,9 @@ static struct notifier_block gluebi_notifier = {
 
 static int __init ubi_gluebi_init(void)
 {
+#ifdef CONFIG_MTD_UBI_GLUEBI_ROOTFS_DEV
+    gluebi_read_cmdline ();
+#endif
 	return ubi_register_volume_notifier(&gluebi_notifier, 0);
 }
 
