From f26439c0574d615f4084835cba124126f2716492 Mon Sep 17 00:00:00 2001
From: Peter Harliman Liem <peter.harliman.liem@intel.com>
Date: Fri, 3 Aug 2018 11:25:16 +0800
Subject: [PATCH] DRVLIB_SW-742 - Restore transfer speed/bit code in spi-grx500

This code was somehow commented out for unknown reason (possibly
during 4.9 kernel migration). Without this code individual transfer
speed/bit will never be used (only default slave speed/bit will be
used).
---
 drivers/spi/spi-grx500.c | 21 ++++++---------------
 1 file changed, 6 insertions(+), 15 deletions(-)

diff --git a/drivers/spi/spi-grx500.c b/drivers/spi/spi-grx500.c
index 0637fa066fde..d1ebece6cdac 100644
--- a/drivers/spi/spi-grx500.c
+++ b/drivers/spi/spi-grx500.c
@@ -390,21 +390,17 @@ static void ltq_spi_bits_per_word_set(struct spi_device *spi)
 {
 	struct ltq_spi *hw = ltq_spi_to_hw(spi);
 	u32 bm;
+	u8 bits_per_word = spi->bits_per_word;
 
 	/*
 	 * Use either default value of SPI device or value
 	 * from current transfer.
 	 */
-	/* 
-	 * current transfer not set correct value, 
-	 * not use this value.
-	 */
-//	if (hw->curr_transfer && hw->curr_transfer->bits_per_word)
-//		if (hw->curr_transfer->bits_per_word <= 32)
-//			bits_per_word = hw->curr_transfer->bits_per_word;
+	if (hw->curr_transfer && hw->curr_transfer->bits_per_word)
+		bits_per_word = hw->curr_transfer->bits_per_word;
 
 	/* CON.BM value = bits_per_word - 1 */
-	bm = (spi->bits_per_word - 1) << LTQ_SPI_CON_BM_SHIFT;
+	bm = (bits_per_word - 1) << LTQ_SPI_CON_BM_SHIFT;
 
 	ltq_spi_reg_clearbit(hw, LTQ_SPI_CON_BM_MASK <<
 			     LTQ_SPI_CON_BM_SHIFT, LTQ_SPI_CON);
@@ -428,13 +424,8 @@ static void ltq_spi_speed_set(struct spi_device *spi)
 	 * Use either default value of SPI device or value
 	 * from current transfer.
 	 */
-	/* 
-	 * current transfer not set correct value, 
-	 * not use this value.
-	 */
-//	if (hw->curr_transfer && hw->curr_transfer->speed_hz)
-//		if ((hw->curr_transfer->speed_hz <= spi->max_speed_hz) && (hw->curr_transfer->speed_hz >= 1000))
-//			speed_hz = hw->curr_transfer->speed_hz;
+	if (hw->curr_transfer && hw->curr_transfer->speed_hz)
+		speed_hz = hw->curr_transfer->speed_hz;
 
 	/*
 	 * Maximum SPI clock frequency in master mode is half of
