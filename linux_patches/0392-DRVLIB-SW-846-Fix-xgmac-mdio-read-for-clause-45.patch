From ae3524e235e028002c668c2941ec0a4130cc4521 Mon Sep 17 00:00:00 2001
From: Peter Harliman Liem <peter.harliman.liem@intel.com>
Date: Fri, 14 Dec 2018 15:13:02 +0800
Subject: [PATCH] DRVLIB_SW-846 - Fix xgmac mdio read for clause-45

- Add clause switching routine
- Dev-addr must be read from phyreg instead of hardcode 0
- Reduce print level in set_clause to debug
---
 .../ethernet/lantiq/switch-api/mac/xgmac_mdio.c    | 28 ++++++++++++++++++----
 1 file changed, 24 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mdio.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mdio.c
index 44d789142371..449dbf7eabe7 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mdio.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_mdio.c
@@ -244,8 +244,8 @@ int mdio_set_clause(void *pdev, u32 clause, u32 phy_id)
 
 	SET_N_BITS(mdio_c22p, phy_id, MDIO_CL22P_PORT0_WIDTH, clause);
 
-	mac_printf("MDIO: portID %d set to %s\n", phy_id,
-		   clause ? "Clause 22" : "Clause 45");
+	mac_dbg("MDIO: portID %d set to %s\n", phy_id,
+		clause ? "Clause 22" : "Clause 45");
 
 	/* Select port 0, 1, 2 and 3 as Clause 22/45 ports */
 	XGMAC_RGWR(pdata, MDIO_C22P, mdio_c22p);
@@ -441,11 +441,21 @@ static int xgmac_mdio_read(struct mii_bus *bus, int phyadr, int phyreg)
 	struct mac_ops *pdev = bus->priv;
 	struct mac_prv_data *pdata = GET_MAC_PDATA(pdev);
 	int phydata;
+	int clause;
 
 	mac_dbg("XGMAC %d: MDIO Read phyadr = %d, phyreg = %d\n",
 		pdata->mac_idx, phyadr, phyreg);
 
-	xgmac_mdio_single_rd(pdev, 0, phyadr, phyreg, &phydata);
+	if (phyreg & MII_ADDR_C45)
+		clause = 0;
+	else
+		clause = 1;
+
+	if (clause != mdio_get_clause(pdev, phyadr))
+		mdio_set_clause(pdev, clause, phyadr);
+
+	xgmac_mdio_single_rd(pdev, (phyreg >> 16) & 0x1F, phyadr,
+			     phyreg & 0xFFFF, &phydata);
 
 	mac_dbg("XGMAC %d: MDIO Read phydata = %#x\n",
 		pdata->mac_idx, phydata);
@@ -471,8 +481,18 @@ static int xgmac_mdio_write(struct mii_bus *bus, int phyadr, int phyreg,
 	struct mac_ops *pdev = bus->priv;
 	struct mac_prv_data *pdata = GET_MAC_PDATA(pdev);
 	int ret = 0;
+	int clause;
+
+	if (phyreg & MII_ADDR_C45)
+		clause = 0;
+	else
+		clause = 1;
+
+	if (clause != mdio_get_clause(pdev, phyadr))
+		mdio_set_clause(pdev, clause, phyadr);
 
-	xgmac_mdio_single_wr(pdev, 0, phyadr, phyreg, phydata);
+	xgmac_mdio_single_wr(pdev, (phyreg >> 16) & 0x1F, phyadr,
+			     phyreg & 0xFFFF, phydata);
 
 	mac_dbg("XGMAC %d: MDIO Write"
 		"phyadr %x phyreg %x phydata %x Completed\n",
