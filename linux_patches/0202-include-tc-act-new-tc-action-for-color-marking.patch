From b17de5b8b31a99c1f613a4c4679d8d99550fe731 Mon Sep 17 00:00:00 2001
From: Zahari Doychev <zahari.doychev@intel.com>
Date: Fri, 20 Jul 2018 11:03:16 +0000
Subject: [PATCH] include: tc_act: new tc action for color marking

This is the first definition of the netlink attributes for the new tc action
for color marking.

Signed-off-by: Zahari Doychev <zahari.doychev@intel.com>
---
 include/net/tc_act/tc_colmark.h        | 42 +++++++++++++++++++++++++++++++
 include/uapi/linux/tc_act/tc_colmark.h | 45 ++++++++++++++++++++++++++++++++++
 2 files changed, 87 insertions(+)

diff --git a/include/net/tc_act/tc_colmark.h b/include/net/tc_act/tc_colmark.h
new file mode 100644
index 000000000000..7cee48ddd10b
--- /dev/null
+++ b/include/net/tc_act/tc_colmark.h
@@ -0,0 +1,42 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef __NET_TC_COLMARK_H
+#define __NET_TC_COLMARK_H
+
+#include <net/act_api.h>
+#include <linux/tc_act/tc_colmark.h>
+
+struct tcf_colmark {
+	struct tc_action	common;
+	enum tc_col_precedence	precedence; /* packet drop precedence marker */
+	enum tc_maeter_type	type;  /* color marker type: srTCM, trTCM */
+	bool			blind;
+	u32			flags;
+};
+
+#define to_colmark(a) ((struct tcf_colmark *)a)
+
+static inline bool is_tcf_colmark(const struct tc_action *a)
+{
+#ifdef CONFIG_NET_CLS_ACT
+	if (a->ops && a->ops->type == TCA_ACT_COLMARK)
+		return true;
+#endif
+	return false;
+}
+
+static inline bool tcf_colmark_mode(const struct tc_action *a)
+{
+	return to_colmark(a)->blind;
+}
+
+static inline u8 tcf_colmark_precedence(const struct tc_action *a)
+{
+	return to_colmark(a)->precedence;
+}
+
+static inline u8 tcf_colmark_mtype(const struct tc_action *a)
+{
+	return to_colmark(a)->type;
+}
+
+#endif /* __NET_TC_COLMARK_H */
diff --git a/include/uapi/linux/tc_act/tc_colmark.h b/include/uapi/linux/tc_act/tc_colmark.h
new file mode 100644
index 000000000000..d0ad86ee9311
--- /dev/null
+++ b/include/uapi/linux/tc_act/tc_colmark.h
@@ -0,0 +1,45 @@
+/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
+#ifndef __LINUX_TC_COLMARK_H
+#define __LINUX_TC_COLMARK_H
+
+#include <linux/pkt_cls.h>
+
+#define TCA_ACT_COLMARK		27
+
+#define COLMARK_F_MODE		0x1
+#define COLMARK_F_MARKER	0x2
+#define COLMARK_F_MTYPE		0x4
+
+enum tc_drop_precedence {
+	NO_MARKING,
+	INTERNAL = 1,
+	DEI = 2,
+	PCP_8P0D = 3,
+	PCP_7P1D = 4,
+	PCP_6P2D = 5,
+	PCP_5P3D = 6,
+	DSCP_AF = 7,
+};
+
+enum tc_meter_type {
+	srTCM,
+	trTCM,
+};
+
+struct tc_colmark {
+	tc_gen;
+};
+
+enum {
+	TCA_COLMARK_UNSPEC,
+	TCA_COLMARK_TM,
+	TCA_COLMARK_PARMS,
+	TCA_COLMARK_MODE,
+	TCA_COLMARK_DROP_PRECEDEMCE,
+	TCA_COLMARK_METER_TYPE,
+	TCA_COLMARK_PAD,
+	__TCA_COLMARK_MAX
+};
+#define TCA_COLMARK_MAX (__TCA_COLMARK_MAX - 1)
+
+#endif
