From 65c3b2bce584348a496ca89126e3f3f53fb1cdc5 Mon Sep 17 00:00:00 2001
From: manohara <s.manoharan@intel.com>
Date: Thu, 29 Nov 2018 12:47:47 +0800
Subject: [PATCH] color marking table set and get bug fix and modification

---
 .../net/ethernet/lantiq/switch-api/gsw_flow_core.c | 70 ++++++++++------------
 include/net/switch_api/gsw_flow_ops.h              |  4 +-
 2 files changed, 32 insertions(+), 42 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
index b39c66faa00d..55b3d431a174 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
@@ -18392,7 +18392,7 @@ GSW_return_t GSW_QOS_ColorMarkingTableSet(void *cdev, GSW_QoS_colorMarkingEntry_
 {
 	pctbl_prog_t tbl_prog;
 	ethsw_api_dev_t *gswdev = GSW_PDATA_GET(cdev);
-	u8 pcp, dscp, tbl_index;
+	u8 pcp, dscp;
 	u32 ret;
 
 	if (gswdev == NULL) {
@@ -18419,22 +18419,18 @@ GSW_return_t GSW_QOS_ColorMarkingTableSet(void *cdev, GSW_QoS_colorMarkingEntry_
 
 	case GSW_MARKING_PCP_8P0D:
 
-	/*	For mode 3 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0)
-		Table Entry index from 0 to 15	*/
+	/*	For mode 3 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0) */
 	case GSW_MARKING_PCP_7P1D:
 
-	/*	For mode 4 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0)
-		Table Entry index from 16 to 31 */
+	/*	For mode 4 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0) */
 	case GSW_MARKING_PCP_6P2D:
 
-	/*	For mode 5 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0)
-		Table Entry index from 32 to 47 */
+	/*	For mode 5 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0) */
 	case GSW_MARKING_PCP_5P3D:
-		/*	For mode 6 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0)
-			Table Entry index from 48 to 63 */
-		tbl_index = (((parm->eMode) - GSW_MARKING_PCP_8P0D) << 4);
 
-		for (pcp = 0; pcp <= 15; pcp++, tbl_index++) {
+		/*	For mode 6 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0) */
+
+		for (pcp = 0; pcp <= 15; pcp++) {
 			/*Set Table Entry Index*/
 			CLEAR_U16(tbl_prog.pcindex);
 			/*Set Color Marking Mode Entry address in PCE_TBL_ADDR 2:0*/
@@ -18447,9 +18443,9 @@ GSW_return_t GSW_QOS_ColorMarkingTableSet(void *cdev, GSW_QoS_colorMarkingEntry_
 			/*Set PCE_TBL_VAL 0*/
 			CLEAR_U16(tbl_prog.val[0]);
 			/*Set Priority in PCE_TBL_VAL 0 (bit 6:4)*/
-			tbl_prog.val[0] |= ((parm->nPriority[tbl_index] & 0x7) << 4);
+			tbl_prog.val[0] |= ((parm->nPriority[pcp] & 0x7) << 4);
 			/*Set Color in PCE_TBL_VAL 0 (bit 8:7)*/
-			tbl_prog.val[0] |= ((parm->nColor[tbl_index] & 0x3) << 7);
+			tbl_prog.val[0] |= ((parm->nColor[pcp] & 0x3) << 7);
 			/*Address-based write*/
 			gsw_pce_table_write(cdev, &tbl_prog);
 		}
@@ -18457,11 +18453,10 @@ GSW_return_t GSW_QOS_ColorMarkingTableSet(void *cdev, GSW_QoS_colorMarkingEntry_
 		break;
 
 	case GSW_MARKING_DSCP_AF:
-		/*	For mode 7 there are 64 entries corresponding to DSCP
-			Table Entry index from 64 to 127 */
-		tbl_index = 0;
 
-		for (dscp = 0; dscp <= 63; dscp++, tbl_index++) {
+		/*	For mode 7 there are 64 entries corresponding to DSCP */
+
+		for (dscp = 0; dscp <= 63; dscp++) {
 			/*Set Table Entry Index*/
 			CLEAR_U16(tbl_prog.pcindex);
 			/*Set DSCP Entry address in PCE_TBL_ADDR*/
@@ -18472,9 +18467,9 @@ GSW_return_t GSW_QOS_ColorMarkingTableSet(void *cdev, GSW_QoS_colorMarkingEntry_
 			/*Set PCE_TBL_VAL 0*/
 			CLEAR_U16(tbl_prog.val[0]);
 			/*Set Priority in PCE_TBL_VAL 0 (bit 6:4)*/
-			tbl_prog.val[0] |= ((parm->nPriority[tbl_index] & 0x7) << 4);
+			tbl_prog.val[0] |= ((parm->nPriority[dscp] & 0x7) << 4);
 			/*Set Color in PCE_TBL_VAL 0 (bit 8:7)*/
-			tbl_prog.val[0] |= ((parm->nColor[tbl_index] & 0x3) << 7);
+			tbl_prog.val[0] |= ((parm->nColor[dscp] & 0x3) << 7);
 			/*Address-based write*/
 			gsw_pce_table_write(cdev, &tbl_prog);
 		}
@@ -18494,7 +18489,7 @@ GSW_return_t GSW_QOS_ColorMarkingTableGet(void *cdev, GSW_QoS_colorMarkingEntry_
 {
 	pctbl_prog_t tbl_prog;
 	ethsw_api_dev_t *gswdev = GSW_PDATA_GET(cdev);
-	u8 pcp, dscp, tbl_index;
+	u8 pcp, dscp;
 	u32 ret;
 
 	if (gswdev == NULL) {
@@ -18521,22 +18516,18 @@ GSW_return_t GSW_QOS_ColorMarkingTableGet(void *cdev, GSW_QoS_colorMarkingEntry_
 
 	case GSW_MARKING_PCP_8P0D:
 
-	/*	For mode 3 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0)
-		Table Entry index from 0 to 15	*/
+	/*	For mode 3 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0) */
 	case GSW_MARKING_PCP_7P1D:
 
-	/*	For mode 4 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0)
-		Table Entry index from 16 to 31 */
+	/*	For mode 4 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0) */
 	case GSW_MARKING_PCP_6P2D:
 
-	/*	For mode 5 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0)
-		Table Entry index from 32 to 47 */
+	/*	For mode 5 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0) */
 	case GSW_MARKING_PCP_5P3D:
-		/*	For mode 6 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0)
-			Table Entry index from 48 to 63 */
-		tbl_index = (((parm->eMode) - GSW_MARKING_PCP_8P0D) << 4);
 
-		for (pcp = 0; pcp <= 15; pcp++, tbl_index++) {
+		/*	For mode 6 there are 16 entries corresponding to PCP (bit3 to 1) + DEI (bit 0) */
+
+		for (pcp = 0; pcp <= 15; pcp++) {
 			tbl_prog.table = PCE_MAMRK_INDEX;
 			/*Set Table Entry Index*/
 			CLEAR_U16(tbl_prog.pcindex);
@@ -18549,19 +18540,18 @@ GSW_return_t GSW_QOS_ColorMarkingTableGet(void *cdev, GSW_QoS_colorMarkingEntry_
 
 			/*Get PCE_TBL_VAL 0*/
 			/*Get Priority in PCE_TBL_VAL 0 (bit 6:4)*/
-			parm->nPriority[tbl_index] = ((tbl_prog.val[0] & 0x70) >> 4);
+			parm->nPriority[pcp] = ((tbl_prog.val[0] & 0x70) >> 4);
 			/*Get Color in PCE_TBL_VAL 0 (bit 8:7)*/
-			parm->nColor[tbl_index] |= ((tbl_prog.val[0] & 0x180) >> 7);
+			parm->nColor[pcp] |= ((tbl_prog.val[0] & 0x180) >> 7);
 		}
 
 		break;
 
 	case GSW_MARKING_DSCP_AF:
-		/*	For mode 7 there are 64 entries corresponding to DSCP
-			Table Entry index from 64 to 127 */
-		tbl_index = 0;
 
-		for (dscp = 0; dscp <= 63; dscp++, tbl_index++) {
+		/*	For mode 7 there are 64 entries corresponding to DSCP */
+
+		for (dscp = 0; dscp <= 63; dscp++) {
 			tbl_prog.table = PCE_MAMRK_INDEX;
 			/*Set Table Entry Index*/
 			CLEAR_U16(tbl_prog.pcindex);
@@ -18574,9 +18564,9 @@ GSW_return_t GSW_QOS_ColorMarkingTableGet(void *cdev, GSW_QoS_colorMarkingEntry_
 
 			/*Get PCE_TBL_VAL 0*/
 			/*Get Priority in PCE_TBL_VAL 0 (bit 6:4)*/
-			parm->nPriority[tbl_index] = ((tbl_prog.val[0] & 0x70) >> 4);
+			parm->nPriority[dscp] = ((tbl_prog.val[0] & 0x70) >> 4);
 			/*Get Color in PCE_TBL_VAL 0 (bit 8:7)*/
-			parm->nColor[tbl_index] |= ((tbl_prog.val[0] & 0x180) >> 7);
+			parm->nColor[dscp] |= ((tbl_prog.val[0] & 0x180) >> 7);
 		}
 
 		break;
@@ -26603,8 +26593,8 @@ static GSW_return_t gsw_init_fn_ptrs(struct core_ops *ops)
 	ops->gsw_qos_ops.QoS_QueueBufferReserveCfgGet	= GSW_QoS_QueueBufferReserveCfgGet;
 	ops->gsw_qos_ops.QoS_QueueBufferReserveCfgSet	= GSW_QoS_QueueBufferReserveCfgSet;
 	ops->gsw_qos_ops.QoS_Meter_Act					= GSW_QoS_Meter_Act;
-	ops->gsw_qos_ops.QOS_ColorMarkingTableGet		= GSW_QOS_ColorMarkingTableSet;
-	ops->gsw_qos_ops.QOS_ColorMarkingTableSet		= GSW_QOS_ColorMarkingTableGet;
+	ops->gsw_qos_ops.QOS_ColorMarkingTableGet		= GSW_QOS_ColorMarkingTableGet;
+	ops->gsw_qos_ops.QOS_ColorMarkingTableSet		= GSW_QOS_ColorMarkingTableSet;
 	ops->gsw_qos_ops.QOS_ColorReMarkingTableSet		= GSW_QOS_ColorReMarkingTableSet;
 	ops->gsw_qos_ops.QOS_ColorReMarkingTableGet		= GSW_QOS_ColorReMarkingTableGet;
 	ops->gsw_qos_ops.QOS_MeterAlloc					= GSW_QOS_MeterAlloc;
diff --git a/include/net/switch_api/gsw_flow_ops.h b/include/net/switch_api/gsw_flow_ops.h
index 413f0a1d6a25..1b75fbca5dca 100644
--- a/include/net/switch_api/gsw_flow_ops.h
+++ b/include/net/switch_api/gsw_flow_ops.h
@@ -243,9 +243,9 @@ struct qos_ops {
 	/* Command: GSW_QOS_METER_ACT ; Index: 0x2B */
 	GSW_return_t (*QoS_Meter_Act)(void *, GSW_QoS_mtrAction_t *);
 	/* Command: GSW_QOS_COLOR_MARKING_TABLE_SET ; Index: 0x2C */
-	GSW_return_t (*QOS_ColorMarkingTableGet)(void *, GSW_QoS_colorMarkingEntry_t *);
-	/* Command: GSW_QOS_COLOR_MARKING_TABLE_GET ; Index: 0x2D */
 	GSW_return_t (*QOS_ColorMarkingTableSet)(void *, GSW_QoS_colorMarkingEntry_t *);
+	/* Command: GSW_QOS_COLOR_MARKING_TABLE_GET ; Index: 0x2D */
+	GSW_return_t (*QOS_ColorMarkingTableGet)(void *, GSW_QoS_colorMarkingEntry_t *);
 	/* Command: GSW_QOS_COLOR_REMARKING_TABLE_SET ; Index: 0x2E */
 	GSW_return_t (*QOS_ColorReMarkingTableSet)(void *, GSW_QoS_colorRemarkingEntry_t *);
 	/* Command: GSW_QOS_COLOR_REMARKING_TABLE_GET ; Index: 0x2F */
