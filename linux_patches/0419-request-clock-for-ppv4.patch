From 260b297662676c9c27a1e7089829a80c2584e242 Mon Sep 17 00:00:00 2001
From: Oren Bakshe <oren.bakshe@intel.com>
Date: Tue, 1 Jan 2019 14:45:49 +0200
Subject: [PATCH] request clock for ppv4

---
 drivers/clk/intel/clk-prx300.c                  |  2 +-
 drivers/net/ethernet/lantiq/ppv4/bm/pp_bm_drv.c | 32 ++++++++++++++++++++++---
 2 files changed, 30 insertions(+), 4 deletions(-)

diff --git a/drivers/clk/intel/clk-prx300.c b/drivers/clk/intel/clk-prx300.c
index 189bd0012e09..9f94c8dc9a93 100644
--- a/drivers/clk/intel/clk-prx300.c
+++ b/drivers/clk/intel/clk-prx300.c
@@ -235,7 +235,7 @@ static const struct intel_clk_branch prx300_branch_clks[] __initconst = {
 		   G_MPE_SHIFT, GATE_CLK_HW, 0),
 	INTEL_GATE(PRX300_GCLK_TDM, "g_tdm", NULL, 0, CGU_GATE1,
 		   G_TDM_SHIFT, GATE_CLK_HW, 0),
-	INTEL_GATE(PRX300_GCLK_PP, "g_pp", NULL, CLK_IGNORE_UNUSED, CGU_GATE1,
+	INTEL_GATE(PRX300_GCLK_PP, "g_pp", NULL, 0, CGU_GATE1,
 		   G_PP_SHIFT, GATE_CLK_HW, 0),
 	INTEL_GATE(PRX300_GCLK_DMA3, "g_dma3", NULL, 0, CGU_GATE1,
 		   G_DMA3_SHIFT, GATE_CLK_HW, 0),
diff --git a/drivers/net/ethernet/lantiq/ppv4/bm/pp_bm_drv.c b/drivers/net/ethernet/lantiq/ppv4/bm/pp_bm_drv.c
index 4288b2e1fb87..535ad8a9d23c 100644
--- a/drivers/net/ethernet/lantiq/ppv4/bm/pp_bm_drv.c
+++ b/drivers/net/ethernet/lantiq/ppv4/bm/pp_bm_drv.c
@@ -37,6 +37,7 @@
 #include <linux/delay.h>
 #include <linux/time.h>
 #include <linux/dma-mapping.h>
+#include <linux/clk.h>
 
 #include "pp_bm_drv.h"
 #include "pp_bm_drv_internal.h"
@@ -234,6 +235,8 @@ static int buffer_manager_probe(struct platform_device *pdev)
 	u32				val;
 	struct device_node		*node;
 	int				err;
+	struct clk			*ppv4_freq_clk;
+	struct clk			*ppv4_gate_clk;
 
 	dev_dbg(&pdev->dev, "BM probe...\n");
 
@@ -254,9 +257,15 @@ static int buffer_manager_probe(struct platform_device *pdev)
 		return -ENOMEM;
 	}
 
-	bm_config_addr_base = get_resource_mapped_addr(pdev, "reg-config", 0x10000);
-	bm_policy_mngr_addr_base = get_resource_mapped_addr(pdev, "ram-config", 0x10000);
-	uc_mcdma0_config_addr_base = get_resource_mapped_addr(pdev, "uc-mcdma0", 0x200);
+	bm_config_addr_base = get_resource_mapped_addr(pdev,
+						       "reg-config",
+						       0x10000);
+	bm_policy_mngr_addr_base = get_resource_mapped_addr(pdev,
+							    "ram-config",
+							    0x10000);
+	uc_mcdma0_config_addr_base = get_resource_mapped_addr(pdev,
+							      "uc-mcdma0",
+							      0x200);
 
 	if (!bm_config_addr_base ||
 	    !bm_policy_mngr_addr_base ||
@@ -313,6 +322,23 @@ static int buffer_manager_probe(struct platform_device *pdev)
 		return -ENODEV;
 	}
 
+	ppv4_freq_clk = devm_clk_get(&pdev->dev, "freq");
+	if (IS_ERR(ppv4_freq_clk)) {
+		ret = PTR_ERR(ppv4_freq_clk);
+		dev_err(&pdev->dev, "failed to get ppv4_freq_clk:%d\n", ret);
+		return ret;
+	}
+
+	ppv4_gate_clk = devm_clk_get(&pdev->dev, "ppv4");
+	if (IS_ERR(ppv4_gate_clk)) {
+		ret = PTR_ERR(ppv4_gate_clk);
+		dev_err(&pdev->dev, "failed to get ppv4_gate_clk:%d\n", ret);
+		return ret;
+	}
+
+	clk_prepare_enable(ppv4_gate_clk);
+	clk_prepare_enable(ppv4_freq_clk);
+
 	bm_dbg_dev_init(pdev);
 
 	return 0;
