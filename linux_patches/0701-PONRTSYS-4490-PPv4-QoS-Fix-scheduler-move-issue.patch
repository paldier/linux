From b145048143f64f323938054e8ec6e4eea3d9e225 Mon Sep 17 00:00:00 2001
From: ofirbitt <ofir1.bitton@intel.com>
Date: Mon, 22 Jul 2019 11:55:08 +0300
Subject: [PATCH] PONRTSYS-4490: PPv4 QoS - Fix scheduler move issue

---
 .../net/ethernet/lantiq/ppv4/qos/pp_qos_debugfs.c  | 15 ++++++
 .../net/ethernet/lantiq/ppv4/qos/pp_qos_linux.c    | 10 ++++
 drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_main.c | 57 ++++++++++------------
 .../net/ethernet/lantiq/ppv4/qos/pp_qos_utils.c    | 15 +++---
 .../net/ethernet/lantiq/ppv4/qos/pp_qos_utils.h    |  1 +
 5 files changed, 60 insertions(+), 38 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_debugfs.c b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_debugfs.c
index 60728bec2e62..d9e724f8943e 100644
--- a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_debugfs.c
+++ b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_debugfs.c
@@ -909,6 +909,14 @@ static ssize_t queue_help(struct file *file,
 	return ret;
 }
 
+static ssize_t resume_run_dbg(struct file *file, char __user *user_buf,
+			      size_t count, loff_t *ppos)
+{
+	resume_run();
+
+	return 0;
+}
+
 static const struct file_operations debug_add_shared_bwl_group_fops = {
 	.open    = simple_open,
 	.read    = add_shared_bwl_group_help,
@@ -958,6 +966,12 @@ static const struct file_operations debug_queue_fops = {
 	.llseek  = default_llseek,
 };
 
+static const struct file_operations resume_run_fops = {
+	.open    = simple_open,
+	.read    = resume_run_dbg,
+	.llseek  = default_llseek,
+};
+
 static int pp_qos_dbg_node_show(struct seq_file *s, void *unused)
 {
 	struct platform_device *pdev;
@@ -1678,6 +1692,7 @@ static struct debugfs_file qos_debugfs_files[] = {
 	{"port", &debug_port_fops, 0400},
 	{"sched", &debug_sched_fops, 0400},
 	{"queue", &debug_queue_fops, 0400},
+	{"resume_run", &resume_run_fops, 0400},
 };
 
 int qos_dbg_dev_init(struct platform_device *pdev)
diff --git a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_linux.c b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_linux.c
index 3c578172e4cf..b2aa6e7d5fd2 100644
--- a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_linux.c
+++ b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_linux.c
@@ -62,6 +62,16 @@ void stop_run(void)
 	}
 }
 
+void resume_run(void)
+{
+	struct pp_qos_drv_data *pdata;
+
+	if (cur_dev) {
+		pdata = dev_get_drvdata(cur_dev);
+		QOS_BITS_CLEAR(pdata->qdev->flags, PP_QOS_FLAGS_ASSERT);
+	}
+}
+
 void wake_uc(void *data)
 {
 	struct pp_qos_drv_data *pdata;
diff --git a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_main.c b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_main.c
index 0dc01fb988af..dc94e3018717 100644
--- a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_main.c
+++ b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_main.c
@@ -674,10 +674,8 @@ static int _pp_qos_port_set(
 			  conf->common_prop.shared_bandwidth_group,
 			  conf->port_parent_prop.arbitration,
 			  conf->port_parent_prop.best_effort_enable,
-			  (unsigned long)conf->ring_address,
-			  conf->ring_size,
-			  conf->packet_credit_enable,
-			  conf->credit,
+			  (unsigned long)conf->ring_address, conf->ring_size,
+			  conf->packet_credit_enable, conf->credit,
 			  conf->disable);
 
 	nodep = get_conform_node(qdev, id, NULL);
@@ -1253,33 +1251,28 @@ static int _pp_qos_queue_set(
 	modified = 0;
 	nodep = NULL;
 
-	QOS_LOG_API_DEBUG("queue=%u bw=%u shared=%u parent=%u"
-			" priority=%u bw_share=%u max_burst=%u blocked=%u"
-			  " wred_enable=%u wred_fixed_drop_prob=%u"
-			  " wred_min_avg_green=%u wred_max_avg_green=%u"
-			  " wred_slope_green=%u wred_fixed_drop_prob_green=%u"
-			  " wred_min_avg_yellow=%u wred_max_avg_yellow=%u"
-			  " wred_slope_yellow=%u wred_fixed_drop_prob_yellow=%u"
-			  " wred_min_guaranteed=%u wred_max_allowed=%u > queue\n",
-			  id, conf->common_prop.bandwidth_limit,
-			  conf->common_prop.shared_bandwidth_group,
-			  conf->queue_child_prop.parent,
-			  conf->queue_child_prop.priority,
-			  conf->queue_child_prop.wrr_weight,
-			  conf->max_burst,
-			  conf->blocked,
-			  conf->wred_enable,
-			  conf->wred_fixed_drop_prob_enable,
-			  conf->queue_wred_min_avg_green,
-			  conf->queue_wred_max_avg_green,
-			  conf->queue_wred_slope_green,
-			  conf->queue_wred_fixed_drop_prob_green,
-			  conf->queue_wred_min_avg_yellow,
-			  conf->queue_wred_max_avg_yellow,
-			  conf->queue_wred_slope_yellow,
-			  conf->queue_wred_fixed_drop_prob_yellow,
-			  conf->queue_wred_min_guaranteed,
-			  conf->queue_wred_max_allowed);
+	QOS_LOG_API_DEBUG(
+		"queue=%u bw=%u shared=%u parent=%u"
+		" priority=%u wrr_weight=%u max_burst=%u blocked=%u"
+		" wred_enable=%u wred_fixed_drop_prob=%u"
+		" wred_min_avg_green=%u wred_max_avg_green=%u"
+		" wred_slope_green=%u wred_fixed_drop_prob_green=%u"
+		" wred_min_avg_yellow=%u wred_max_avg_yellow=%u"
+		" wred_slope_yellow=%u wred_fixed_drop_prob_yellow=%u"
+		" wred_min_guaranteed=%u wred_max_allowed=%u > queue\n",
+		id, conf->common_prop.bandwidth_limit,
+		conf->common_prop.shared_bandwidth_group,
+		conf->queue_child_prop.parent, conf->queue_child_prop.priority,
+		conf->queue_child_prop.wrr_weight, conf->max_burst,
+		conf->blocked, conf->wred_enable,
+		conf->wred_fixed_drop_prob_enable,
+		conf->queue_wred_min_avg_green, conf->queue_wred_max_avg_green,
+		conf->queue_wred_slope_green,
+		conf->queue_wred_fixed_drop_prob_green,
+		conf->queue_wred_min_avg_yellow,
+		conf->queue_wred_max_avg_yellow, conf->queue_wred_slope_yellow,
+		conf->queue_wred_fixed_drop_prob_yellow,
+		conf->queue_wred_min_guaranteed, conf->queue_wred_max_allowed);
 
 	rc = check_queue_conf_validity(qdev, id, conf,
 			&node, &modified, alias_node);
@@ -1941,7 +1934,7 @@ int pp_qos_sched_set(
 	int rc;
 
 	QOS_LOG_API_DEBUG("sched=%u bw=%u shared=%u arb=%u be=%u"
-			  " parent=%u priority=%u bw_share=%u > sched\n",
+			  " parent=%u priority=%u wrr_weight=%u > sched\n",
 			  id, conf->common_prop.bandwidth_limit,
 			  conf->common_prop.shared_bandwidth_group,
 			  conf->sched_parent_prop.arbitration,
diff --git a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_utils.c b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_utils.c
index ff42405aded6..9cf21447de83 100644
--- a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_utils.c
+++ b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_utils.c
@@ -689,10 +689,13 @@ void node_update_children(
 	unsigned int num;
 	struct qos_node *child;
 
-	child = get_node_from_phy(
-			qdev->nodes,
-			parent->parent_prop.first_child_phy);
-	num =  parent->parent_prop.num_of_children;
+	num = parent->parent_prop.num_of_children;
+	if (!num)
+		return;
+
+	child = get_node_from_phy(qdev->nodes,
+				  parent->parent_prop.first_child_phy);
+
 	for (; num; --num)  {
 		child->child_prop.parent_phy = new_phy;
 		++child;
@@ -3014,10 +3017,10 @@ void __dbg_dump_subtree(struct pp_qos_dev *qdev,
 		child = get_node_from_phy(qdev->nodes, child_phy);
 
 		if (last_child)
-			snprintf(indent_str, sizeof(indent_str), "%s'-- ",
+			snprintf(indent_str, PP_QOS_DBG_MAX_INPUT, "%s'-- ",
 				 tabs_str);
 		else
-			snprintf(indent_str, sizeof(indent_str), "%s|-- ",
+			snprintf(indent_str, PP_QOS_DBG_MAX_INPUT, "%s|-- ",
 				 tabs_str);
 
 		if (node_sched(child)) {
diff --git a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_utils.h b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_utils.h
index a0a569f6d9c5..cbf4e488bac0 100644
--- a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_utils.h
+++ b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_utils.h
@@ -288,6 +288,7 @@ struct qos_dev_init_info {
 /******************************************************************************/
 #define QOS_LOG(format, arg...) QOS_LOG_DEBUG(format, ##arg)
 void stop_run(void);
+void resume_run(void);
 void qos_dbg_tree_show(struct pp_qos_dev *qdev, struct seq_file *s);
 int qos_dbg_qstat_show(struct pp_qos_dev *qdev, struct seq_file *s);
 
