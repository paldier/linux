From 54d7806cd46a9c77b3af4c6c2ff905ec9803223b Mon Sep 17 00:00:00 2001
From: thampan <joby.thampan@intel.com>
Date: Thu, 20 Jun 2019 14:07:33 +0800
Subject: [PATCH] PONRTSYS-3948: Fix for Insertion Flag PCE rule, PCE rule
 checks Special Tag is Valid or Not, Need a Dummy Special Tag to make the PCE
 rule work

---
 drivers/net/datapath/dpm/gswip31/datapath_misc.c     |  5 +++++
 drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c | 12 ++++++++++--
 2 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/drivers/net/datapath/dpm/gswip31/datapath_misc.c b/drivers/net/datapath/dpm/gswip31/datapath_misc.c
index a0e7f3e990ff..9c3a855675fa 100644
--- a/drivers/net/datapath/dpm/gswip31/datapath_misc.c
+++ b/drivers/net/datapath/dpm/gswip31/datapath_misc.c
@@ -1358,6 +1358,11 @@ static int pon_config(int inst, int ep, struct dp_port_data *data, u32 flags)
 	 */
 	mac_ops->mac_op_cfg(mac_ops, RX_TIME_NO_INSERT);
 
+	/* PON Interface always have a Special Tag from PON -> Xgmac
+	 * so should disable the Dummy Special Tag
+	 */
+	mac_ops->mac_op_cfg(mac_ops, RX_SPTAG_NO_INSERT);
+
 	/* Reset the MAC, without this reset the downstream from the PON IP
 	 * will not work when the MAC is not reset in U-Boot before.
 	 */
diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c b/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c
index 3486f99f7c43..929b0b8798a8 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_defconf.c
@@ -213,15 +213,16 @@ int gsw_misc_config(struct core_ops *ops)
 	GSW_register_t reg;
 	int i = 0;
 	ethsw_api_dev_t *gswdev = GSW_PDATA_GET(ops);
+	struct mac_ops *mac_ops;
 
 	if (gswdev == NULL) {
 		pr_err("%s:%s:%d", __FILE__, __func__, __LINE__);
 		return GSW_statusErr;
 	}
 
-	/* Ignore Undersized frames and forward to CPU for the 
+	/* Ignore Undersized frames and forward to CPU for the
 	 * Pmac Ports 0 and 1
-	 */	
+	 */
 	for (i = 0; i < 2; i++) {
 		reg.nRegAddr = (SDMA_PRIO_USIGN_OFFSET + (i * 6));
 		ops->gsw_common_ops.RegisterGet(ops, &reg);
@@ -241,6 +242,13 @@ int gsw_misc_config(struct core_ops *ops)
 		ops->gsw_common_ops.RegisterSet(ops, &reg);
 	}
 
+	for (i = MAC_2; i < (gswdev->pnum + MAC_2); i++) {
+		mac_ops = gsw_get_mac_ops(0, i);
+
+		if (mac_ops)
+			mac_ops->mac_op_cfg(mac_ops, RX_SPTAG_INSERT);
+	}
+
 	return 0;
 }
 
