From d824413efc9c85c6b3c8dc380785c0c9a81d8863 Mon Sep 17 00:00:00 2001
From: Peter Harliman Liem <peter.harliman.liem@intel.com>
Date: Wed, 29 May 2019 15:16:51 +0800
Subject: [PATCH] Revert "DRVLIB_SW-2340 - Enlarge gphy memory size to 32MB for
 workaround"

This reverts commit 993422043593afdcc8d9d0c01817e97321163402.
The corruption issue is fixed by updating gphy firmware
to 0x0651(A-Step) / 0x0716(B-Step).
---
 drivers/net/ethernet/lantiq/xrx500_phy_fw.c | 16 ++--------------
 1 file changed, 2 insertions(+), 14 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/xrx500_phy_fw.c b/drivers/net/ethernet/lantiq/xrx500_phy_fw.c
index 3cf88a75baaa..bf5e728e7fdd 100644
--- a/drivers/net/ethernet/lantiq/xrx500_phy_fw.c
+++ b/drivers/net/ethernet/lantiq/xrx500_phy_fw.c
@@ -55,7 +55,6 @@ struct xway_gphy_data {
 		int (*dt_parse_func)(struct xway_gphy_data *);
 		int (*shutdown)(struct xway_gphy_data *);
 		int align;
-		int fixed_mem_size;
 	} *soc_data;
 };
 
@@ -499,17 +498,11 @@ static int xway_gphy_load(struct xway_gphy_data *priv)
 		return -EIO;
 	}
 
-	if (priv->soc_data->fixed_mem_size)
-		size = priv->soc_data->fixed_mem_size;
-	else
-		size = fw->size;
-
 	/**
 	 * GPHY cores need the firmware code in a persistent and contiguous
 	 * memory area with a boundary aligned start address.
 	 */
-	size += priv->soc_data->align;
-
+	size = fw->size + priv->soc_data->align;
 	virt_addr = dmam_alloc_coherent(priv->dev, size, &priv->dma_addr,
 					GFP_KERNEL);
 	if (!virt_addr) {
@@ -590,12 +583,7 @@ static struct xway_gphy_soc_data prx300_gphy_data = {
 	.boot_func = &prx300_gphy_boot,
 	.shutdown = &prx300_gphy_shutdown,
 	.dt_parse_func = &prx300_dt_parse,
-
-	/* To workaround GPHY memory corruption issue,
-	 * we allocate 16MB (plus additional 16MB for alignment)
-	 */
-	.align = 16 * 1024 * 1024,
-	.fixed_mem_size = 16 * 1024 * 1024,
+	.align = 128 * 1024,
 };
 
 static const struct of_device_id xway_phy_match[] = {
