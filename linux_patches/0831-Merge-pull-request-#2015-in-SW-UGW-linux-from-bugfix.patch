From 021028e9a44213e002560ea899aa608b72dd7a66 Mon Sep 17 00:00:00 2001
From: CI Assistant <chdauto@intel.com>
Date: Tue, 7 Apr 2020 18:12:02 +0300
Subject: [PATCH] Merge pull request #2015 in SW_UGW/linux from
 bugfix/UGW_SW-49380-dcdp-umt-config-fix-8.4.1 to 8.4.1

* commit '8f2194a131907784539ade3b654ad8903e0847cb':
  UGW_SW-49380 : grx umt : asymmetric config of umt msg0 and msg1 period
---
 drivers/dma/ltq_hwmcpy.h     |  1 +
 drivers/dma/ltq_umt_expand.c | 24 ++++++++++++++++++++----
 include/linux/ltq_hwmcpy.h   |  4 +++-
 3 files changed, 24 insertions(+), 5 deletions(-)

diff --git a/drivers/dma/ltq_hwmcpy.h b/drivers/dma/ltq_hwmcpy.h
index 421285f9761f..3e0bc7ba974d 100644
--- a/drivers/dma/ltq_hwmcpy.h
+++ b/drivers/dma/ltq_hwmcpy.h
@@ -113,6 +113,7 @@ struct umt_port {
 	u32 dq_idx;
 	u32 umt_ep_dst;
 	u32 umtid_map_cbmid;
+	u32 umt_msg1_period;
 	u32 umt_remaining_time;
 #endif
 };
diff --git a/drivers/dma/ltq_umt_expand.c b/drivers/dma/ltq_umt_expand.c
index 92cac25deb7b..fbe162522c19 100644
--- a/drivers/dma/ltq_umt_expand.c
+++ b/drivers/dma/ltq_umt_expand.c
@@ -207,10 +207,12 @@ static inline void umt_reset_umt(u32 umt_id)
  * intput:
  * @umt_id: UMT port id, (0 - 3)
  * @ep_id:  Aligned with datapath lib ep_id
+ * @msg_mode:  0-No MSG, 1-MSG0 Only, 2-MSG1 Only, 3-MSG0 & MSG1.
  * @period: measured in microseconds.
  * ret:  Fail < 0 / Success: 0
  */
-int ltq_umt_set_period(u32 umt_id, u32 ep_id, u32 period)
+int ltq_umt_set_period(u32 umt_id, u32 ep_id,
+		       enum umt_msg_mode msg_mode, u32 period)
 {
 	struct mcpy_umt *pumt = mcpy_get_umt();
 	struct umt_port *port;
@@ -231,10 +233,19 @@ int ltq_umt_set_period(u32 umt_id, u32 ep_id, u32 period)
 		goto period_err;
 	}
 
+	#if IS_ENABLED(CONFIG_LTQ_UMT_SW_MODE)
+	if ((msg_mode == UMT_MSG1_ONLY)) {
+		port->umt_msg1_period = period;
+		port->umt_remaining_time = period;
+	} else
+	#endif
 	if (port->umt_period != period) {
 		port->umt_period = period;
 		#if IS_ENABLED(CONFIG_LTQ_UMT_SW_MODE)
-		port->umt_remaining_time = period;
+		if ((msg_mode == UMT_MSG0_MSG1)) {
+			port->umt_msg1_period = period;
+			port->umt_remaining_time = period;
+		}
 		#endif
 		umt_set_period(umt_id, port->umt_period);
 	}
@@ -320,7 +331,11 @@ int ltq_umt_set_mode(u32 umt_id, u32 ep_id, struct umt_set_mode *p_umt_mode)
 
 #if IS_ENABLED(CONFIG_LTQ_UMT_SW_MODE)
 	port->umt_ep_dst = umt_ep_dst;
-	port->umt_remaining_time = port->umt_period;
+	if (p_umt_mode->msg1_period)
+		port->umt_msg1_period = p_umt_mode->msg1_period;
+	else
+		port->umt_msg1_period = port->umt_period;
+	port->umt_remaining_time = port->umt_msg1_period;
 #endif
 	umt_set_mode(umt_id, port->umt_mode);
 	umt_set_msgmode(umt_id, port->msg_mode);
@@ -575,6 +590,7 @@ int ltq_umt_release(u32 umt_id, u32 ep_id)
 	port->umt_period = 0;
 	port->status = UMT_DISABLE;
 #if IS_ENABLED(CONFIG_LTQ_UMT_SW_MODE)
+	port->umt_msg1_period = 0;
 	port->umt_remaining_time = 0;
 	port->umt_ep_dst = 0;
 	port->umtid_map_cbmid = 0;
@@ -935,7 +951,7 @@ void umt_callback_fn(void *param)
 				port->umt_remaining_time -= g_umt_interval;
 				continue;
 			}
-			port->umt_remaining_time = port->umt_period;
+			port->umt_remaining_time = port->umt_msg1_period;
 			ret = cbm_dequeue_dma_port_stats_get(port->umtid_map_cbmid, &dq_ptr, 0);
 			if (ret != 0)
 				continue;
diff --git a/include/linux/ltq_hwmcpy.h b/include/linux/ltq_hwmcpy.h
index c9d67e330a32..6b1e9efd3369 100644
--- a/include/linux/ltq_hwmcpy.h
+++ b/include/linux/ltq_hwmcpy.h
@@ -68,6 +68,7 @@ struct umt_set_mode {
 	enum umt_msg_mode msg_mode;
 	u32 phy_dst;
 	u32 period;
+	u32 msg1_period;
 	enum umt_status enable;
 	u32 umt_ep_dst;
 };
@@ -79,7 +80,8 @@ extern int ltq_hwmcpy_sg(void *dst, const struct mcpy_frag *src, u32 frag_num,
 extern int ltq_mcpy_reserve(void);
 extern void ltq_mcpy_release(u32 pid);
 
-int ltq_umt_set_period(u32 umt_id, u32 ep_id, u32 period);
+int ltq_umt_set_period(u32 umt_id, u32 ep_id,
+		       enum umt_msg_mode msg_mode, u32 period);
 int ltq_umt_set_mode(u32 umt_id, u32 ep_id, struct umt_set_mode *umt_mode);
 int ltq_umt_enable(u32 umt_id, u32 ep_id, u32 enable);
 int ltq_umt_request(u32 ep_id, u32 cbm_pid,
