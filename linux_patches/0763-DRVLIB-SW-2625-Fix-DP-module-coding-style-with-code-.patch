From b8d623235f1ece424333d62740b722fee2a41467 Mon Sep 17 00:00:00 2001
From: Gu Chao <gux.chao@intel.com>
Date: Tue, 27 Aug 2019 11:11:12 +0800
Subject: [PATCH] DRVLIB_SW-2625: Fix DP module coding style with code
 modification

- Fix dp_check_if_netif_fastpath_fn()
- sync fix of dp_platform_queue_set_32() from lgm-dev-x64 branch
---
 drivers/net/datapath/dpm/datapath_api.c          | 9 ++++++---
 drivers/net/datapath/dpm/gswip32/datapath_misc.c | 2 +-
 2 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/net/datapath/dpm/datapath_api.c b/drivers/net/datapath/dpm/datapath_api.c
index 98a68dc1bf4d..2113dcd9565b 100644
--- a/drivers/net/datapath/dpm/datapath_api.c
+++ b/drivers/net/datapath/dpm/datapath_api.c
@@ -1637,6 +1637,7 @@ int32_t dp_check_if_netif_fastpath_fn(struct net_device *netif,
 				      dp_subif_t *subif, char *ifname,
 				      uint32_t flags)
 {
+	int res = 0;
 	dp_subif_t tmp_subif = { 0 };
 	struct pmac_port_info *p_info;
 	int max_dp_ports;
@@ -1657,14 +1658,16 @@ int32_t dp_check_if_netif_fastpath_fn(struct net_device *netif,
 	}
 	max_dp_ports = dp_port_prop[tmp_subif.inst].info.cap.max_num_dp_ports;
 	if (tmp_subif.port_id <= 0 || tmp_subif.port_id >= max_dp_ports)
-		return 0;
+		goto EXIT;
 	p_info = get_dp_port_info(tmp_subif.inst, tmp_subif.port_id);
 	dp_flags = DP_F_FAST_DSL || DP_F_FAST_ETH_LAN ||
 		   DP_F_FAST_ETH_WAN || DP_F_FAST_WLAN;
 	if (!(p_info->alloc_flags & dp_flags))
-		return 0;
+		goto EXIT;
+	res = 1;
+EXIT:
 	DP_LIB_UNLOCK(&dp_lock);
-	return 1;
+	return res;
 }
 EXPORT_SYMBOL(dp_check_if_netif_fastpath_fn);
 
diff --git a/drivers/net/datapath/dpm/gswip32/datapath_misc.c b/drivers/net/datapath/dpm/gswip32/datapath_misc.c
index 3cb838b633aa..6269c988c2b3 100644
--- a/drivers/net/datapath/dpm/gswip32/datapath_misc.c
+++ b/drivers/net/datapath/dpm/gswip32/datapath_misc.c
@@ -1140,7 +1140,7 @@ int dp_platform_queue_set_32(int inst, u32 flag)
 			tx_push = &cpu.dq_tx_push_info[i][j];
 			if (tx_push->deq_port == (s32)-1)
 				continue;
-			c_info = &dp_deq_port_tbl[inst][q_port.cqe_deq];
+			c_info = &dp_deq_port_tbl[inst][tx_push->deq_port];
 			vap_num++;
 			DP_DEBUG(DP_DBG_FLAG_QOS, "cpu(%d)(%d) deq_port=%d",
 				 i, j, tx_push->deq_port);
