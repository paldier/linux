From 6722385070e60ae4942b9d06ae36e2de4eb13d64 Mon Sep 17 00:00:00 2001
From: "Rywacki, KamilX" <kamilx.rywacki@intel.com>
Date: Wed, 4 Sep 2019 17:12:25 +0200
Subject: [PATCH] PONRTSYS-5007: Bridge port portmap enable/disable CPU port
 API

- Extend ethtool functionality
---
 drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c | 73 ++++++++++++++++++++++++
 drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.h |  2 +
 2 files changed, 75 insertions(+)

diff --git a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
index 00e8a1ab59a3..d90fe26f9cb5 100644
--- a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
+++ b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
@@ -364,6 +364,71 @@ int serdes_ethtool_set_link_ksettings(struct net_device *dev,
 	return ret;
 }
 
+static u32 get_priv_flags(struct net_device *dev)
+{
+	struct ltq_eth_priv *np = netdev_priv(dev);
+
+	return np->ethtool_flags;
+}
+
+static int set_priv_flags(struct net_device *dev, u32 flags)
+{
+	struct ltq_eth_priv *np = netdev_priv(dev);
+	struct dp_bp_attr bp_conf = {0};
+	int ret = 0;
+
+	bp_conf.dev = dev;
+
+	if (flags & ETHTOOL_FLAG_BP_CPU_ENABLE) {
+		bp_conf.en = true;
+		ret = dp_set_bp_attr(&bp_conf, 0);
+		if (ret != 0)
+			return ret;
+		np->ethtool_flags |= ETHTOOL_FLAG_BP_CPU_ENABLE;
+	} else {
+		bp_conf.en = false;
+		ret = dp_set_bp_attr(&bp_conf, 0);
+		if (ret != 0)
+			return ret;
+		np->ethtool_flags &= ~ETHTOOL_FLAG_BP_CPU_ENABLE;
+	}
+
+	return ret;
+}
+
+static const char priv_flags_strings[][ETH_GSTRING_LEN] = {
+	"bp_to_cpu_enable",
+};
+
+#define PRIV_FLAGS_STR_LEN ARRAY_SIZE(priv_flags_strings)
+
+static void get_strings(struct net_device *netdev, u32 stringset, u8 *data)
+{
+	int i;
+
+	switch (stringset) {
+	case ETH_SS_PRIV_FLAGS:
+		for (i = 0; i < PRIV_FLAGS_STR_LEN; i++) {
+			memcpy(data, priv_flags_strings[i],
+			       ETH_GSTRING_LEN);
+			data += ETH_GSTRING_LEN;
+		}
+		break;
+	default:
+		break;
+	}
+}
+
+static int get_stringset_count(struct net_device *netdev, int sset)
+{
+	switch (sset) {
+	case ETH_SS_PRIV_FLAGS:
+		return PRIV_FLAGS_STR_LEN;
+	default:
+		return -EOPNOTSUPP;
+	}
+}
+
 /* Structure of the ether tool operation in Phy case  */
 static const struct ethtool_ops ethtool_ops = {
 	.get_drvinfo		= get_drvinfo,
@@ -375,6 +440,10 @@ static const struct ethtool_ops ethtool_ops = {
 	.set_link_ksettings	= set_link_ksettings,
 	.get_eee		= ethtool_eee_get,
 	.set_eee		= ethtool_eee_set,
+	.get_strings		= get_strings,
+	.get_sset_count		= get_stringset_count,
+	.get_priv_flags		= get_priv_flags,
+	.set_priv_flags		= set_priv_flags,
 };
 
 /* Structure of the ether tool operation in No-Phy case */
@@ -382,6 +451,10 @@ static const struct ethtool_ops serdes_ethtool_ops = {
 	.get_drvinfo		= get_drvinfo,
 	.get_link_ksettings	= serdes_ethtool_get_link_ksettings,
 	.set_link_ksettings	= serdes_ethtool_set_link_ksettings,
+	.get_strings		= get_strings,
+	.get_sset_count		= get_stringset_count,
+	.get_priv_flags		= get_priv_flags,
+	.set_priv_flags		= set_priv_flags,
 };
 
 /* open the network device interface*/
diff --git a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.h b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.h
index 9ed14beb9c1f..ed4222fba5fc 100644
--- a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.h
+++ b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.h
@@ -105,6 +105,8 @@ struct ltq_eth_priv {
 	#define FLAG_ADV_1000HALF       0x00010000
 	#define FLAG_ADV_1000FULL       0x00020000
 	#define FLAG_INTERNAL_PHY       0x00100000
+	u32 ethtool_flags;
+	#define ETHTOOL_FLAG_BP_CPU_ENABLE	BIT(0)
 };
 
 /**
