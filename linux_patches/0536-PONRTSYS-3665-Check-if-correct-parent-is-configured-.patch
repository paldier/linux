From 419d5bbde2966d1bc1f0439489e42fc68724d817 Mon Sep 17 00:00:00 2001
From: Oren Bakshe <oren.bakshe@intel.com>
Date: Tue, 2 Apr 2019 18:52:01 +0300
Subject: [PATCH] PONRTSYS-3665: Check if correct parent is configured when
 changing arbitration

---
 drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_fw.c    |  2 +-
 drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_utils.c | 17 ++++++++++++-----
 2 files changed, 13 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_fw.c b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_fw.c
index 22f159fd927d..0f096ec504cc 100644
--- a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_fw.c
+++ b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_fw.c
@@ -2718,7 +2718,7 @@ void enqueue_cmds(struct pp_qos_dev *qdev)
 	uint32_t *cur;
 	uint32_t *prev;
 	uint32_t *start;
-	size_t remain;
+	int remain;
 	uint32_t flags;
 	union driver_cmd dcmd;
 	struct cmd_internal	cmd_internal;
diff --git a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_utils.c b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_utils.c
index 24afadad54cb..d3d878ef531d 100644
--- a/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_utils.c
+++ b/drivers/net/ethernet/lantiq/ppv4/qos/pp_qos_utils.c
@@ -2223,11 +2223,18 @@ static int set_child(struct pp_qos_dev *qdev,
 		QOS_BITS_SET(*modified, QOS_MODIFIED_BW_WEIGHT);
 	}
 
-	parent = get_node_from_phy(qdev->nodes, node->child_prop.parent_phy);
-	if ((parent->parent_prop.arbitration == PP_QOS_ARBITRATION_WSP) &&
-			(node->child_prop.priority != child->priority)) {
-		node->child_prop.priority = child->priority;
-		QOS_BITS_SET(*modified, QOS_MODIFIED_PRIORITY);
+	if (node->child_prop.priority != child->priority) {
+		if (QOS_PHY_VALID(node->child_prop.parent_phy)) {
+			parent = get_node_from_phy(qdev->nodes, 
+						   node->child_prop.parent_phy);
+			if (parent->parent_prop.arbitration ==
+			    PP_QOS_ARBITRATION_WSP) {
+				node->child_prop.priority = child->priority;
+				QOS_BITS_SET(*modified, QOS_MODIFIED_PRIORITY);
+			}
+		} else {
+			QOS_LOG_ERR("Trying to set priority, INVALID parent phy\n");
+		}
 	}
 
 	return 0;
