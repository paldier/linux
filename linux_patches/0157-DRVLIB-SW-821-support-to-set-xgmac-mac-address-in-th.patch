From 84d05359882c160498b25c1cd3d3d3973d3b4848 Mon Sep 17 00:00:00 2001
From: "Ma, Hua" <hua.ma@intel.com>
Date: Fri, 6 Jul 2018 14:25:46 +0800
Subject: [PATCH] DRVLIB_SW-821: support to set xgmac mac address in the
 ethernet driver

---
 drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c | 29 +++++++++++++++++++++++-
 drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.h |  1 +
 2 files changed, 29 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
index e5e7d22056dd..3606ac14c0ad 100644
--- a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
+++ b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.c
@@ -406,6 +406,7 @@ static void ltq_tx_timeout(struct net_device *dev)
 static int ltq_set_mac_address(struct net_device *dev, void *p)
 {
 	struct sockaddr *addr = p;
+	struct ltq_switch_priv_t *priv = netdev_priv(dev);
 
 	pr_debug("set_mac_addr called\n");
 	if (netif_running(dev))
@@ -416,6 +417,13 @@ static int ltq_set_mac_address(struct net_device *dev, void *p)
 
 	memcpy(dev->dev_addr, addr->sa_data, dev->addr_len);
 
+	if (priv->xgmac_id >= 0) {
+		struct mac_ops *ops;
+
+		ops = gsw_get_mac_ops(0, priv->xgmac_id);
+		if (ops)
+			ops->set_macaddr(ops, dev->dev_addr);
+	}
 	return 0;
 }
 
@@ -969,6 +977,7 @@ ltq_eth_drv_eth_addr_setup(struct net_device *dev, int port, int wan)
 	int i = 0;
 	u8 *macaddr_param = NULL;
 	u8 values[ETH_ALEN] = {0};
+	struct ltq_switch_priv_t *priv = netdev_priv(dev);
 
 	if (is_valid_ether_addr(dev->dev_addr))
 		return;
@@ -994,6 +1003,14 @@ ltq_eth_drv_eth_addr_setup(struct net_device *dev, int port, int wan)
 		eth_hw_addr_random(dev);
 		pr_debug("using random mac for port %d.\n", port);
 	}
+	if (priv->xgmac_id >= 0) {
+		struct mac_ops *ops;
+
+		ops = gsw_get_mac_ops(0, priv->xgmac_id);
+		if (ops)
+			ops->set_macaddr(ops, dev->dev_addr);
+	}
+
 }
 
 #ifdef CONFIG_USERSPACE_LINK_NOTIFICATION
@@ -1209,7 +1226,7 @@ static int xrx500_of_iface(struct xrx500_hw *hw, struct device_node *iface,
 	struct ltq_switch_priv_t *priv;
 	struct device_node *port;
 	const __be32 *wan;
-	u32 dp_dev_port_param, dp_port_id_param;
+	u32 dp_dev_port_param, dp_port_id_param, xgmac_id_param;
 	dp_cb_t cb = {0};
 	u32 dp_port_id = 0;
 	char name[16];
@@ -1256,6 +1273,16 @@ static int xrx500_of_iface(struct xrx500_hw *hw, struct device_node *iface,
 		return ret;
 	}
 
+	ret = of_property_read_u32(iface, "intel,xgmac-id",
+				   &xgmac_id_param);
+	if (ret < 0) {
+		pr_debug("Property intel,xgmac-id not exist for if %s\n",
+			 name);
+		priv->xgmac_id = -1;
+	} else {
+		priv->xgmac_id = xgmac_id_param;
+	}
+
 	strcpy(hw->devs[hw->num_devs]->name, name);
 	hw->devs[hw->num_devs]->netdev_ops = &ltq_eth_drv_ops;
 	hw->devs[hw->num_devs]->watchdog_timeo = LTQ_TX_TIMEOUT;
diff --git a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.h b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.h
index 9e281f921506..a4d285b8fbda 100644
--- a/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.h
+++ b/drivers/net/ethernet/lantiq/ltq_eth_drv_xrx500.h
@@ -65,6 +65,7 @@ struct ltq_switch_priv_t {
 	s32 dev_port; /*dev  instance */
 	s32 f_dp;   /* status for register to datapath*/
 	u32 dp_port_id;
+	int xgmac_id;
 	struct xrx500_port port[NUM_ETH_INF];
 	int num_port;
 	struct xrx500_hw				*hw;
