From f436e81595674dfa5664780a9d028d92205b15d3 Mon Sep 17 00:00:00 2001
From: Rekha Eswaran <rekha.eswaran@intel.com>
Date: Wed, 13 Feb 2019 11:20:40 +0800
Subject: [PATCH] PONRTSYS-2194: DP export quanta value

---
 drivers/net/ethernet/lantiq/datapath/datapath.h    |  1 +
 .../net/ethernet/lantiq/datapath/datapath_qos.c    |  9 +++++++
 .../lantiq/datapath/gswip31/datapath_misc.h        |  1 +
 .../lantiq/datapath/gswip31/datapath_ppv4_api.c    | 30 ++++++++++++++++++++++
 include/net/datapath_api_qos.h                     | 23 +++++++++++++++++
 5 files changed, 64 insertions(+)

diff --git a/drivers/net/ethernet/lantiq/datapath/datapath.h b/drivers/net/ethernet/lantiq/datapath/datapath.h
index 423f7a8efe17..4a384222973e 100644
--- a/drivers/net/ethernet/lantiq/datapath/datapath.h
+++ b/drivers/net/ethernet/lantiq/datapath/datapath.h
@@ -359,6 +359,7 @@ enum QOS_FLAG {
 	QUEUE_MAP_SET,     /*set lookup entries to the specified qid*/
 	NODE_CHILDREN_GET, /*get direct children list of node*/
 	QOS_LEVEL_GET,     /* get Max Scheduler level for Node */
+	QOS_GLOBAL_CFG_GET, /* get global qos config info */
 };
 
 struct dev_mib {
diff --git a/drivers/net/ethernet/lantiq/datapath/datapath_qos.c b/drivers/net/ethernet/lantiq/datapath/datapath_qos.c
index f10a5e3040a2..b5655638a5ea 100644
--- a/drivers/net/ethernet/lantiq/datapath/datapath_qos.c
+++ b/drivers/net/ethernet/lantiq/datapath/datapath_qos.c
@@ -227,3 +227,12 @@ int dp_qos_level_get(struct dp_qos_level *cfg, int flag)
 		dp_qos_platform_set(QOS_LEVEL_GET, cfg, flag);
 }
 EXPORT_SYMBOL(dp_qos_level_get);
+
+int dp_qos_global_info_get(struct dp_qos_cfg_info *info, int flag)
+{
+	if (!dp_port_prop[info->inst].info.dp_qos_platform_set)
+		return DP_FAILURE;
+	return dp_port_prop[info->inst].info.
+		dp_qos_platform_set(QOS_GLOBAL_CFG_GET, info, flag);
+}
+EXPORT_SYMBOL(dp_qos_global_info_get);
diff --git a/drivers/net/ethernet/lantiq/datapath/gswip31/datapath_misc.h b/drivers/net/ethernet/lantiq/datapath/gswip31/datapath_misc.h
index 58a6b2fd922f..07576ce80fb2 100644
--- a/drivers/net/ethernet/lantiq/datapath/gswip31/datapath_misc.h
+++ b/drivers/net/ethernet/lantiq/datapath/gswip31/datapath_misc.h
@@ -171,6 +171,7 @@ int dp_meter_add_31(struct net_device *dev,
 int dp_meter_del_31(struct net_device *dev,
 		    struct dp_meter_cfg *meter,
 		    int flag, struct dp_meter_subif *mtr_subif);
+int dp_qos_global_info_get_31(struct dp_qos_cfg_info *info, int flag);
 
 #if IS_ENABLED(CONFIG_LTQ_DATAPATH_DDR_SIMULATE_GSWIP31)
 GSW_return_t gsw_core_api_ddr_simu31(dp_gsw_cb func, void *ops, void *param);
diff --git a/drivers/net/ethernet/lantiq/datapath/gswip31/datapath_ppv4_api.c b/drivers/net/ethernet/lantiq/datapath/gswip31/datapath_ppv4_api.c
index 9e00e5466981..9c6c46772107 100644
--- a/drivers/net/ethernet/lantiq/datapath/gswip31/datapath_ppv4_api.c
+++ b/drivers/net/ethernet/lantiq/datapath/gswip31/datapath_ppv4_api.c
@@ -127,6 +127,9 @@ int qos_platform_set(int cmd_id, void *node, int flag)
 	case QOS_LEVEL_GET:
 		res = dp_qos_level_get_31((struct dp_qos_level *)node, flag);
 		break;
+	case QOS_GLOBAL_CFG_GET:
+		res = dp_qos_global_info_get_31((struct dp_qos_cfg_info *)node, flag);
+		break;
 	default:
 		PR_ERR("no support yet cmd_id %d\n", cmd_id);
 		break;
@@ -4484,3 +4487,30 @@ int dp_node_reserve(int inst, int ep, struct dp_port_data *data, int flags)
 	return res;
 }
 
+/* dp_children_get_31 API
+ * Get direct chldren and type of given node and return DP_SUCCESS
+ * else return DP_FAILURE
+ */
+int dp_qos_global_info_get_31(struct dp_qos_cfg_info *info, int flag)
+{
+	struct hal_priv *priv;
+	unsigned int quanta = 0;
+	
+	if (!info) {
+		PR_ERR("info cannot be NULL\n");
+		return DP_FAILURE;
+	}
+	priv = HAL(info->inst);
+	if (!priv) {
+		PR_ERR("priv cannot be NULL\n");
+		return DP_FAILURE;
+	}
+	if (pp_qos_get_quanta(priv->qdev, &quanta)) {
+		PR_ERR("failed pp_qos_get_quanta\n");
+		return DP_FAILURE;
+	}
+	info->quanta = quanta;
+	DP_DEBUG(DP_DBG_FLAG_QOS, "quanta=%d\n", quanta);
+
+	return DP_SUCCESS;
+}
diff --git a/include/net/datapath_api_qos.h b/include/net/datapath_api_qos.h
index 9302666719d2..92983c2fdda5 100644
--- a/include/net/datapath_api_qos.h
+++ b/include/net/datapath_api_qos.h
@@ -1240,6 +1240,29 @@ struct dp_tc_cfg {
  */
 int dp_ingress_ctp_tc_map_set(struct dp_tc_cfg *tc, int flag);
 
+/*!
+ * @struct dp_qos_cfg_info
+ *
+ * Structure defining the global QoS config info
+ *
+ */
+struct dp_qos_cfg_info {
+	int inst; /*!< input: dp instance. For SOC side, it is always zero */
+	u32 quanta; /*!< QoS quanta for scheduler */
+	
+};
+
+/*!< API dp_qos_global_info_get: Helps to retrieve global QoS
+ *  Config information.
+ *
+ * @param [in,out] qos info struct dp_qos_info *info
+ * @param [in] flag: reserved
+ * @return [out] integer value: return DP_SUCCESS if succeed,
+ *                              otherwise, return DP_FAILURE
+ *
+ */
+int dp_qos_global_info_get(struct dp_qos_cfg_info *info, int flag);
+
 
 #ifdef ENABLE_QOS_EXAMPLE
 /*! \ingroup APIs_dp_qos_example
