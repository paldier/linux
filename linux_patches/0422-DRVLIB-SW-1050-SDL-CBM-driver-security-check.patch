From e9bcfa7cbc0b1815a9e72717edcd8ade8cc742da Mon Sep 17 00:00:00 2001
From: arathinx <ayyappanx.rathinam@intel.com>
Date: Mon, 7 Jan 2019 17:25:44 +0800
Subject: [PATCH] DRVLIB_SW-1050: SDL CBM driver security check

---
 drivers/net/ethernet/lantiq/cqm/grx500/cbm_proc.c  | 52 +++++++++++++++++++
 .../net/ethernet/lantiq/cqm/prx300/cqm_debugfs.c   | 60 ++++++++++++++++++++++
 2 files changed, 112 insertions(+)

diff --git a/drivers/net/ethernet/lantiq/cqm/grx500/cbm_proc.c b/drivers/net/ethernet/lantiq/cqm/grx500/cbm_proc.c
index 369217a5b6ea..acbcfb89e1af 100644
--- a/drivers/net/ethernet/lantiq/cqm/grx500/cbm_proc.c
+++ b/drivers/net/ethernet/lantiq/cqm/grx500/cbm_proc.c
@@ -121,6 +121,9 @@ static uint32_t cbm_eqm_addr_base_d = KSEG1ADDR(CBM_EQM_MODULE_BASE);
 
 void cbm_enqueue_dump(struct seq_file *s)
 {
+	if (!capable(CAP_SYS_ADMIN))
+		return;
+
 	seq_printf(s, "CBM_ENQ_BASEe=0x%x\n", CBM_ENQ_BASE_D);
 
 	seq_printf(s, "%8s,%8s,%8s,%8s,%8s,%8s\n", "portno :", "pocc", "eqpc",
@@ -243,6 +246,8 @@ static uint32_t cbm_deqm_addr_base_d = KSEG1ADDR(CBM_DQM_MODULE_BASE);
 
 void cbm_dequeue_dump(struct seq_file *s)
 {
+	if (!capable(CAP_SYS_ADMIN))
+		return;
 
 	seq_printf(s, "CBM_DEQ_BASEe=0x%x\n", CBM_DEQ_BASE_D);
 
@@ -341,6 +346,9 @@ void cbm_ls_dump(struct seq_file *s)
 	unsigned int q_len2 = 0, q_full2 = 0, q_empty2 = 0, q_cnt2 =
 	0, q_len3 = 0, q_full3 = 0, q_empty3 = 0, q_cnt3 = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return;
+
 	seq_printf(s, "%8s,%8s,%8s,%8s,%8s\n", "portno:", "qlen", "qfull",
 	"qempty", "cntval");
 	reg_r_data = 0;
@@ -426,6 +434,9 @@ void cbm_sba_jba_dump(struct seq_file *s)
 {
 	unsigned int sba0 = 0, sba1 = 0, jba0 = 0, jba1 = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return;
+
 	sba0 = REG32(CBM_SBA0_D);
 	sba1 = REG32(CBM_SBA1_D);
 	jba0 = REG32(CBM_JBA0_D);
@@ -442,6 +453,10 @@ static uint32_t cbm_status_base_d = KSEG1ADDR(CBM_CBM_STAT);
 void cbm_status_reg_dump(struct seq_file *s)
 {
 	unsigned int reg_r_data, act_stat = 0, lsbyp = 0, jsel = 0;
+
+	if (!capable(CAP_SYS_ADMIN))
+		return;
+
 	reg_r_data = 0;
 	reg_r_data = REG32(CBM_STAT_D);
 	act_stat = get_val(reg_r_data, CBM_STAT_ACT_MASK, CBM_STAT_ACT_POS);
@@ -472,6 +487,9 @@ ssize_t cbm_enq_ovh_bytes_write(struct file *file, const char *buf,
 	char *param_list[5] = { 0 };
 	int num = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -509,6 +527,9 @@ void  cbm_enq_ovh_bytes_read(struct seq_file *s)
 	int i;
 	int8_t ovh_bytes;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return;
+
 	for (i = 0; i <= 15; i++) {
 		cbm_enqueue_port_overhead_get(i, &ovh_bytes);
 		LOGF_KLOG_CONT("%d \t", ovh_bytes);
@@ -519,6 +540,10 @@ void  cbm_enq_ovh_bytes_read(struct seq_file *s)
 void  cbm_q_thres_get_proc(struct seq_file *s)
 {
 	uint32_t length;
+
+	if (!capable(CAP_SYS_ADMIN))
+		return;
+
 	cbm_q_thres_get(&length);
 	LOGF_KLOG_CONT("EQM QUEUE THRESHOLD %d\n", length);
 }
@@ -531,6 +556,10 @@ ssize_t cbm_q_thres_set_proc(struct file *file, const char *buf,
 	char *p = (char *)str;
 	char *param_list[1] = { 0 };
 	int num = 0;
+
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -565,6 +594,10 @@ ssize_t cbm_eqm_delay_set_proc(struct file *file, const char *buf,
 	char *p = (char *)str;
 	char *param_list[3] = { 0 };
 	int num = 0;
+
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -604,6 +637,10 @@ ssize_t cbm_eqm_delay_set_proc(struct file *file, const char *buf,
 void  cbm_counter_mode_get_proc(struct seq_file *s)
 {
 	int mode;
+
+	if (!capable(CAP_SYS_ADMIN))
+		return;
+
 	cbm_counter_mode_get(0, &mode);
 	LOGF_KLOG_CONT("EQM MSEL %s\n", (mode > 0) ? "BYTE" : "PKT");
 	cbm_counter_mode_get(1, &mode);
@@ -621,6 +658,9 @@ ssize_t cbm_counter_mode_set_proc(struct file *file, const char *buf,
 	char *param_list[2] = { 0 };
 	int num = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -759,6 +799,9 @@ ssize_t cbm_qocc_test_steps(struct file *file, const char *buf,
 		| CBM_QUEUE_MAP_F_FLOWID_H_DONTCARE
 		| CBM_QUEUE_MAP_F_FLOWID_L_DONTCARE;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	temp_qmap = qmap_flags;
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
@@ -1021,6 +1064,9 @@ ssize_t fsqm_freesegment_read(struct file *file, const char *buf,
 	char *param_list[5] = { 0 };
 	int num = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -1129,6 +1175,9 @@ static uint32_t cbm_desc64_base_d = KSEG1ADDR(CBM_DESC64B_MODULE_BASE);
 
 void cbm_des64_ingress_dump(struct seq_file *s)
 {
+	if (!capable(CAP_SYS_ADMIN))
+		return;
+
 	print_reg64("SDESC0_0_IGP_5:	", CBM_DES64_D + SDESC0_0_IGP_5);
 	print_reg64("SDESC1_0_IGP_5:	", CBM_DES64_D + SDESC1_0_IGP_5);
 	LOGF_KLOG_CONT("\n");
@@ -1253,6 +1302,9 @@ void cbm_des64_ingress_dump(struct seq_file *s)
 
 void cbm_des64_egress_dump(struct seq_file *s)
 {
+	if (!capable(CAP_SYS_ADMIN))
+		return;
+
 	print_reg64("DESC0_0_EGP_5:	", CBM_DES64_D + DESC0_0_EGP_5);
 	print_reg64("DESC1_0_EGP_5:	", CBM_DES64_D + DESC1_0_EGP_5);
 	LOGF_KLOG_CONT("\n");
diff --git a/drivers/net/ethernet/lantiq/cqm/prx300/cqm_debugfs.c b/drivers/net/ethernet/lantiq/cqm/prx300/cqm_debugfs.c
index 2b68f6129382..5c63dff789d5 100644
--- a/drivers/net/ethernet/lantiq/cqm/prx300/cqm_debugfs.c
+++ b/drivers/net/ethernet/lantiq/cqm/prx300/cqm_debugfs.c
@@ -17,6 +17,9 @@ static ssize_t print_cqm_dbg_cntrs_write(struct file *file,
 	char *param_list[5] = { 0 };
 	int num = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -45,6 +48,9 @@ static int print_cqm_dbg_cntrs(struct seq_file *s, void *v)
 	u32 alloc_cnt_t = 0;
 	u32 isr_free_cnt_t = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	seq_puts(s, "Print CQEM debug counters:\n");
 	seq_puts(s, "\t\t\trx\t\ttx\t\tfree\t\talloc\t\tdelta (rx+alloc-tx-free)\n");
 	for (i = 0; i < CQM_MAX_POLICY_NUM; i++) {
@@ -154,6 +160,9 @@ static ssize_t cqm_ls_write(struct file *file, const char __user *buf,
 	char *param_list[5] = { 0 };
 	int num = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -172,6 +181,9 @@ static int cqm_ls_seq_read(struct seq_file *s, void *v)
 	void *ls_base = cqm_get_ls_base();
 	unsigned int reg_r_data, q_len = 0, q_full = 0, q_empty = 0, q_cnt = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	seq_printf(s, "\n%8s%8s,%8s,%8s,%8s\n",
 		   "portno:", "qlen", "qfull", "qempty", "cntval");
 
@@ -240,6 +252,9 @@ static const struct file_operations cqm_ls_fops = {
 
 static int cqm_dma_desc_read(struct seq_file *s, void *v)
 {
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	seq_puts(s, "echo help > /sys/kernel/debug/cqm/cqm_dmadesc for usage\n");
 	return 0;
 }
@@ -261,6 +276,9 @@ static ssize_t cqm_dma_desc_write(struct file *file, const char __user *buf,
 	void *baseaddr;
 	void *addr, *addr1;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -390,6 +408,9 @@ static ssize_t cqm_ctrl_write(struct file *file, const char __user *buf,
 	char *param_list[5] = { 0 };
 	int num = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -408,6 +429,9 @@ static int cqm_ctrl_seq_read(struct seq_file *s, void *v)
 	void *ctrl_base = cqm_get_ctrl_base();
 	u32 i;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	seq_puts(s, "\n");
 	for (i = 0; i < 8; i++) {
 		seq_printf(s, "Name: CBM_IRNCR_%d CBM_IRNICR_%d CBM_IRNEN_%d\n",
@@ -534,6 +558,9 @@ static inline void disp_deq_pon_reg(void *deq_base, u32 j)
 	unsigned long desc0 = DESC0_0_CPU_EGP_0;
 	int i;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	PRINTK("Name: CFG_PON_EGP_%02d\n", j);
 	PRINTK("Addr: 0x%8p\n",
 	       deq_base + CFG_CPU_EGP_0 + tmp);
@@ -816,6 +843,9 @@ static ssize_t cqm_deq_write(struct file *file, const char __user *buf,
 	void *deq_base = cqm_get_deq_base();
 	u32 j, m, n;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -862,6 +892,9 @@ static int cqm_deq_seq_read(struct seq_file *s, void *v)
 {
 	void *deq_base = cqm_get_deq_base();
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	seq_puts(s, "Name: CBM_DQM_CTRL\n");
 	seq_printf(s, "Addr: 0x%8p\n", deq_base + CBM_DQM_CTRL);
 	seq_printf(s, "Val:  0x%08x\n", cbm_r32(deq_base + CBM_EQM_CTRL));
@@ -1405,6 +1438,9 @@ static ssize_t cqm_enq_write(struct file *file, const char __user *buf,
 	int num = 0;
 	void *enq_base = cqm_get_enq_base();
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -1457,6 +1493,9 @@ static int cqm_enq_seq_read(struct seq_file *s, void *v)
 {
 	void *enq_base = cqm_get_enq_base();
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	seq_puts(s, "Name: CBM_EQM_CTRL\n");
 	seq_printf(s, "Addr: 0x%8p\n", enq_base + CBM_EQM_CTRL);
 	seq_printf(s, "Val:  0x%08x\n", cbm_r32(enq_base + CBM_EQM_CTRL));
@@ -1485,6 +1524,9 @@ static ssize_t cqm_dqpc_write(struct file *file, const char __user *buf,
 	char *param_list[5] = { 0 };
 	int num = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -1503,6 +1545,9 @@ static int cqm_dqpc_seq_read(struct seq_file *s, void *v)
 	void *deq_base = cqm_get_deq_base();
 	u32 j;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	deq_base += DQPC_CPU_EGP_0;
 	for (j = 0; j < 3; j++) {
 		seq_printf(s, "Name: DQPC_CPU_EGP__%02d  DQPC_CPU_EGP__%02d\n",
@@ -1556,6 +1601,9 @@ static ssize_t cqm_eqpc_write(struct file *file, const char __user *buf,
 	char *param_list[5] = { 0 };
 	int num = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -1574,6 +1622,9 @@ static int cqm_eqpc_seq_read(struct seq_file *s, void *v)
 	void *enq_base = cqm_get_enq_base();
 	u32 j;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	enq_base += EQPC_CPU_IGP_0;
 	for (j = 0; j < 2; j++) {
 		seq_printf(s, "Name: EQPC_CPU_IGP__%02d  EQPC_CPU_IGP__%02d\n",
@@ -1620,6 +1671,9 @@ static ssize_t cqm_ofsc_write(struct file *file, const char __user *buf,
 	char *param_list[5] = { 0 };
 	int num = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
 	len -= copy_from_user(str, buf, len);
 	str[len] = 0;
@@ -1637,6 +1691,9 @@ static ssize_t cqm_ofsc_write(struct file *file, const char __user *buf,
 
 static int cqm_ofsc_read(struct seq_file *s, void *v)
 {
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	seq_printf(s, "%8s\n", "FSC");
 	seq_printf(s, "0x%08x\n", get_fsqm_ofsc());
 	return 0;
@@ -1657,6 +1714,9 @@ static const struct file_operations cqm_ofsc_fops = {
 
 static int cqm_ofsq_read(struct seq_file *s, void *v)
 {
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	seq_printf(s, "0x%08x\n", fsqm_check(0));
 	return 0;
 }
