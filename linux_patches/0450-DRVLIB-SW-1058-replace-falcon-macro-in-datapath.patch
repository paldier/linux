From 788c86af3fe0bedf3858b47ff527e319acf046e1 Mon Sep 17 00:00:00 2001
From: Rekha Eswaran <rekha.eswaran@intel.com>
Date: Mon, 14 Jan 2019 13:19:10 +0800
Subject: [PATCH] DRVLIB_SW-1058: replace falcon macro in datapath

---
 drivers/net/ethernet/lantiq/datapath/Kconfig         |  4 ++--
 drivers/net/ethernet/lantiq/datapath/datapath.h      |  1 -
 drivers/net/ethernet/lantiq/datapath/datapath_api.c  | 13 +++++--------
 drivers/net/ethernet/lantiq/datapath/datapath_soc.c  |  2 +-
 drivers/net/ethernet/lantiq/datapath/gswip31/Kconfig |  8 ++++----
 include/net/datapath_api.h                           | 20 ++++++++++----------
 include/net/datapath_api_gswip31.h                   |  6 +++---
 include/net/datapath_api_qos.h                       |  2 +-
 8 files changed, 26 insertions(+), 30 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/datapath/Kconfig b/drivers/net/ethernet/lantiq/datapath/Kconfig
index 6b07a7dd4e48..03fc5f3a55ef 100644
--- a/drivers/net/ethernet/lantiq/datapath/Kconfig
+++ b/drivers/net/ethernet/lantiq/datapath/Kconfig
@@ -130,11 +130,11 @@ config LTQ_DATAPATH_PTP1588_SW_WORKAROUND
           PTP1588 Software Workaround
 
 config LTQ_DATAPATH_DDR_SIMULATE_GSWIP31
-	bool "Force FALCON-MX SOC"
+	bool "Force PRX300 SOC"
 	default n
 	depends on LTQ_DATAPATH
 	---help---
-	  test falcon-mx HAL in GRX350 boards
+	  test prx300 HAL in GRX350 boards
 source "drivers/net/ethernet/lantiq/datapath/gswip31/Kconfig"
 source "drivers/net/ethernet/lantiq/datapath/gswip30/Kconfig"
 endif
diff --git a/drivers/net/ethernet/lantiq/datapath/datapath.h b/drivers/net/ethernet/lantiq/datapath/datapath.h
index 66206e58d310..a51a577ca1c6 100644
--- a/drivers/net/ethernet/lantiq/datapath/datapath.h
+++ b/drivers/net/ethernet/lantiq/datapath/datapath.h
@@ -754,7 +754,6 @@ int dp_request_inst(struct dp_inst_info *info, u32 flag);
 int register_dp_cap(u32 flag);
 int print_symbol_name(unsigned long addr);
 typedef GSW_return_t(*dp_gsw_cb)(void *, void *);
-void falcon_test(void); /*defined in Pp qos driver */
 int bp_pmapper_dev_get(int inst, struct net_device *dev);
 
 extern int32_t (*qos_mgr_hook_setup_tc)(struct net_device *dev, u32 handle,
diff --git a/drivers/net/ethernet/lantiq/datapath/datapath_api.c b/drivers/net/ethernet/lantiq/datapath/datapath_api.c
index c78d3f9ab9c5..3428cf4e7de3 100644
--- a/drivers/net/ethernet/lantiq/datapath/datapath_api.c
+++ b/drivers/net/ethernet/lantiq/datapath/datapath_api.c
@@ -500,7 +500,7 @@ int32_t dp_register_subif_private(int inst, struct module *owner,
 			if (!(flags & DP_F_ALLOC_EXPLICIT_SUBIFID)) {
 				/*Share same subif with its base device
 				 *For GRX350: nothing need except save it
-				 *For Falcon_Mx: it need to allocate BP for it
+				 *For PRX300: it need to allocate BP for it
 				 */
 				res = add_logic_dev(inst, port_id, dev,
 						    subif_id, flags);
@@ -716,7 +716,7 @@ int32_t dp_deregister_subif_private(int inst, struct module *owner,
 			 port_id, i, cqm_port);
 	}
 	/* for pmapper and non-pmapper both
-	 *  1)for falcon_mx, dev is managed at its HAL level
+	 *  1)for PRX300, dev is managed at its HAL level
 	 *  2)for GRX350, bp/dev should be always zero/NULL at present
 	 *        before adapting to new datapath framework
 	 */
@@ -2751,12 +2751,9 @@ int dp_basic_proc(void)
 	if (dp_init_ok) /*alredy init */
 		return 0;
 	register_notifier(0);
-#ifdef CONFIG_LTQ_DATAPATH_DUMMY_QOS_VIA_FALCON_TEST
-	PR_INFO("\n\n--Falcon_test to simulate SLIM QOS drv---\n\n\n");
-	falcon_test();  /*Must put before register_dp_cap
-			 *since it needs to do CPU path cfg
-			 */
-#endif /*CONFIG_LTQ_DATAPATH_DUMMY_QOS_VIA_FALCON_TEST*/
+#ifdef CONFIG_LTQ_DATAPATH_DUMMY_QOS_VIA_PRX300_TEST
+	PR_INFO("\n\n--prx300_test to simulate SLIM QOS drv---\n\n\n");
+#endif /*CONFIG_LTQ_DATAPATH_DUMMY_QOS_VIA_PRX300_TEST*/
 	register_dp_cap(0);
 	if (request_dp(0)) /*register 1st dp instance */ {
 		PR_ERR("register_dp instance fail\n");
diff --git a/drivers/net/ethernet/lantiq/datapath/datapath_soc.c b/drivers/net/ethernet/lantiq/datapath/datapath_soc.c
index 90f07fb7823b..94f3c5f104b8 100644
--- a/drivers/net/ethernet/lantiq/datapath/datapath_soc.c
+++ b/drivers/net/ethernet/lantiq/datapath/datapath_soc.c
@@ -19,7 +19,7 @@
 #include "datapath_swdev_api.h"
 
 #ifdef CONFIG_PRX300_CQM
-#define LTQ_DATAPATH_SOC_FALCON_MX
+#define LTQ_DATAPATH_SOC_PRX300
 #endif
 
 int request_dp(u32 flag)
diff --git a/drivers/net/ethernet/lantiq/datapath/gswip31/Kconfig b/drivers/net/ethernet/lantiq/datapath/gswip31/Kconfig
index 8f0e6c45a532..440908756018 100644
--- a/drivers/net/ethernet/lantiq/datapath/gswip31/Kconfig
+++ b/drivers/net/ethernet/lantiq/datapath/gswip31/Kconfig
@@ -33,17 +33,17 @@ config LTQ_DATAPATH_DDR_SIMULATE_GSWIP31
 		By default it should be disabled.
 
 config LTQ_DATAPATH_DUMMY_QOS
-	bool "datapath dummy QOS based on slim QOS driver or real QOS API with falcon_test API"
+	bool "datapath dummy QOS based on slim QOS driver or real QOS API with PRX300_test API"
 	default y
 	depends on LTQ_PPV4_QOS_SLIM || (LTQ_PPV4_QOS || LTQ_PPV4)
 
-config LTQ_DATAPATH_DUMMY_QOS_VIA_FALCON_TEST
-	bool "datapath dummy QOS via ppv4 qos driver's falcon_test api, like slim driver"
+config LTQ_DATAPATH_DUMMY_QOS_VIA_PRX300_TEST
+	bool "datapath dummy QOS via ppv4 qos driver's PRX300_test api, like slim driver"
 	default y
 	depends on (LTQ_PPV4_QOS || LTQ_PPV4) && !LTQ_PPV4_QOS_SLIM && LTQ_DATAPATH_DUMMY_QOS
 
 config LTQ_DATAPATH_QOS_HAL
 	bool "datapath QOS hal"
 	default n
-	depends on (LTQ_PPV4_QOS || LTQ_PPV4) && !LTQ_DATAPATH_DUMMY_QOS_VIA_FALCON_TEST
+	depends on (LTQ_PPV4_QOS || LTQ_PPV4) && !LTQ_DATAPATH_DUMMY_QOS_VIA_PRX300_TEST
 endif
diff --git a/include/net/datapath_api.h b/include/net/datapath_api.h
index 92b3fa6bc54b..0c96c05c52c4 100644
--- a/include/net/datapath_api.h
+++ b/include/net/datapath_api.h
@@ -134,7 +134,7 @@ enum DP_F_FLAG {
 						*! For GRX350, seems need this
 						*flag becase of VLAN talbe
 						*handling inside PPA.
-						*! For Falcon-MX, normally no
+						*! For PRX300, normally no
 						*need this flag.
 						*Used by dp_register_subif
 						*/
@@ -257,7 +257,7 @@ typedef struct dp_subif {
 	union {
 		s32 subif; /*!< Sub-interface Id as HW defined
 			    * in full length
-			    * In GRX500/Falcon-MX, it is 15 bits
+			    * In GRX500/PRX300, it is 15 bits
 			    */
 		s32 subif_list[DP_MAX_CTP_PER_DEV]; /*!< subif list */
 	};
@@ -733,7 +733,7 @@ struct dp_port_data {
 /*! @brief typedef struct dp_dev_data */
 struct dp_dev_data {
 #define DP_RXOUT_RING_NUM 2  /*!< maximum number of ACA TXOUT ring support
-			      *   For GRX500/Falcon_mx, only support 1 ring
+			      *   For GRX500/PRX300, only support 1 ring
 			      *   For LGM, maximum up to 2 rings
 			      */
 	int rxout_ring_size[DP_RXOUT_RING_NUM]; /*!< [in/out]
@@ -742,12 +742,12 @@ struct dp_dev_data {
 						 *   otherwise try to set as
 						 *   requested. Only allowed to
 						 *   tune down.
-						 *   GRX350/Falcon_MX: 1 ring
+						 *   GRX350/PRX300: 1 ring
 						 *   LGM: up to 2 rings
 						 */
 	void *rxout_phy_addr[DP_RXOUT_RING_NUM]; /*!< [out] rxout ring buf
 						  *   physical address
-						  *   GRX350/Falcon_MX: 1 ring
+						  *   GRX350/PRX300: 1 ring
 						  *   LGM: up to 2 rings
 						  *   If NULL, it means no
 						  *   valid
@@ -774,12 +774,12 @@ struct dp_dev_data {
 						*   otherwise try to set as
 						*   requested. Only allowed to
 						*   tune down.
-						*   GRX350/Falcon_MX: 1 ring
+						*   GRX350/PRX300: 1 ring
 						*   LGM: up to 2 rings
 						*/
 	void *rxin_phy_addr[DP_RXOUT_RING_NUM]; /*!< [out] rxin ring buf
 						 *  physical address
-						 *  GRX350/Falcon_MX: 1 ring
+						 *  GRX350/PRX300: 1 ring
 						 *  LGM: up to 2 rings
 						 *  If NULL, it means no
 						 *  valid
@@ -837,7 +837,7 @@ struct dp_dev_data {
 	void *txout_ring_base_phy_addr; /*!< [out] ACA TXOUT(Free) base register
 					 *   physical address
 					 */
-	int txout_policy_base; /*!< [out] For falcon_mx: For legacy ACA to free
+	int txout_policy_base; /*!< [out] For PRX300: For legacy ACA to free
 				*   BM buffer
 				*         for LGM, it is base policy.
 				*   Note: For LGM, each ACA device needs to
@@ -845,14 +845,14 @@ struct dp_dev_data {
 				*   the buffer since its information may lost
 				*/
 	int txout_poolid; /*!< [out] For legacy ACA to free BM buffer in
-			   *   in falcon_mx
+			   *   in PRX300
 			   */
 	u16 max_ctp;    /*!< [in] maximum subif required which will be mapped to
 			 * GSWIP continuous CTP block.
 			 * Since very limited CTP in GSWIP and it is already
 			 * out of range, some drivers have to specify this
 			 * parameter to save the system resource, for example
-			 * of G.INIT in falcon_mx:
+			 * of G.INIT in PRX300:
 			 * 1) single LAN port only: it is value should be 16
 			 * 2) two Lan Ports:
 			 *      a) 1st lan port: 8 CPT with 8 subif only
diff --git a/include/net/datapath_api_gswip31.h b/include/net/datapath_api_gswip31.h
index 187e43651bff..2ebcede27a1c 100644
--- a/include/net/datapath_api_gswip31.h
+++ b/include/net/datapath_api_gswip31.h
@@ -6,8 +6,8 @@
  * under the terms of the GNU General Public License version 2 as published
  * by the Free Software Foundation.
  */
-#ifndef DATAPATH_API_FALCONMX_H
-#define DATAPATH_API_FALCONMX_H
+#ifndef DATAPATH_API_PRX300_H
+#define DATAPATH_API_PRX300_H
 
 #ifdef CONFIG_LITTLE_ENDIAN
 struct dma_rx_desc_0 {
@@ -316,4 +316,4 @@ struct pmac_tx_hdr { /*Ingress PMAC header*/
 } __packed;
 #endif
 
-#endif /*DATAPATH_API_FALCONMX_H*/
+#endif /*DATAPATH_API_PRX300_H*/
diff --git a/include/net/datapath_api_qos.h b/include/net/datapath_api_qos.h
index 539d5beaaea9..9302666719d2 100644
--- a/include/net/datapath_api_qos.h
+++ b/include/net/datapath_api_qos.h
@@ -916,7 +916,7 @@ struct dp_dequeue_res {
 			    *    Normally this value should be 1.
 			    *    For GPON case, if cqm_deq_port ==
 			    *        DEQ_PORT_OFFSET_ALL, then it will be the
-			    *    max number of dequeue port. In falcon-mx, it is
+			    *    max number of dequeue port. In PRX300, it is
 			    *    64.</PRE>
 			    */
 	int num_q; /*!< output: the number of queues*/
