From 680dfbc795b977bfb2d8d3c4cba5fbb9fccc0626 Mon Sep 17 00:00:00 2001
From: yixin zhu <yixin.zhu@intel.com>
Date: Thu, 20 Sep 2018 09:49:22 +0800
Subject: [PATCH] fix kernel crash if led pin invalid

---
 drivers/leds/leds-intel-sso.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/leds/leds-intel-sso.c b/drivers/leds/leds-intel-sso.c
index 69e90704d09a..add8078cfda3 100644
--- a/drivers/leds/leds-intel-sso.c
+++ b/drivers/leds/leds-intel-sso.c
@@ -176,6 +176,8 @@ struct sso_led_priv {
 	struct dentry *debugfs;
 };
 
+static void sso_led_shutdown(struct sso_led *led);
+
 static int sso_led_writel(struct regmap *map, u32 reg, u32 val)
 {
 	return regmap_write(map, reg, val);
@@ -467,6 +469,7 @@ static int sso_led_dt_parse(struct sso_led_priv *priv)
 	struct sso_led *led;
 	struct fwnode_handle *child;
 	struct device *dev = priv->dev;
+	struct list_head *p;
 	int count;
 	u32 prop;
 
@@ -563,6 +566,11 @@ static int sso_led_dt_parse(struct sso_led_priv *priv)
 
 __dt_err:
 	fwnode_handle_put(child);
+	/* unregister leds */
+	list_for_each(p, &priv->led_list) {
+		led = list_entry(p, struct sso_led, list);
+		sso_led_shutdown(led);
+	}
 	return -EINVAL;
 }
 
@@ -640,10 +648,6 @@ static void sso_led_shutdown(struct sso_led *led)
 	/* unregister led */
 	devm_led_classdev_unregister(priv->dev, &led->cdev);
 
-	/* turn off led */
-	if (!led->desc.retain_state_shutdown)
-		sso_led_brightness_set(&led->cdev, LED_OFF);
-
 	/* clear HW control bit */
 	if (led->desc.hw_trig)
 		sso_led_set_hw_trigger(priv, led->desc.pin, 0);
