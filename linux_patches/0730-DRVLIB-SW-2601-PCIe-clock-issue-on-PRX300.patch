From c5f4240374a7294c47b57a56600a7d4de12e36c5 Mon Sep 17 00:00:00 2001
From: arathinx <ayyappanx.rathinam@intel.com>
Date: Tue, 6 Aug 2019 11:19:02 +0800
Subject: [PATCH] DRVLIB_SW-2601: PCIe clock issue on PRX300

We should not disable PLLs in prx300
---
 drivers/clk/intel/clk-cgu-pll.c | 11 +++++------
 drivers/clk/intel/clk-cgu-pll.h |  5 +++--
 drivers/clk/intel/clk-prx300.c  | 24 ++++++++++++------------
 3 files changed, 20 insertions(+), 20 deletions(-)

diff --git a/drivers/clk/intel/clk-cgu-pll.c b/drivers/clk/intel/clk-cgu-pll.c
index 5a3ec3cf0249..eb4cac8ddc3a 100644
--- a/drivers/clk/intel/clk-cgu-pll.c
+++ b/drivers/clk/intel/clk-cgu-pll.c
@@ -146,9 +146,9 @@ int intel_clk_register_early(struct intel_clk_provider *ctx,
 
 		memset(&init, 0, sizeof(init));
 		init.name = list->name;
-		if (list->platform == PLL_PFM_V1) {
+		if (list->platform == PLL_PFM_GRX500) {
 			init.ops = &grx500_clk_early_ops;
-		} else if (list->platform == PLL_PFM_V2) {
+		} else if (list->platform == PLL_PFM_PRX300) {
 			init.ops = &prx300_clk_early_ops;
 		} else {
 			pr_err("%s: platform not support: %u\n",
@@ -284,7 +284,7 @@ static int prx300_pll_enable(struct clk_hw *hw)
 	return intel_pll_wait_for_lock(pll);
 }
 
-static void prx300_pll_disable(struct clk_hw *hw)
+static void __maybe_unused prx300_pll_disable(struct clk_hw *hw)
 {
 	struct intel_clk_pll *pll = to_intel_clk_pll(hw);
 
@@ -352,7 +352,6 @@ static const struct clk_ops intel_prx300_pll_ops = {
 	.recalc_rate	= prx300_pll_recalc_rate,
 	.is_enabled	= prx300_pll_is_enabled,
 	.enable		= prx300_pll_enable,
-	.disable	= prx300_pll_disable,
 	.round_rate	= prx300_pll_round_rate,
 	.set_rate	= prx300_pll_set_rate,
 };
@@ -368,9 +367,9 @@ static struct clk_hw
 	const struct intel_pll_rate_table *table = list->rate_table;
 	int ret, i;
 
-	if (list->platform == PLL_PFM_V1) {
+	if (list->platform == PLL_PFM_GRX500) {
 		init.ops = &intel_grx500_pll_ops;
-	} else if (list->platform == PLL_PFM_V2) {
+	} else if (list->platform == PLL_PFM_PRX300) {
 		init.ops = &intel_prx300_pll_ops;
 	} else {
 		dev_err(dev, "%s: pll platform %d not supported!\n",
diff --git a/drivers/clk/intel/clk-cgu-pll.h b/drivers/clk/intel/clk-cgu-pll.h
index 64f68b2e864b..41dfa559eb7d 100644
--- a/drivers/clk/intel/clk-cgu-pll.h
+++ b/drivers/clk/intel/clk-cgu-pll.h
@@ -8,8 +8,9 @@
 #define __INTEL_CLK_PLL_H
 
 enum pll_platform {
-	PLL_PFM_V1, /* GRX500 */
-	PLL_PFM_V2, /* PRX300, LGM */
+	PLL_PFM_GRX500,
+	PLL_PFM_PRX300,
+	PLL_PFM_LGM,
 };
 
 enum pll_type {
diff --git a/drivers/clk/intel/clk-prx300.c b/drivers/clk/intel/clk-prx300.c
index ee5c89e36947..5023a628b480 100644
--- a/drivers/clk/intel/clk-prx300.c
+++ b/drivers/clk/intel/clk-prx300.c
@@ -65,7 +65,7 @@ static const struct intel_clk_early_data prx300_early_clks[] __initconst = {
 	{ PLL0A_CFG0, 0, 4, "earlycpu", pll_p, 0,
 	  0, 0, PLL_DIV_WIDTH,
 	  0, 0, PLL_DIV_WIDTH,
-	  PLL_PFM_V2, TYPE_ROPLL, pll_div
+	  PLL_PFM_PRX300, TYPE_ROPLL, pll_div
 	},
 };
 
@@ -93,22 +93,22 @@ static const struct intel_pll_rate_table ljpll5_clk_vco[] __initconst = {
 };
 
 static const struct intel_pll_clk_data prx300_pll_clks[] __initconst = {
-	[PLL0A] = INTEL_PLL(PRX300_CLK_PLL0A, PLL_PFM_V2, "pll0a", pll_p,
+	[PLL0A] = INTEL_PLL(PRX300_CLK_PLL0A, PLL_PFM_PRX300, "pll0a", pll_p,
 			    CLK_IGNORE_UNUSED, PLL0A_CFG0, NULL, TYPE_ROPLL),
-	[PLL0B] = INTEL_PLL(PRX300_CLK_PLL0B, PLL_PFM_V2, "pll0b", pll_p,
+	[PLL0B] = INTEL_PLL(PRX300_CLK_PLL0B, PLL_PFM_PRX300, "pll0b", pll_p,
 			    CLK_IGNORE_UNUSED, PLL0B_CFG0, NULL, TYPE_ROPLL),
-	[PLL1] = INTEL_PLL(PRX300_CLK_PLL1, PLL_PFM_V2, "pll1", pll_p,
+	[PLL1] = INTEL_PLL(PRX300_CLK_PLL1, PLL_PFM_PRX300, "pll1", pll_p,
 			   CLK_IGNORE_UNUSED, PLL1_CFG0, pll1_clk_vco,
 			   TYPE_ROPLL),
-	[PLL2] = INTEL_PLL(PRX300_CLK_PLL2, PLL_PFM_V2, "pll2", pll_p,
+	[PLL2] = INTEL_PLL(PRX300_CLK_PLL2, PLL_PFM_PRX300, "pll2", pll_p,
 			   CLK_IGNORE_UNUSED, PLL2_CFG0, NULL, TYPE_ROPLL),
-	[LJPLL3] = INTEL_PLL(PRX300_CLK_LJPLL3, PLL_PFM_V2, "ljpll3", pll_p,
+	[LJPLL3] = INTEL_PLL(PRX300_CLK_LJPLL3, PLL_PFM_PRX300, "ljpll3", pll_p,
 			     CLK_IGNORE_UNUSED, LJPLL3_CFG0, ljpll3_clk_vco,
 			     TYPE_LJPLL),
-	[LJPLL4] = INTEL_PLL(PRX300_CLK_LJPLL4, PLL_PFM_V2, "ljpll4", pll_p,
+	[LJPLL4] = INTEL_PLL(PRX300_CLK_LJPLL4, PLL_PFM_PRX300, "ljpll4", pll_p,
 			     CLK_IGNORE_UNUSED, LJPLL4_CFG0, ljpll4_clk_vco,
 			     TYPE_LJPLL),
-	[LJPLL5] = INTEL_PLL(PRX300_CLK_LJPLL5, PLL_PFM_V2, "ljpll5", pll_p,
+	[LJPLL5] = INTEL_PLL(PRX300_CLK_LJPLL5, PLL_PFM_PRX300, "ljpll5", pll_p,
 			     CLK_IGNORE_UNUSED, LJPLL5_CFG0, ljpll5_clk_vco,
 			     TYPE_LJPLL),
 };
@@ -198,14 +198,14 @@ static const struct intel_clk_branch prx300_branch_clks[] __initconst = {
 		   31, GATE_CLK_HW, 0),
 
 	/* Gate2 clock */
-	INTEL_GATE(PRX300_GCLK_PCIE_CTRL0, "g_ctrl0", NULL, 0, CGU_GATE2,
-		   1, GATE_CLK_HW, 0),
+	INTEL_GATE(PRX300_GCLK_PCIE_CTRL0, "pcie0", "pcie", CLK_SET_RATE_PARENT,
+		   CGU_GATE2, 1, GATE_CLK_HW, 0),
 	INTEL_GATE(PRX300_GCLK_MSI0, "g_msi0", NULL, 0, CGU_GATE2,
 		   2, GATE_CLK_HW, 0),
 	INTEL_GATE(PRX300_GCLK_PD0, "g_pd0", NULL, 0, CGU_GATE2,
 		   7, GATE_CLK_HW, 0),
-	INTEL_GATE(PRX300_GCLK_PCIE_CTRL1, "g_ctrl1", NULL, 0, CGU_GATE2,
-		   17, GATE_CLK_HW, 0),
+	INTEL_GATE(PRX300_GCLK_PCIE_CTRL1, "pcie1", "pcie", CLK_SET_RATE_PARENT,
+		   CGU_GATE2, 17, GATE_CLK_HW, 0),
 	INTEL_GATE(PRX300_GCLK_MSI1, "g_msi1", NULL, 0, CGU_GATE2,
 		   18, GATE_CLK_HW, 0),
 	INTEL_GATE(PRX300_GCLK_PD1, "g_pd1", NULL, 0, CGU_GATE2,
