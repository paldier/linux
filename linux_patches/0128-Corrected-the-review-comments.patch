From 8475dbb634a592f507b2d8c867d3565be8a3710f Mon Sep 17 00:00:00 2001
From: thampan <joby.thampan@intel.com>
Date: Thu, 5 Jul 2018 18:13:46 +0800
Subject: [PATCH] Corrected the review comments

---
 drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
index 227fdd293c8b..41fb48284397 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
@@ -324,9 +324,9 @@ static void *parse_ptp_packet(struct sk_buff *skb,
 static void tx_hwtstamp(struct mac_prv_data *pdata,
 			struct skb_shared_hwtstamps *shhwtstamp)
 {
-	if(!pdata->ptp_tx_skb)
+	if (!pdata->ptp_tx_skb)
 		return;
-	
+
 	/* Marking Tx Timestamp complete */
 	if (!shhwtstamp->hwtstamp.tv64)
 		shhwtstamp->hwtstamp = ktime_get_real();
@@ -360,7 +360,7 @@ int xgmac_tx_hwts(void *pdev, struct sk_buff *skb)
 		/* Currently supporting only Master Mode */
 		if (IS_2STEP(pdata)) {
 			mac_dbg("2-Step\n");
-			
+
 			pdata->ptp_tx_skb = skb_get(skb);
 
 			/* PTP Sync if we are Master TTSE=1 OSTC=0, OSTPA=0 */
@@ -617,14 +617,14 @@ static void xgmac_extts_isr_handler(struct mac_prv_data *pdata,
 				    u32 tstamp_sts)
 {
 	u8 val = MAC_GET_VAL(tstamp_sts, MAC_TSTAMP_STSR, ATSSTN);
-#ifdef CONFIG_PTP_1588_CLOCK	
+#ifdef CONFIG_PTP_1588_CLOCK
 	struct ptp_clock_event event;
 
 	if (val & AUX_TRIG_0) {
 		if (pdata->exts0_enabled) {
 			event.type = PTP_CLOCK_EXTTS;
 			event.index = 0;
-			event.timestamp = xgmac_get_auxtimestamp(pdata);		
+			event.timestamp = xgmac_get_auxtimestamp(pdata);
 			ptp_clock_event(pdata->ptp_clock, &event);
 		}
 	}
@@ -633,11 +633,12 @@ static void xgmac_extts_isr_handler(struct mac_prv_data *pdata,
 		if (pdata->exts1_enabled) {
 			event.type = PTP_CLOCK_EXTTS;
 			event.index = 1;
-			event.timestamp = xgmac_get_auxtimestamp(pdata);		
+			event.timestamp = xgmac_get_auxtimestamp(pdata);
 			ptp_clock_event(pdata->ptp_clock, &event);
 		}
 	}
-#endif	
+
+#endif
 }
 
 /* This API performs the required steps for enabling PTP support.
@@ -696,10 +697,12 @@ int xgmac_get_ts_info(void *pdev,
 				   SOF_TIMESTAMPING_RAW_HARDWARE;
 
 #ifdef CONFIG_PTP_1588_CLOCK
+
 	if (pdata->ptp_clock)
 		ts_info->phc_index = ptp_clock_index(pdata->ptp_clock);
 	else
 		ts_info->phc_index = -1;
+
 #endif
 
 	ts_info->tx_types = (1 << HWTSTAMP_TX_OFF) | (1 << HWTSTAMP_TX_ON);
